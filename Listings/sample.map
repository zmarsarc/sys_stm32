Component: ARM Compiler 5.06 update 4 (build 422) Tool: armlink [4d35d2]

==============================================================================

Section Cross References

    main.o(i.main) refers to system_stm32f10x.o(i.SystemInit) for SystemInit
    main.o(i.main) refers to system_stm32f10x.o(i.SystemCoreClockUpdate) for SystemCoreClockUpdate
    main.o(i.main) refers to rtx_kernel.o(i.osKernelInitialize) for osKernelInitialize
    main.o(i.main) refers to rtx_kernel.o(i.osKernelStart) for osKernelStart
    usart.o(i.USART_1_IRS_callback) refers to rtx_evflags.o(i.osEventFlagsSet) for osEventFlagsSet
    usart.o(i.USART_1_IRS_callback) refers to usart.o(.data) for .data
    usart.o(i.USART_1_init) refers to rtx_evflags.o(i.osEventFlagsNew) for osEventFlagsNew
    usart.o(i.USART_1_init) refers to usart.o(i.USART_default_init) for USART_default_init
    usart.o(i.USART_1_init) refers to usart.o(.data) for .data
    usart.o(i.USART_1_init) refers to usart.o(i.USART_1_IRS_callback) for USART_1_IRS_callback
    usart.o(i.USART_1_init) refers to usart_stm32f10x.o(.constdata) for Driver_USART1
    dependent_io.o(i.__device_stdio_callback) refers to rtx_evflags.o(i.osEventFlagsSet) for osEventFlagsSet
    dependent_io.o(i.__device_stdio_callback) refers to dependent_io.o(.data) for .data
    dependent_io.o(i.device_stdio_init) refers to usart_stm32f10x.o(.constdata) for Driver_USART1
    dependent_io.o(i.device_stdio_init) refers to dependent_io.o(i.__device_stdio_callback) for __device_stdio_callback
    dependent_io.o(i.fgetc) refers to dependent_io.o(i.stdin_getchar) for stdin_getchar
    dependent_io.o(i.fputc) refers to dependent_io.o(i.stderr_putchar) for stderr_putchar
    dependent_io.o(i.fputc) refers to dependent_io.o(i.stdout_putchar) for stdout_putchar
    dependent_io.o(i.stderr_putchar) refers to rtx_evflags.o(i.osEventFlagsWait) for osEventFlagsWait
    dependent_io.o(i.stderr_putchar) refers to usart_stm32f10x.o(.constdata) for Driver_USART1
    dependent_io.o(i.stderr_putchar) refers to dependent_io.o(.data) for .data
    dependent_io.o(i.stdin_getchar) refers to dependent_io.o(.data) for .data
    dependent_io.o(i.stdout_putchar) refers to dependent_io.o(.data) for .data
    dependent_io.o(i.sys_stdio_manage_init) refers to rtx_evflags.o(i.osEventFlagsNew) for osEventFlagsNew
    dependent_io.o(i.sys_stdio_manage_init) refers to rtx_thread.o(i.osThreadNew) for osThreadNew
    dependent_io.o(i.sys_stdio_manage_init) refers to dependent_io.o(.data) for .data
    dependent_io.o(i.sys_stdio_manage_init) refers to dependent_io.o(i.__device_stdio_in) for __device_stdio_in
    dependent_io.o(i.sys_stdio_manage_init) refers to dependent_io.o(i.__device_stdio_out) for __device_stdio_out
    dependent_io.o(.data) refers to dependent_io.o(.bss) for __DEVICE_IN_BUFFER
    dependent_io.o(.data) refers to dependent_io.o(.bss) for __DEVICE_OUT_BUFFER
    irq_cm3.o(.text) refers to rtx_system.o(i.osRtxPendSV_Handler) for osRtxPendSV_Handler
    irq_cm3.o(.text) refers to rtx_system.o(i.osRtxTick_Handler) for osRtxTick_Handler
    irq_cm3.o(.text) refers to rtx_kernel.o(.data.os) for osRtxInfo
    irq_cm3.o(.text) refers to rtx_lib.o(.constdata) for osRtxUserSVC
    rtx_delay.o(i.osDelay) refers to rtx_evr.o(i.EvrRtxThreadDelay) for EvrRtxThreadDelay
    rtx_delay.o(i.osDelay) refers to rtx_evr.o(i.EvrRtxThreadError) for EvrRtxThreadError
    rtx_delay.o(i.osDelay) refers to rtx_delay.o(i.svcRtxDelay) for svcRtxDelay
    rtx_delay.o(i.osDelayUntil) refers to rtx_evr.o(i.EvrRtxThreadDelayUntil) for EvrRtxThreadDelayUntil
    rtx_delay.o(i.osDelayUntil) refers to rtx_evr.o(i.EvrRtxThreadError) for EvrRtxThreadError
    rtx_delay.o(i.osDelayUntil) refers to rtx_delay.o(i.svcRtxDelayUntil) for svcRtxDelayUntil
    rtx_delay.o(i.svcRtxDelay) refers to rtx_thread.o(i.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(i.svcRtxDelayUntil) refers to rtx_evr.o(i.EvrRtxThreadError) for EvrRtxThreadError
    rtx_delay.o(i.svcRtxDelayUntil) refers to rtx_thread.o(i.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(i.svcRtxDelayUntil) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_evflags.o(i.EventFlagsCheck) refers to rtx_evflags.o(.emb_text) for __asm___13_rtx_evflags_c_736f7bde__atomic_chk32_all
    rtx_evflags.o(i.EventFlagsClear) refers to rtx_evflags.o(.emb_text) for __asm___13_rtx_evflags_c_736f7bde__atomic_clr32
    rtx_evflags.o(i.EventFlagsSet) refers to rtx_evflags.o(.emb_text) for __asm___13_rtx_evflags_c_736f7bde__atomic_set32
    rtx_evflags.o(i.osEventFlagsClear) refers to rtx_evr.o(i.EvrRtxEventFlagsClear) for EvrRtxEventFlagsClear
    rtx_evflags.o(i.osEventFlagsClear) refers to rtx_evflags.o(i.svcRtxEventFlagsClear) for svcRtxEventFlagsClear
    rtx_evflags.o(i.osEventFlagsDelete) refers to rtx_evr.o(i.EvrRtxEventFlagsDelete) for EvrRtxEventFlagsDelete
    rtx_evflags.o(i.osEventFlagsDelete) refers to rtx_evr.o(i.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(i.osEventFlagsDelete) refers to rtx_evflags.o(i.svcRtxEventFlagsDelete) for svcRtxEventFlagsDelete
    rtx_evflags.o(i.osEventFlagsGet) refers to rtx_evflags.o(i.svcRtxEventFlagsGet) for svcRtxEventFlagsGet
    rtx_evflags.o(i.osEventFlagsGetName) refers to rtx_evr.o(i.EvrRtxEventFlagsGetName) for EvrRtxEventFlagsGetName
    rtx_evflags.o(i.osEventFlagsGetName) refers to rtx_evflags.o(i.svcRtxEventFlagsGetName) for svcRtxEventFlagsGetName
    rtx_evflags.o(i.osEventFlagsNew) refers to rtx_evr.o(i.EvrRtxEventFlagsNew) for EvrRtxEventFlagsNew
    rtx_evflags.o(i.osEventFlagsNew) refers to rtx_evr.o(i.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(i.osEventFlagsNew) refers to rtx_evflags.o(i.svcRtxEventFlagsNew) for svcRtxEventFlagsNew
    rtx_evflags.o(i.osEventFlagsSet) refers to rtx_evr.o(i.EvrRtxEventFlagsSet) for EvrRtxEventFlagsSet
    rtx_evflags.o(i.osEventFlagsSet) refers to rtx_evr.o(i.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(i.osEventFlagsSet) refers to rtx_evflags.o(i.EventFlagsSet) for EventFlagsSet
    rtx_evflags.o(i.osEventFlagsSet) refers to rtx_system.o(i.osRtxPostProcess) for osRtxPostProcess
    rtx_evflags.o(i.osEventFlagsSet) refers to rtx_evr.o(i.EvrRtxEventFlagsSetDone) for EvrRtxEventFlagsSetDone
    rtx_evflags.o(i.osEventFlagsSet) refers to rtx_evflags.o(i.svcRtxEventFlagsSet) for svcRtxEventFlagsSet
    rtx_evflags.o(i.osEventFlagsWait) refers to rtx_evr.o(i.EvrRtxEventFlagsWait) for EvrRtxEventFlagsWait
    rtx_evflags.o(i.osEventFlagsWait) refers to rtx_evr.o(i.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(i.osEventFlagsWait) refers to rtx_evflags.o(i.EventFlagsCheck) for EventFlagsCheck
    rtx_evflags.o(i.osEventFlagsWait) refers to rtx_evr.o(i.EvrRtxEventFlagsWaitCompleted) for EvrRtxEventFlagsWaitCompleted
    rtx_evflags.o(i.osEventFlagsWait) refers to rtx_evr.o(i.EvrRtxEventFlagsWaitNotCompleted) for EvrRtxEventFlagsWaitNotCompleted
    rtx_evflags.o(i.osEventFlagsWait) refers to rtx_evflags.o(i.svcRtxEventFlagsWait) for svcRtxEventFlagsWait
    rtx_evflags.o(i.osRtxEventFlagsPostProcess) refers to rtx_evflags.o(i.EventFlagsCheck) for EventFlagsCheck
    rtx_evflags.o(i.osRtxEventFlagsPostProcess) refers to rtx_thread.o(i.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_evflags.o(i.osRtxEventFlagsPostProcess) refers to rtx_thread.o(i.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_evflags.o(i.osRtxEventFlagsPostProcess) refers to rtx_evr.o(i.EvrRtxEventFlagsWaitCompleted) for EvrRtxEventFlagsWaitCompleted
    rtx_evflags.o(i.svcRtxEventFlagsClear) refers to rtx_evr.o(i.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(i.svcRtxEventFlagsClear) refers to rtx_evflags.o(i.EventFlagsClear) for EventFlagsClear
    rtx_evflags.o(i.svcRtxEventFlagsClear) refers to rtx_evr.o(i.EvrRtxEventFlagsClearDone) for EvrRtxEventFlagsClearDone
    rtx_evflags.o(i.svcRtxEventFlagsDelete) refers to rtx_evr.o(i.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(i.svcRtxEventFlagsDelete) refers to rtx_thread.o(i.osRtxThreadListGet) for osRtxThreadListGet
    rtx_evflags.o(i.svcRtxEventFlagsDelete) refers to rtx_thread.o(i.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_evflags.o(i.svcRtxEventFlagsDelete) refers to rtx_thread.o(i.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_evflags.o(i.svcRtxEventFlagsDelete) refers to rtx_mempool.o(i.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_evflags.o(i.svcRtxEventFlagsDelete) refers to rtx_memory.o(i.osRtxMemoryFree) for osRtxMemoryFree
    rtx_evflags.o(i.svcRtxEventFlagsDelete) refers to rtx_evr.o(i.EvrRtxEventFlagsDestroyed) for EvrRtxEventFlagsDestroyed
    rtx_evflags.o(i.svcRtxEventFlagsDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_evflags.o(i.svcRtxEventFlagsGet) refers to rtx_evr.o(i.EvrRtxEventFlagsGet) for EvrRtxEventFlagsGet
    rtx_evflags.o(i.svcRtxEventFlagsGetName) refers to rtx_evr.o(i.EvrRtxEventFlagsGetName) for EvrRtxEventFlagsGetName
    rtx_evflags.o(i.svcRtxEventFlagsNew) refers to rtx_evr.o(i.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(i.svcRtxEventFlagsNew) refers to rtx_evr.o(i.EvrRtxEventFlagsCreated) for EvrRtxEventFlagsCreated
    rtx_evflags.o(i.svcRtxEventFlagsNew) refers to rtx_mempool.o(i.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_evflags.o(i.svcRtxEventFlagsNew) refers to rtx_memory.o(i.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_evflags.o(i.svcRtxEventFlagsNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_evflags.o(i.svcRtxEventFlagsNew) refers to rtx_evflags.o(i.osRtxEventFlagsPostProcess) for osRtxEventFlagsPostProcess
    rtx_evflags.o(i.svcRtxEventFlagsSet) refers to rtx_evr.o(i.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(i.svcRtxEventFlagsSet) refers to rtx_evflags.o(i.EventFlagsSet) for EventFlagsSet
    rtx_evflags.o(i.svcRtxEventFlagsSet) refers to rtx_evflags.o(i.EventFlagsCheck) for EventFlagsCheck
    rtx_evflags.o(i.svcRtxEventFlagsSet) refers to rtx_thread.o(i.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_evflags.o(i.svcRtxEventFlagsSet) refers to rtx_thread.o(i.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_evflags.o(i.svcRtxEventFlagsSet) refers to rtx_evr.o(i.EvrRtxEventFlagsWaitCompleted) for EvrRtxEventFlagsWaitCompleted
    rtx_evflags.o(i.svcRtxEventFlagsSet) refers to rtx_thread.o(i.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_evflags.o(i.svcRtxEventFlagsSet) refers to rtx_evr.o(i.EvrRtxEventFlagsSetDone) for EvrRtxEventFlagsSetDone
    rtx_evflags.o(i.svcRtxEventFlagsWait) refers to rtx_evr.o(i.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(i.svcRtxEventFlagsWait) refers to rtx_evflags.o(i.EventFlagsCheck) for EventFlagsCheck
    rtx_evflags.o(i.svcRtxEventFlagsWait) refers to rtx_evr.o(i.EvrRtxEventFlagsWaitCompleted) for EvrRtxEventFlagsWaitCompleted
    rtx_evflags.o(i.svcRtxEventFlagsWait) refers to rtx_evr.o(i.EvrRtxEventFlagsWaitPending) for EvrRtxEventFlagsWaitPending
    rtx_evflags.o(i.svcRtxEventFlagsWait) refers to rtx_thread.o(i.osRtxThreadListPut) for osRtxThreadListPut
    rtx_evflags.o(i.svcRtxEventFlagsWait) refers to rtx_thread.o(i.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_evflags.o(i.svcRtxEventFlagsWait) refers to rtx_evr.o(i.EvrRtxEventFlagsWaitNotCompleted) for EvrRtxEventFlagsWaitNotCompleted
    rtx_evflags.o(i.svcRtxEventFlagsWait) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(i.KernelBlock) refers to rtx_system.o(i.osRtxSysTimerDisable) for osRtxSysTimerDisable
    rtx_kernel.o(i.KernelBlock) refers to rtx_kernel.o(.data.os) for .data.os
    rtx_kernel.o(i.KernelUnblock) refers to rtx_kernel.o(i.ExtTick_EnableIRQ) for ExtTick_EnableIRQ
    rtx_kernel.o(i.KernelUnblock) refers to rtx_system.o(i.osRtxSysTimerEnable) for osRtxSysTimerEnable
    rtx_kernel.o(i.KernelUnblock) refers to rtx_kernel.o(.data.os) for .data.os
    rtx_kernel.o(i.osKernelGetInfo) refers to rtx_evr.o(i.EvrRtxKernelGetInfo) for EvrRtxKernelGetInfo
    rtx_kernel.o(i.osKernelGetInfo) refers to rtx_evr.o(i.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(i.osKernelGetInfo) refers to rtx_kernel.o(i.svcRtxKernelGetInfo) for svcRtxKernelGetInfo
    rtx_kernel.o(i.osKernelGetState) refers to rtx_evr.o(i.EvrRtxKernelGetState) for EvrRtxKernelGetState
    rtx_kernel.o(i.osKernelGetState) refers to rtx_kernel.o(i.svcRtxKernelGetState) for svcRtxKernelGetState
    rtx_kernel.o(i.osKernelGetSysTimerCount) refers to rtx_kernel.o(i.svcRtxKernelGetSysTimerCount) for svcRtxKernelGetSysTimerCount
    rtx_kernel.o(i.osKernelGetSysTimerFreq) refers to rtx_kernel.o(i.svcRtxKernelGetSysTimerFreq) for svcRtxKernelGetSysTimerFreq
    rtx_kernel.o(i.osKernelGetTickCount) refers to rtx_evr.o(i.EvrRtxKernelGetTickCount) for EvrRtxKernelGetTickCount
    rtx_kernel.o(i.osKernelGetTickCount) refers to rtx_kernel.o(i.svcRtxKernelGetTickCount) for svcRtxKernelGetTickCount
    rtx_kernel.o(i.osKernelGetTickFreq) refers to rtx_evr.o(i.EvrRtxKernelGetTickFreq) for EvrRtxKernelGetTickFreq
    rtx_kernel.o(i.osKernelGetTickFreq) refers to rtx_kernel.o(i.svcRtxKernelGetTickFreq) for svcRtxKernelGetTickFreq
    rtx_kernel.o(i.osKernelInitialize) refers to rtx_evr.o(i.EvrRtxKernelInitialize) for EvrRtxKernelInitialize
    rtx_kernel.o(i.osKernelInitialize) refers to rtx_evr.o(i.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(i.osKernelInitialize) refers to rtx_kernel.o(i.svcRtxKernelInitialize) for svcRtxKernelInitialize
    rtx_kernel.o(i.osKernelLock) refers to rtx_evr.o(i.EvrRtxKernelLock) for EvrRtxKernelLock
    rtx_kernel.o(i.osKernelLock) refers to rtx_evr.o(i.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(i.osKernelLock) refers to rtx_kernel.o(i.svcRtxKernelLock) for svcRtxKernelLock
    rtx_kernel.o(i.osKernelRestoreLock) refers to rtx_evr.o(i.EvrRtxKernelRestoreLock) for EvrRtxKernelRestoreLock
    rtx_kernel.o(i.osKernelRestoreLock) refers to rtx_evr.o(i.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(i.osKernelRestoreLock) refers to rtx_kernel.o(i.svcRtxKernelRestoreLock) for svcRtxKernelRestoreLock
    rtx_kernel.o(i.osKernelResume) refers to rtx_evr.o(i.EvrRtxKernelResume) for EvrRtxKernelResume
    rtx_kernel.o(i.osKernelResume) refers to rtx_evr.o(i.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(i.osKernelResume) refers to rtx_kernel.o(i.svcRtxKernelResume) for svcRtxKernelResume
    rtx_kernel.o(i.osKernelStart) refers to rtx_evr.o(i.EvrRtxKernelStart) for EvrRtxKernelStart
    rtx_kernel.o(i.osKernelStart) refers to rtx_evr.o(i.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(i.osKernelStart) refers to rtx_kernel.o(i.svcRtxKernelStart) for svcRtxKernelStart
    rtx_kernel.o(i.osKernelSuspend) refers to rtx_evr.o(i.EvrRtxKernelSuspend) for EvrRtxKernelSuspend
    rtx_kernel.o(i.osKernelSuspend) refers to rtx_evr.o(i.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(i.osKernelSuspend) refers to rtx_kernel.o(i.svcRtxKernelSuspend) for svcRtxKernelSuspend
    rtx_kernel.o(i.osKernelUnlock) refers to rtx_evr.o(i.EvrRtxKernelUnlock) for EvrRtxKernelUnlock
    rtx_kernel.o(i.osKernelUnlock) refers to rtx_evr.o(i.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(i.osKernelUnlock) refers to rtx_kernel.o(i.svcRtxKernelUnlock) for svcRtxKernelUnlock
    rtx_kernel.o(i.svcRtxKernelGetInfo) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_kernel.o(i.svcRtxKernelGetInfo) refers to rtx_evr.o(i.EvrRtxKernelInfoRetrieved) for EvrRtxKernelInfoRetrieved
    rtx_kernel.o(i.svcRtxKernelGetState) refers to rtx_evr.o(i.EvrRtxKernelGetState) for EvrRtxKernelGetState
    rtx_kernel.o(i.svcRtxKernelGetState) refers to rtx_kernel.o(.data.os) for .data.os
    rtx_kernel.o(i.svcRtxKernelGetSysTimerCount) refers to rtx_system.o(i.osRtxSysTimerGetCount) for osRtxSysTimerGetCount
    rtx_kernel.o(i.svcRtxKernelGetSysTimerCount) refers to rtx_evr.o(i.EvrRtxKernelGetSysTimerCount) for EvrRtxKernelGetSysTimerCount
    rtx_kernel.o(i.svcRtxKernelGetSysTimerFreq) refers to rtx_system.o(i.osRtxSysTimerGetFreq) for osRtxSysTimerGetFreq
    rtx_kernel.o(i.svcRtxKernelGetSysTimerFreq) refers to rtx_evr.o(i.EvrRtxKernelGetSysTimerFreq) for EvrRtxKernelGetSysTimerFreq
    rtx_kernel.o(i.svcRtxKernelGetTickCount) refers to rtx_evr.o(i.EvrRtxKernelGetTickCount) for EvrRtxKernelGetTickCount
    rtx_kernel.o(i.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.data.os) for .data.os
    rtx_kernel.o(i.svcRtxKernelGetTickFreq) refers to rtx_evr.o(i.EvrRtxKernelGetTickFreq) for EvrRtxKernelGetTickFreq
    rtx_kernel.o(i.svcRtxKernelGetTickFreq) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(i.svcRtxKernelInitialize) refers to rtx_evr.o(i.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(i.svcRtxKernelInitialize) refers to rtx_evr.o(i.EvrRtxKernelInitializeCompleted) for EvrRtxKernelInitializeCompleted
    rtx_kernel.o(i.svcRtxKernelInitialize) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    rtx_kernel.o(i.svcRtxKernelInitialize) refers to rtx_memory.o(i.osRtxMemoryInit) for osRtxMemoryInit
    rtx_kernel.o(i.svcRtxKernelInitialize) refers to rtx_mempool.o(i.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_kernel.o(i.svcRtxKernelInitialize) refers to rtx_kernel.o(.data.os) for .data.os
    rtx_kernel.o(i.svcRtxKernelInitialize) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(i.svcRtxKernelLock) refers to rtx_evr.o(i.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(i.svcRtxKernelLock) refers to rtx_evr.o(i.EvrRtxKernelLocked) for EvrRtxKernelLocked
    rtx_kernel.o(i.svcRtxKernelLock) refers to rtx_kernel.o(.data.os) for .data.os
    rtx_kernel.o(i.svcRtxKernelRestoreLock) refers to rtx_evr.o(i.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(i.svcRtxKernelRestoreLock) refers to rtx_evr.o(i.EvrRtxKernelLockRestored) for EvrRtxKernelLockRestored
    rtx_kernel.o(i.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.data.os) for .data.os
    rtx_kernel.o(i.svcRtxKernelResume) refers to rtx_evr.o(i.EvrRtxKernelResumed) for EvrRtxKernelResumed
    rtx_kernel.o(i.svcRtxKernelResume) refers to rtx_thread.o(i.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_kernel.o(i.svcRtxKernelResume) refers to rtx_timer.o(i.osRtxTimerTick) for osRtxTimerTick
    rtx_kernel.o(i.svcRtxKernelResume) refers to rtx_thread.o(i.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_kernel.o(i.svcRtxKernelResume) refers to rtx_kernel.o(i.KernelUnblock) for KernelUnblock
    rtx_kernel.o(i.svcRtxKernelResume) refers to rtx_kernel.o(.data.os) for .data.os
    rtx_kernel.o(i.svcRtxKernelStart) refers to rtx_evr.o(i.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(i.svcRtxKernelStart) refers to rtx_thread.o(i.svcRtxThreadNew) for svcRtxThreadNew
    rtx_kernel.o(i.svcRtxKernelStart) refers to rtx_thread.o(i.osRtxThreadListGet) for osRtxThreadListGet
    rtx_kernel.o(i.svcRtxKernelStart) refers to rtx_thread.o(i.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_kernel.o(i.svcRtxKernelStart) refers to rtx_system.o(i.osRtxSysTimerSetup) for osRtxSysTimerSetup
    rtx_kernel.o(i.svcRtxKernelStart) refers to rtx_kernel.o(i.ExtTick_EnableIRQ) for ExtTick_EnableIRQ
    rtx_kernel.o(i.svcRtxKernelStart) refers to rtx_system.o(i.osRtxSysTimerEnable) for osRtxSysTimerEnable
    rtx_kernel.o(i.svcRtxKernelStart) refers to rtx_evr.o(i.EvrRtxKernelStarted) for EvrRtxKernelStarted
    rtx_kernel.o(i.svcRtxKernelStart) refers to rtx_kernel.o(.data.os) for .data.os
    rtx_kernel.o(i.svcRtxKernelStart) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(i.svcRtxKernelStart) refers to rtx_config.o(i.osRtxIdleThread) for osRtxIdleThread
    rtx_kernel.o(i.svcRtxKernelStart) refers to system_stm32f10x.o(.data) for SystemCoreClock
    rtx_kernel.o(i.svcRtxKernelSuspend) refers to rtx_evr.o(i.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(i.svcRtxKernelSuspend) refers to rtx_kernel.o(i.KernelBlock) for KernelBlock
    rtx_kernel.o(i.svcRtxKernelSuspend) refers to rtx_evr.o(i.EvrRtxKernelSuspended) for EvrRtxKernelSuspended
    rtx_kernel.o(i.svcRtxKernelSuspend) refers to rtx_kernel.o(.data.os) for .data.os
    rtx_kernel.o(i.svcRtxKernelUnlock) refers to rtx_evr.o(i.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(i.svcRtxKernelUnlock) refers to rtx_evr.o(i.EvrRtxKernelUnlocked) for EvrRtxKernelUnlocked
    rtx_kernel.o(i.svcRtxKernelUnlock) refers to rtx_kernel.o(.data.os) for .data.os
    rtx_kernel.o(.data) refers to irq_cm3.o(.constdata) for irqRtxLib
    rtx_kernel.o(.data.os) refers to rtx_kernel.o(.conststrlit) for .conststrlit
    rtx_lib.o(i.__user_perthread_libspace) refers to rtx_lib.o(i.os_kernel_is_active) for os_kernel_is_active
    rtx_lib.o(i.__user_perthread_libspace) refers to rtx_thread.o(i.osThreadGetId) for osThreadGetId
    rtx_lib.o(i.__user_perthread_libspace) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_lib.o(i.__user_perthread_libspace) refers to rtx_lib.o(.bss.os) for .bss.os
    rtx_lib.o(i._mutex_acquire) refers to rtx_lib.o(i.os_kernel_is_active) for os_kernel_is_active
    rtx_lib.o(i._mutex_acquire) refers to rtx_mutex.o(i.osMutexAcquire) for osMutexAcquire
    rtx_lib.o(i._mutex_free) refers to rtx_mutex.o(i.osMutexDelete) for osMutexDelete
    rtx_lib.o(i._mutex_initialize) refers to rtx_mutex.o(i.osMutexNew) for osMutexNew
    rtx_lib.o(i._mutex_initialize) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_lib.o(i._mutex_release) refers to rtx_lib.o(i.os_kernel_is_active) for os_kernel_is_active
    rtx_lib.o(i._mutex_release) refers to rtx_mutex.o(i.osMutexRelease) for osMutexRelease
    rtx_lib.o(i._platform_post_stackheap_init) refers to rtx_kernel.o(i.osKernelInitialize) for osKernelInitialize
    rtx_lib.o(i.os_kernel_is_active) refers to rtx_kernel.o(i.osKernelGetState) for osKernelGetState
    rtx_lib.o(i.os_kernel_is_active) refers to rtx_lib.o(.data) for .data
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.thread.cb) for os_idle_thread_cb
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.thread.stack) for os_idle_thread_stack
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.thread.cb) for os_timer_thread_cb
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.thread.stack) for os_timer_thread_stack
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.msgqueue.cb) for os_timer_mq_cb
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.msgqueue.mem) for os_timer_mq_data
    rtx_lib.o(.data) refers to irq_cm3.o(.constdata) for irqRtxLib
    rtx_lib.o(.rodata) refers to rtx_lib.o(.bss.os) for os_isr_queue
    rtx_lib.o(.rodata) refers to rtx_lib.o(.bss.os) for os_mem
    rtx_lib.o(.rodata) refers to rtx_lib.o(.constdata) for os_idle_thread_attr
    rtx_lib.o(.rodata) refers to rtx_lib.o(.constdata) for os_timer_thread_attr
    rtx_lib.o(.rodata) refers to rtx_lib.o(.constdata) for os_timer_mq_attr
    rtx_memory.o(i.osRtxMemoryAlloc) refers to rtx_evr.o(i.EvrRtxMemoryAlloc) for EvrRtxMemoryAlloc
    rtx_memory.o(i.osRtxMemoryFree) refers to rtx_evr.o(i.EvrRtxMemoryFree) for EvrRtxMemoryFree
    rtx_memory.o(i.osRtxMemoryInit) refers to rtx_evr.o(i.EvrRtxMemoryInit) for EvrRtxMemoryInit
    rtx_mempool.o(i.osMemoryPoolAlloc) refers to rtx_evr.o(i.EvrRtxMemoryPoolAlloc) for EvrRtxMemoryPoolAlloc
    rtx_mempool.o(i.osMemoryPoolAlloc) refers to rtx_evr.o(i.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(i.osMemoryPoolAlloc) refers to rtx_mempool.o(i.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(i.osMemoryPoolAlloc) refers to rtx_evr.o(i.EvrRtxMemoryPoolAllocated) for EvrRtxMemoryPoolAllocated
    rtx_mempool.o(i.osMemoryPoolAlloc) refers to rtx_evr.o(i.EvrRtxMemoryPoolAllocFailed) for EvrRtxMemoryPoolAllocFailed
    rtx_mempool.o(i.osMemoryPoolAlloc) refers to rtx_mempool.o(i.svcRtxMemoryPoolAlloc) for svcRtxMemoryPoolAlloc
    rtx_mempool.o(i.osMemoryPoolDelete) refers to rtx_evr.o(i.EvrRtxMemoryPoolDelete) for EvrRtxMemoryPoolDelete
    rtx_mempool.o(i.osMemoryPoolDelete) refers to rtx_evr.o(i.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(i.osMemoryPoolDelete) refers to rtx_mempool.o(i.svcRtxMemoryPoolDelete) for svcRtxMemoryPoolDelete
    rtx_mempool.o(i.osMemoryPoolFree) refers to rtx_evr.o(i.EvrRtxMemoryPoolFree) for EvrRtxMemoryPoolFree
    rtx_mempool.o(i.osMemoryPoolFree) refers to rtx_evr.o(i.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(i.osMemoryPoolFree) refers to rtx_mempool.o(i.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(i.osMemoryPoolFree) refers to rtx_evr.o(i.EvrRtxMemoryPoolFreeFailed) for EvrRtxMemoryPoolFreeFailed
    rtx_mempool.o(i.osMemoryPoolFree) refers to rtx_system.o(i.osRtxPostProcess) for osRtxPostProcess
    rtx_mempool.o(i.osMemoryPoolFree) refers to rtx_evr.o(i.EvrRtxMemoryPoolDeallocated) for EvrRtxMemoryPoolDeallocated
    rtx_mempool.o(i.osMemoryPoolFree) refers to rtx_mempool.o(i.svcRtxMemoryPoolFree) for svcRtxMemoryPoolFree
    rtx_mempool.o(i.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(i.svcRtxMemoryPoolGetBlockSize) for svcRtxMemoryPoolGetBlockSize
    rtx_mempool.o(i.osMemoryPoolGetCapacity) refers to rtx_mempool.o(i.svcRtxMemoryPoolGetCapacity) for svcRtxMemoryPoolGetCapacity
    rtx_mempool.o(i.osMemoryPoolGetCount) refers to rtx_mempool.o(i.svcRtxMemoryPoolGetCount) for svcRtxMemoryPoolGetCount
    rtx_mempool.o(i.osMemoryPoolGetName) refers to rtx_evr.o(i.EvrRtxMemoryPoolGetName) for EvrRtxMemoryPoolGetName
    rtx_mempool.o(i.osMemoryPoolGetName) refers to rtx_mempool.o(i.svcRtxMemoryPoolGetName) for svcRtxMemoryPoolGetName
    rtx_mempool.o(i.osMemoryPoolGetSpace) refers to rtx_mempool.o(i.svcRtxMemoryPoolGetSpace) for svcRtxMemoryPoolGetSpace
    rtx_mempool.o(i.osMemoryPoolNew) refers to rtx_evr.o(i.EvrRtxMemoryPoolNew) for EvrRtxMemoryPoolNew
    rtx_mempool.o(i.osMemoryPoolNew) refers to rtx_evr.o(i.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(i.osMemoryPoolNew) refers to rtx_mempool.o(i.svcRtxMemoryPoolNew) for svcRtxMemoryPoolNew
    rtx_mempool.o(i.osRtxMemoryPoolAlloc) refers to rtx_mempool.o(.emb_text) for __asm___13_rtx_mempool_c_7914b4c7__atomic_inc32_lt
    rtx_mempool.o(i.osRtxMemoryPoolAlloc) refers to rtx_evr.o(i.EvrRtxMemoryBlockAlloc) for EvrRtxMemoryBlockAlloc
    rtx_mempool.o(i.osRtxMemoryPoolFree) refers to rtx_evr.o(i.EvrRtxMemoryBlockFree) for EvrRtxMemoryBlockFree
    rtx_mempool.o(i.osRtxMemoryPoolFree) refers to rtx_mempool.o(.emb_text) for __asm___13_rtx_mempool_c_7914b4c7__atomic_dec32_nz
    rtx_mempool.o(i.osRtxMemoryPoolInit) refers to rtx_evr.o(i.EvrRtxMemoryBlockInit) for EvrRtxMemoryBlockInit
    rtx_mempool.o(i.osRtxMemoryPoolPostProcess) refers to rtx_mempool.o(i.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(i.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(i.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(i.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(i.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(i.osRtxMemoryPoolPostProcess) refers to rtx_evr.o(i.EvrRtxMemoryPoolAllocated) for EvrRtxMemoryPoolAllocated
    rtx_mempool.o(i.svcRtxMemoryPoolAlloc) refers to rtx_evr.o(i.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(i.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(i.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(i.svcRtxMemoryPoolAlloc) refers to rtx_evr.o(i.EvrRtxMemoryPoolAllocated) for EvrRtxMemoryPoolAllocated
    rtx_mempool.o(i.svcRtxMemoryPoolAlloc) refers to rtx_evr.o(i.EvrRtxMemoryPoolAllocPending) for EvrRtxMemoryPoolAllocPending
    rtx_mempool.o(i.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(i.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mempool.o(i.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(i.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mempool.o(i.svcRtxMemoryPoolAlloc) refers to rtx_evr.o(i.EvrRtxMemoryPoolAllocFailed) for EvrRtxMemoryPoolAllocFailed
    rtx_mempool.o(i.svcRtxMemoryPoolAlloc) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(i.svcRtxMemoryPoolDelete) refers to rtx_evr.o(i.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(i.svcRtxMemoryPoolDelete) refers to rtx_thread.o(i.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(i.svcRtxMemoryPoolDelete) refers to rtx_thread.o(i.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(i.svcRtxMemoryPoolDelete) refers to rtx_thread.o(i.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mempool.o(i.svcRtxMemoryPoolDelete) refers to rtx_memory.o(i.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(i.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(i.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(i.svcRtxMemoryPoolDelete) refers to rtx_evr.o(i.EvrRtxMemoryPoolDestroyed) for EvrRtxMemoryPoolDestroyed
    rtx_mempool.o(i.svcRtxMemoryPoolDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(i.svcRtxMemoryPoolFree) refers to rtx_evr.o(i.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(i.svcRtxMemoryPoolFree) refers to rtx_mempool.o(i.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(i.svcRtxMemoryPoolFree) refers to rtx_evr.o(i.EvrRtxMemoryPoolFreeFailed) for EvrRtxMemoryPoolFreeFailed
    rtx_mempool.o(i.svcRtxMemoryPoolFree) refers to rtx_evr.o(i.EvrRtxMemoryPoolDeallocated) for EvrRtxMemoryPoolDeallocated
    rtx_mempool.o(i.svcRtxMemoryPoolFree) refers to rtx_mempool.o(i.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(i.svcRtxMemoryPoolFree) refers to rtx_thread.o(i.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(i.svcRtxMemoryPoolFree) refers to rtx_thread.o(i.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(i.svcRtxMemoryPoolFree) refers to rtx_evr.o(i.EvrRtxMemoryPoolAllocated) for EvrRtxMemoryPoolAllocated
    rtx_mempool.o(i.svcRtxMemoryPoolGetBlockSize) refers to rtx_evr.o(i.EvrRtxMemoryPoolGetBlockSize) for EvrRtxMemoryPoolGetBlockSize
    rtx_mempool.o(i.svcRtxMemoryPoolGetCapacity) refers to rtx_evr.o(i.EvrRtxMemoryPoolGetCapacity) for EvrRtxMemoryPoolGetCapacity
    rtx_mempool.o(i.svcRtxMemoryPoolGetCount) refers to rtx_evr.o(i.EvrRtxMemoryPoolGetCount) for EvrRtxMemoryPoolGetCount
    rtx_mempool.o(i.svcRtxMemoryPoolGetName) refers to rtx_evr.o(i.EvrRtxMemoryPoolGetName) for EvrRtxMemoryPoolGetName
    rtx_mempool.o(i.svcRtxMemoryPoolGetSpace) refers to rtx_evr.o(i.EvrRtxMemoryPoolGetSpace) for EvrRtxMemoryPoolGetSpace
    rtx_mempool.o(i.svcRtxMemoryPoolNew) refers to rtx_evr.o(i.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(i.svcRtxMemoryPoolNew) refers to rtx_mempool.o(i.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(i.svcRtxMemoryPoolNew) refers to rtx_memory.o(i.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mempool.o(i.svcRtxMemoryPoolNew) refers to rt_memclr.o(.text) for __aeabi_memclr
    rtx_mempool.o(i.svcRtxMemoryPoolNew) refers to rtx_mempool.o(i.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_mempool.o(i.svcRtxMemoryPoolNew) refers to rtx_evr.o(i.EvrRtxMemoryPoolCreated) for EvrRtxMemoryPoolCreated
    rtx_mempool.o(i.svcRtxMemoryPoolNew) refers to rtx_mempool.o(i.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(i.svcRtxMemoryPoolNew) refers to rtx_memory.o(i.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(i.svcRtxMemoryPoolNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(i.svcRtxMemoryPoolNew) refers to rtx_mempool.o(i.osRtxMemoryPoolPostProcess) for osRtxMemoryPoolPostProcess
    rtx_msgqueue.o(i.MessageQueueGet) refers to rtx_msgqueue.o(.emb_text) for __asm___14_rtx_msgqueue_c_3fd3b50e__atomic_dec32_nz
    rtx_msgqueue.o(i.MessageQueuePut) refers to rtx_msgqueue.o(.emb_text) for __asm___14_rtx_msgqueue_c_3fd3b50e__atomic_inc32
    rtx_msgqueue.o(i.osMessageQueueDelete) refers to rtx_evr.o(i.EvrRtxMessageQueueDelete) for EvrRtxMessageQueueDelete
    rtx_msgqueue.o(i.osMessageQueueDelete) refers to rtx_evr.o(i.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(i.osMessageQueueDelete) refers to rtx_msgqueue.o(i.svcRtxMessageQueueDelete) for svcRtxMessageQueueDelete
    rtx_msgqueue.o(i.osMessageQueueGet) refers to rtx_evr.o(i.EvrRtxMessageQueueGet) for EvrRtxMessageQueueGet
    rtx_msgqueue.o(i.osMessageQueueGet) refers to rtx_evr.o(i.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(i.osMessageQueueGet) refers to rtx_msgqueue.o(i.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(i.osMessageQueueGet) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(i.osMessageQueueGet) refers to rtx_evr.o(i.EvrRtxMessageQueueRetrieved) for EvrRtxMessageQueueRetrieved
    rtx_msgqueue.o(i.osMessageQueueGet) refers to rtx_system.o(i.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(i.osMessageQueueGet) refers to rtx_evr.o(i.EvrRtxMessageQueueNotRetrieved) for EvrRtxMessageQueueNotRetrieved
    rtx_msgqueue.o(i.osMessageQueueGet) refers to rtx_msgqueue.o(i.svcRtxMessageQueueGet) for svcRtxMessageQueueGet
    rtx_msgqueue.o(i.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(i.svcRtxMessageQueueGetCapacity) for svcRtxMessageQueueGetCapacity
    rtx_msgqueue.o(i.osMessageQueueGetCount) refers to rtx_msgqueue.o(i.svcRtxMessageQueueGetCount) for svcRtxMessageQueueGetCount
    rtx_msgqueue.o(i.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(i.svcRtxMessageQueueGetMsgSize) for svcRtxMessageQueueGetMsgSize
    rtx_msgqueue.o(i.osMessageQueueGetName) refers to rtx_evr.o(i.EvrRtxMessageQueueGetName) for EvrRtxMessageQueueGetName
    rtx_msgqueue.o(i.osMessageQueueGetName) refers to rtx_msgqueue.o(i.svcRtxMessageQueueGetName) for svcRtxMessageQueueGetName
    rtx_msgqueue.o(i.osMessageQueueGetSpace) refers to rtx_msgqueue.o(i.svcRtxMessageQueueGetSpace) for svcRtxMessageQueueGetSpace
    rtx_msgqueue.o(i.osMessageQueueNew) refers to rtx_evr.o(i.EvrRtxMessageQueueNew) for EvrRtxMessageQueueNew
    rtx_msgqueue.o(i.osMessageQueueNew) refers to rtx_evr.o(i.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(i.osMessageQueueNew) refers to rtx_msgqueue.o(i.svcRtxMessageQueueNew) for svcRtxMessageQueueNew
    rtx_msgqueue.o(i.osMessageQueuePut) refers to rtx_evr.o(i.EvrRtxMessageQueuePut) for EvrRtxMessageQueuePut
    rtx_msgqueue.o(i.osMessageQueuePut) refers to rtx_evr.o(i.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(i.osMessageQueuePut) refers to rtx_mempool.o(i.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(i.osMessageQueuePut) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(i.osMessageQueuePut) refers to rtx_system.o(i.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(i.osMessageQueuePut) refers to rtx_evr.o(i.EvrRtxMessageQueueInsertPending) for EvrRtxMessageQueueInsertPending
    rtx_msgqueue.o(i.osMessageQueuePut) refers to rtx_evr.o(i.EvrRtxMessageQueueNotInserted) for EvrRtxMessageQueueNotInserted
    rtx_msgqueue.o(i.osMessageQueuePut) refers to rtx_msgqueue.o(i.svcRtxMessageQueuePut) for svcRtxMessageQueuePut
    rtx_msgqueue.o(i.osMessageQueueReset) refers to rtx_evr.o(i.EvrRtxMessageQueueReset) for EvrRtxMessageQueueReset
    rtx_msgqueue.o(i.osMessageQueueReset) refers to rtx_evr.o(i.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(i.osMessageQueueReset) refers to rtx_msgqueue.o(i.svcRtxMessageQueueReset) for svcRtxMessageQueueReset
    rtx_msgqueue.o(i.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(i.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(i.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(i.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(i.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(i.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(i.osRtxMessageQueuePostProcess) refers to rtx_thread.o(i.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(i.osRtxMessageQueuePostProcess) refers to rtx_thread.o(i.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(i.osRtxMessageQueuePostProcess) refers to rtx_thread.o(i.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(i.osRtxMessageQueuePostProcess) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(i.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(i.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(i.osRtxMessageQueuePostProcess) refers to rtx_evr.o(i.EvrRtxMessageQueueInserted) for EvrRtxMessageQueueInserted
    rtx_msgqueue.o(i.osRtxMessageQueuePostProcess) refers to rtx_evr.o(i.EvrRtxMessageQueueRetrieved) for EvrRtxMessageQueueRetrieved
    rtx_msgqueue.o(i.svcRtxMessageQueueDelete) refers to rtx_evr.o(i.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(i.svcRtxMessageQueueDelete) refers to rtx_thread.o(i.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(i.svcRtxMessageQueueDelete) refers to rtx_thread.o(i.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(i.svcRtxMessageQueueDelete) refers to rtx_thread.o(i.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(i.svcRtxMessageQueueDelete) refers to rtx_memory.o(i.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(i.svcRtxMessageQueueDelete) refers to rtx_mempool.o(i.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(i.svcRtxMessageQueueDelete) refers to rtx_evr.o(i.EvrRtxMessageQueueDestroyed) for EvrRtxMessageQueueDestroyed
    rtx_msgqueue.o(i.svcRtxMessageQueueDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(i.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(i.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(i.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(i.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(i.svcRtxMessageQueueGet) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(i.svcRtxMessageQueueGet) refers to rtx_evr.o(i.EvrRtxMessageQueueRetrieved) for EvrRtxMessageQueueRetrieved
    rtx_msgqueue.o(i.svcRtxMessageQueueGet) refers to rtx_mempool.o(i.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(i.svcRtxMessageQueueGet) refers to rtx_evr.o(i.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(i.svcRtxMessageQueueGet) refers to rtx_evr.o(i.EvrRtxMessageQueueGetPending) for EvrRtxMessageQueueGetPending
    rtx_msgqueue.o(i.svcRtxMessageQueueGet) refers to rtx_thread.o(i.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(i.svcRtxMessageQueueGet) refers to rtx_thread.o(i.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(i.svcRtxMessageQueueGet) refers to rtx_evr.o(i.EvrRtxMessageQueueNotRetrieved) for EvrRtxMessageQueueNotRetrieved
    rtx_msgqueue.o(i.svcRtxMessageQueueGet) refers to rtx_mempool.o(i.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(i.svcRtxMessageQueueGet) refers to rtx_thread.o(i.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(i.svcRtxMessageQueueGet) refers to rtx_thread.o(i.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(i.svcRtxMessageQueueGet) refers to rtx_thread.o(i.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(i.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(i.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(i.svcRtxMessageQueueGet) refers to rtx_evr.o(i.EvrRtxMessageQueueInserted) for EvrRtxMessageQueueInserted
    rtx_msgqueue.o(i.svcRtxMessageQueueGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(i.svcRtxMessageQueueGetCapacity) refers to rtx_evr.o(i.EvrRtxMessageQueueGetCapacity) for EvrRtxMessageQueueGetCapacity
    rtx_msgqueue.o(i.svcRtxMessageQueueGetCount) refers to rtx_evr.o(i.EvrRtxMessageQueueGetCount) for EvrRtxMessageQueueGetCount
    rtx_msgqueue.o(i.svcRtxMessageQueueGetMsgSize) refers to rtx_evr.o(i.EvrRtxMessageQueueGetMsgSize) for EvrRtxMessageQueueGetMsgSize
    rtx_msgqueue.o(i.svcRtxMessageQueueGetName) refers to rtx_evr.o(i.EvrRtxMessageQueueGetName) for EvrRtxMessageQueueGetName
    rtx_msgqueue.o(i.svcRtxMessageQueueGetSpace) refers to rtx_evr.o(i.EvrRtxMessageQueueGetSpace) for EvrRtxMessageQueueGetSpace
    rtx_msgqueue.o(i.svcRtxMessageQueueNew) refers to rtx_evr.o(i.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(i.svcRtxMessageQueueNew) refers to rtx_mempool.o(i.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(i.svcRtxMessageQueueNew) refers to rtx_memory.o(i.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_msgqueue.o(i.svcRtxMessageQueueNew) refers to rt_memclr.o(.text) for __aeabi_memclr
    rtx_msgqueue.o(i.svcRtxMessageQueueNew) refers to rtx_mempool.o(i.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_msgqueue.o(i.svcRtxMessageQueueNew) refers to rtx_evr.o(i.EvrRtxMessageQueueCreated) for EvrRtxMessageQueueCreated
    rtx_msgqueue.o(i.svcRtxMessageQueueNew) refers to rtx_mempool.o(i.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(i.svcRtxMessageQueueNew) refers to rtx_memory.o(i.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(i.svcRtxMessageQueueNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(i.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(i.osRtxMessageQueuePostProcess) for osRtxMessageQueuePostProcess
    rtx_msgqueue.o(i.svcRtxMessageQueuePut) refers to rtx_mempool.o(i.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(i.svcRtxMessageQueuePut) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(i.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(i.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(i.svcRtxMessageQueuePut) refers to rtx_evr.o(i.EvrRtxMessageQueueInserted) for EvrRtxMessageQueueInserted
    rtx_msgqueue.o(i.svcRtxMessageQueuePut) refers to rtx_evr.o(i.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(i.svcRtxMessageQueuePut) refers to rtx_thread.o(i.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(i.svcRtxMessageQueuePut) refers to rtx_thread.o(i.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(i.svcRtxMessageQueuePut) refers to rtx_thread.o(i.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(i.svcRtxMessageQueuePut) refers to rtx_evr.o(i.EvrRtxMessageQueueRetrieved) for EvrRtxMessageQueueRetrieved
    rtx_msgqueue.o(i.svcRtxMessageQueuePut) refers to rtx_evr.o(i.EvrRtxMessageQueuePutPending) for EvrRtxMessageQueuePutPending
    rtx_msgqueue.o(i.svcRtxMessageQueuePut) refers to rtx_thread.o(i.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(i.svcRtxMessageQueuePut) refers to rtx_thread.o(i.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(i.svcRtxMessageQueuePut) refers to rtx_evr.o(i.EvrRtxMessageQueueNotInserted) for EvrRtxMessageQueueNotInserted
    rtx_msgqueue.o(i.svcRtxMessageQueuePut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(i.svcRtxMessageQueueReset) refers to rtx_evr.o(i.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(i.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(i.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(i.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(i.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(i.svcRtxMessageQueueReset) refers to rtx_evr.o(i.EvrRtxMessageQueueRetrieved) for EvrRtxMessageQueueRetrieved
    rtx_msgqueue.o(i.svcRtxMessageQueueReset) refers to rtx_mempool.o(i.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(i.svcRtxMessageQueueReset) refers to rtx_mempool.o(i.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(i.svcRtxMessageQueueReset) refers to rtx_thread.o(i.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(i.svcRtxMessageQueueReset) refers to rtx_thread.o(i.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(i.svcRtxMessageQueueReset) refers to rtx_thread.o(i.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(i.svcRtxMessageQueueReset) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(i.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(i.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(i.svcRtxMessageQueueReset) refers to rtx_evr.o(i.EvrRtxMessageQueueInserted) for EvrRtxMessageQueueInserted
    rtx_msgqueue.o(i.svcRtxMessageQueueReset) refers to rtx_thread.o(i.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(i.svcRtxMessageQueueReset) refers to rtx_evr.o(i.EvrRtxMessageQueueResetDone) for EvrRtxMessageQueueResetDone
    rtx_mutex.o(i.osMutexAcquire) refers to rtx_evr.o(i.EvrRtxMutexAcquire) for EvrRtxMutexAcquire
    rtx_mutex.o(i.osMutexAcquire) refers to rtx_evr.o(i.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(i.osMutexAcquire) refers to rtx_mutex.o(i.svcRtxMutexAcquire) for svcRtxMutexAcquire
    rtx_mutex.o(i.osMutexDelete) refers to rtx_evr.o(i.EvrRtxMutexDelete) for EvrRtxMutexDelete
    rtx_mutex.o(i.osMutexDelete) refers to rtx_evr.o(i.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(i.osMutexDelete) refers to rtx_mutex.o(i.svcRtxMutexDelete) for svcRtxMutexDelete
    rtx_mutex.o(i.osMutexGetName) refers to rtx_evr.o(i.EvrRtxMutexGetName) for EvrRtxMutexGetName
    rtx_mutex.o(i.osMutexGetName) refers to rtx_mutex.o(i.svcRtxMutexGetName) for svcRtxMutexGetName
    rtx_mutex.o(i.osMutexGetOwner) refers to rtx_evr.o(i.EvrRtxMutexGetOwner) for EvrRtxMutexGetOwner
    rtx_mutex.o(i.osMutexGetOwner) refers to rtx_mutex.o(i.svcRtxMutexGetOwner) for svcRtxMutexGetOwner
    rtx_mutex.o(i.osMutexNew) refers to rtx_evr.o(i.EvrRtxMutexNew) for EvrRtxMutexNew
    rtx_mutex.o(i.osMutexNew) refers to rtx_evr.o(i.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(i.osMutexNew) refers to rtx_mutex.o(i.svcRtxMutexNew) for svcRtxMutexNew
    rtx_mutex.o(i.osMutexRelease) refers to rtx_evr.o(i.EvrRtxMutexRelease) for EvrRtxMutexRelease
    rtx_mutex.o(i.osMutexRelease) refers to rtx_evr.o(i.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(i.osMutexRelease) refers to rtx_mutex.o(i.svcRtxMutexRelease) for svcRtxMutexRelease
    rtx_mutex.o(i.osRtxMutexOwnerRelease) refers to rtx_evr.o(i.EvrRtxMutexReleased) for EvrRtxMutexReleased
    rtx_mutex.o(i.osRtxMutexOwnerRelease) refers to rtx_thread.o(i.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(i.osRtxMutexOwnerRelease) refers to rtx_thread.o(i.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(i.osRtxMutexOwnerRelease) refers to rtx_evr.o(i.EvrRtxMutexAcquired) for EvrRtxMutexAcquired
    rtx_mutex.o(i.svcRtxMutexAcquire) refers to rtx_evr.o(i.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(i.svcRtxMutexAcquire) refers to rtx_evr.o(i.EvrRtxMutexAcquired) for EvrRtxMutexAcquired
    rtx_mutex.o(i.svcRtxMutexAcquire) refers to rtx_thread.o(i.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(i.svcRtxMutexAcquire) refers to rtx_evr.o(i.EvrRtxMutexAcquirePending) for EvrRtxMutexAcquirePending
    rtx_mutex.o(i.svcRtxMutexAcquire) refers to rtx_thread.o(i.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mutex.o(i.svcRtxMutexAcquire) refers to rtx_thread.o(i.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mutex.o(i.svcRtxMutexAcquire) refers to rtx_evr.o(i.EvrRtxMutexNotAcquired) for EvrRtxMutexNotAcquired
    rtx_mutex.o(i.svcRtxMutexAcquire) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(i.svcRtxMutexDelete) refers to rtx_evr.o(i.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(i.svcRtxMutexDelete) refers to rtx_thread.o(i.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(i.svcRtxMutexDelete) refers to rtx_thread.o(i.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(i.svcRtxMutexDelete) refers to rtx_thread.o(i.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(i.svcRtxMutexDelete) refers to rtx_thread.o(i.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(i.svcRtxMutexDelete) refers to rtx_mempool.o(i.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mutex.o(i.svcRtxMutexDelete) refers to rtx_memory.o(i.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mutex.o(i.svcRtxMutexDelete) refers to rtx_evr.o(i.EvrRtxMutexDestroyed) for EvrRtxMutexDestroyed
    rtx_mutex.o(i.svcRtxMutexDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(i.svcRtxMutexGetName) refers to rtx_evr.o(i.EvrRtxMutexGetName) for EvrRtxMutexGetName
    rtx_mutex.o(i.svcRtxMutexGetOwner) refers to rtx_evr.o(i.EvrRtxMutexGetOwner) for EvrRtxMutexGetOwner
    rtx_mutex.o(i.svcRtxMutexNew) refers to rtx_evr.o(i.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(i.svcRtxMutexNew) refers to rtx_evr.o(i.EvrRtxMutexCreated) for EvrRtxMutexCreated
    rtx_mutex.o(i.svcRtxMutexNew) refers to rtx_mempool.o(i.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mutex.o(i.svcRtxMutexNew) refers to rtx_memory.o(i.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mutex.o(i.svcRtxMutexNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(i.svcRtxMutexRelease) refers to rtx_evr.o(i.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(i.svcRtxMutexRelease) refers to rtx_evr.o(i.EvrRtxMutexReleased) for EvrRtxMutexReleased
    rtx_mutex.o(i.svcRtxMutexRelease) refers to rtx_thread.o(i.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(i.svcRtxMutexRelease) refers to rtx_thread.o(i.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(i.svcRtxMutexRelease) refers to rtx_evr.o(i.EvrRtxMutexAcquired) for EvrRtxMutexAcquired
    rtx_mutex.o(i.svcRtxMutexRelease) refers to rtx_thread.o(i.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(i.svcRtxMutexRelease) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_semaphore.o(i.SemaphoreTokenDecrement) refers to rtx_semaphore.o(.emb_text) for __asm___15_rtx_semaphore_c_eca73427__atomic_dec16_nz
    rtx_semaphore.o(i.SemaphoreTokenIncrement) refers to rtx_semaphore.o(.emb_text) for __asm___15_rtx_semaphore_c_eca73427__atomic_inc16_lt
    rtx_semaphore.o(i.osRtxSemaphorePostProcess) refers to rtx_semaphore.o(i.SemaphoreTokenDecrement) for SemaphoreTokenDecrement
    rtx_semaphore.o(i.osRtxSemaphorePostProcess) refers to rtx_thread.o(i.osRtxThreadListGet) for osRtxThreadListGet
    rtx_semaphore.o(i.osRtxSemaphorePostProcess) refers to rtx_thread.o(i.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_semaphore.o(i.osRtxSemaphorePostProcess) refers to rtx_evr.o(i.EvrRtxSemaphoreAcquired) for EvrRtxSemaphoreAcquired
    rtx_semaphore.o(i.osSemaphoreAcquire) refers to rtx_evr.o(i.EvrRtxSemaphoreAcquire) for EvrRtxSemaphoreAcquire
    rtx_semaphore.o(i.osSemaphoreAcquire) refers to rtx_evr.o(i.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(i.osSemaphoreAcquire) refers to rtx_semaphore.o(i.SemaphoreTokenDecrement) for SemaphoreTokenDecrement
    rtx_semaphore.o(i.osSemaphoreAcquire) refers to rtx_evr.o(i.EvrRtxSemaphoreAcquired) for EvrRtxSemaphoreAcquired
    rtx_semaphore.o(i.osSemaphoreAcquire) refers to rtx_evr.o(i.EvrRtxSemaphoreNotAcquired) for EvrRtxSemaphoreNotAcquired
    rtx_semaphore.o(i.osSemaphoreAcquire) refers to rtx_semaphore.o(i.svcRtxSemaphoreAcquire) for svcRtxSemaphoreAcquire
    rtx_semaphore.o(i.osSemaphoreDelete) refers to rtx_evr.o(i.EvrRtxSemaphoreDelete) for EvrRtxSemaphoreDelete
    rtx_semaphore.o(i.osSemaphoreDelete) refers to rtx_evr.o(i.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(i.osSemaphoreDelete) refers to rtx_semaphore.o(i.svcRtxSemaphoreDelete) for svcRtxSemaphoreDelete
    rtx_semaphore.o(i.osSemaphoreGetCount) refers to rtx_semaphore.o(i.svcRtxSemaphoreGetCount) for svcRtxSemaphoreGetCount
    rtx_semaphore.o(i.osSemaphoreGetName) refers to rtx_evr.o(i.EvrRtxSemaphoreGetName) for EvrRtxSemaphoreGetName
    rtx_semaphore.o(i.osSemaphoreGetName) refers to rtx_semaphore.o(i.svcRtxSemaphoreGetName) for svcRtxSemaphoreGetName
    rtx_semaphore.o(i.osSemaphoreNew) refers to rtx_evr.o(i.EvrRtxSemaphoreNew) for EvrRtxSemaphoreNew
    rtx_semaphore.o(i.osSemaphoreNew) refers to rtx_evr.o(i.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(i.osSemaphoreNew) refers to rtx_semaphore.o(i.svcRtxSemaphoreNew) for svcRtxSemaphoreNew
    rtx_semaphore.o(i.osSemaphoreRelease) refers to rtx_evr.o(i.EvrRtxSemaphoreRelease) for EvrRtxSemaphoreRelease
    rtx_semaphore.o(i.osSemaphoreRelease) refers to rtx_evr.o(i.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(i.osSemaphoreRelease) refers to rtx_semaphore.o(i.SemaphoreTokenIncrement) for SemaphoreTokenIncrement
    rtx_semaphore.o(i.osSemaphoreRelease) refers to rtx_system.o(i.osRtxPostProcess) for osRtxPostProcess
    rtx_semaphore.o(i.osSemaphoreRelease) refers to rtx_evr.o(i.EvrRtxSemaphoreReleased) for EvrRtxSemaphoreReleased
    rtx_semaphore.o(i.osSemaphoreRelease) refers to rtx_semaphore.o(i.svcRtxSemaphoreRelease) for svcRtxSemaphoreRelease
    rtx_semaphore.o(i.svcRtxSemaphoreAcquire) refers to rtx_evr.o(i.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(i.svcRtxSemaphoreAcquire) refers to rtx_semaphore.o(i.SemaphoreTokenDecrement) for SemaphoreTokenDecrement
    rtx_semaphore.o(i.svcRtxSemaphoreAcquire) refers to rtx_evr.o(i.EvrRtxSemaphoreAcquired) for EvrRtxSemaphoreAcquired
    rtx_semaphore.o(i.svcRtxSemaphoreAcquire) refers to rtx_evr.o(i.EvrRtxSemaphoreAcquirePending) for EvrRtxSemaphoreAcquirePending
    rtx_semaphore.o(i.svcRtxSemaphoreAcquire) refers to rtx_thread.o(i.osRtxThreadListPut) for osRtxThreadListPut
    rtx_semaphore.o(i.svcRtxSemaphoreAcquire) refers to rtx_thread.o(i.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_semaphore.o(i.svcRtxSemaphoreAcquire) refers to rtx_evr.o(i.EvrRtxSemaphoreNotAcquired) for EvrRtxSemaphoreNotAcquired
    rtx_semaphore.o(i.svcRtxSemaphoreAcquire) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_semaphore.o(i.svcRtxSemaphoreDelete) refers to rtx_evr.o(i.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(i.svcRtxSemaphoreDelete) refers to rtx_thread.o(i.osRtxThreadListGet) for osRtxThreadListGet
    rtx_semaphore.o(i.svcRtxSemaphoreDelete) refers to rtx_thread.o(i.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_semaphore.o(i.svcRtxSemaphoreDelete) refers to rtx_thread.o(i.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_semaphore.o(i.svcRtxSemaphoreDelete) refers to rtx_mempool.o(i.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_semaphore.o(i.svcRtxSemaphoreDelete) refers to rtx_memory.o(i.osRtxMemoryFree) for osRtxMemoryFree
    rtx_semaphore.o(i.svcRtxSemaphoreDelete) refers to rtx_evr.o(i.EvrRtxSemaphoreDestroyed) for EvrRtxSemaphoreDestroyed
    rtx_semaphore.o(i.svcRtxSemaphoreDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_semaphore.o(i.svcRtxSemaphoreGetCount) refers to rtx_evr.o(i.EvrRtxSemaphoreGetCount) for EvrRtxSemaphoreGetCount
    rtx_semaphore.o(i.svcRtxSemaphoreGetName) refers to rtx_evr.o(i.EvrRtxSemaphoreGetName) for EvrRtxSemaphoreGetName
    rtx_semaphore.o(i.svcRtxSemaphoreNew) refers to rtx_evr.o(i.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(i.svcRtxSemaphoreNew) refers to rtx_evr.o(i.EvrRtxSemaphoreCreated) for EvrRtxSemaphoreCreated
    rtx_semaphore.o(i.svcRtxSemaphoreNew) refers to rtx_mempool.o(i.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_semaphore.o(i.svcRtxSemaphoreNew) refers to rtx_memory.o(i.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_semaphore.o(i.svcRtxSemaphoreNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_semaphore.o(i.svcRtxSemaphoreNew) refers to rtx_semaphore.o(i.osRtxSemaphorePostProcess) for osRtxSemaphorePostProcess
    rtx_semaphore.o(i.svcRtxSemaphoreRelease) refers to rtx_evr.o(i.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(i.svcRtxSemaphoreRelease) refers to rtx_evr.o(i.EvrRtxSemaphoreReleased) for EvrRtxSemaphoreReleased
    rtx_semaphore.o(i.svcRtxSemaphoreRelease) refers to rtx_thread.o(i.osRtxThreadListGet) for osRtxThreadListGet
    rtx_semaphore.o(i.svcRtxSemaphoreRelease) refers to rtx_thread.o(i.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_semaphore.o(i.svcRtxSemaphoreRelease) refers to rtx_evr.o(i.EvrRtxSemaphoreAcquired) for EvrRtxSemaphoreAcquired
    rtx_semaphore.o(i.svcRtxSemaphoreRelease) refers to rtx_semaphore.o(i.SemaphoreTokenIncrement) for SemaphoreTokenIncrement
    rtx_system.o(i.isr_queue_get) refers to rtx_system.o(.emb_text) for __asm___12_rtx_system_c_024f2f18__atomic_dec16_nz
    rtx_system.o(i.isr_queue_get) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(i.isr_queue_put) refers to rtx_system.o(.emb_text) for __asm___12_rtx_system_c_024f2f18__atomic_inc16_lt
    rtx_system.o(i.isr_queue_put) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(i.osRtxPendSV_Handler) refers to rtx_system.o(i.isr_queue_get) for isr_queue_get
    rtx_system.o(i.osRtxPendSV_Handler) refers to rtx_thread.o(i.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(i.osRtxPendSV_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(i.osRtxPostProcess) refers to rtx_system.o(i.isr_queue_put) for isr_queue_put
    rtx_system.o(i.osRtxPostProcess) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_system.o(i.osRtxPostProcess) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(i.osRtxSysTimerGetCount) refers to rtx_system.o(i.SysTick_GetVal) for SysTick_GetVal
    rtx_system.o(i.osRtxSysTimerGetCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(i.osRtxSysTimerGetFreq) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(i.osRtxSysTimerSetup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(i.osRtxSysTimerSetup) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_system.o(i.osRtxTick_Handler) refers to rtx_system.o(i.osRtxSysTimerAckIRQ) for osRtxSysTimerAckIRQ
    rtx_system.o(i.osRtxTick_Handler) refers to rtx_timer.o(i.osRtxTimerTick) for osRtxTimerTick
    rtx_system.o(i.osRtxTick_Handler) refers to rtx_thread.o(i.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_system.o(i.osRtxTick_Handler) refers to rtx_thread.o(i.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(i.osRtxTick_Handler) refers to rtx_thread.o(i.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_system.o(i.osRtxTick_Handler) refers to rtx_thread.o(i.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_system.o(i.osRtxTick_Handler) refers to rtx_thread.o(i.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_system.o(i.osRtxTick_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(i.ThreadFlagsCheck) refers to rtx_thread.o(.emb_text) for __asm___12_rtx_thread_c_add96be5__atomic_chk32_all
    rtx_thread.o(i.ThreadFlagsClear) refers to rtx_thread.o(.emb_text) for __asm___12_rtx_thread_c_add96be5__atomic_clr32
    rtx_thread.o(i.ThreadFlagsSet) refers to rtx_thread.o(.emb_text) for __asm___12_rtx_thread_c_add96be5__atomic_set32
    rtx_thread.o(i.osRtxThreadBlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(i.osRtxThreadDelayInsert) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(i.osRtxThreadDelayRemove) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(i.osRtxThreadDelayTick) refers to rtx_evr.o(i.EvrRtxThreadDelayCompleted) for EvrRtxThreadDelayCompleted
    rtx_thread.o(i.osRtxThreadDelayTick) refers to rtx_evr.o(i.EvrRtxThreadFlagsWaitTimeout) for EvrRtxThreadFlagsWaitTimeout
    rtx_thread.o(i.osRtxThreadDelayTick) refers to rtx_thread.o(i.osRtxThreadListRoot) for osRtxThreadListRoot
    rtx_thread.o(i.osRtxThreadDelayTick) refers to rtx_evr.o(i.EvrRtxEventFlagsWaitTimeout) for EvrRtxEventFlagsWaitTimeout
    rtx_thread.o(i.osRtxThreadDelayTick) refers to rtx_evr.o(i.EvrRtxMutexAcquireTimeout) for EvrRtxMutexAcquireTimeout
    rtx_thread.o(i.osRtxThreadDelayTick) refers to rtx_evr.o(i.EvrRtxSemaphoreAcquireTimeout) for EvrRtxSemaphoreAcquireTimeout
    rtx_thread.o(i.osRtxThreadDelayTick) refers to rtx_evr.o(i.EvrRtxMemoryPoolAllocTimeout) for EvrRtxMemoryPoolAllocTimeout
    rtx_thread.o(i.osRtxThreadDelayTick) refers to rtx_evr.o(i.EvrRtxMessageQueueGetTimeout) for EvrRtxMessageQueueGetTimeout
    rtx_thread.o(i.osRtxThreadDelayTick) refers to rtx_evr.o(i.EvrRtxMessageQueuePutTimeout) for EvrRtxMessageQueuePutTimeout
    rtx_thread.o(i.osRtxThreadDelayTick) refers to rtx_thread.o(i.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_thread.o(i.osRtxThreadDelayTick) refers to rtx_evr.o(i.EvrRtxThreadUnblocked) for EvrRtxThreadUnblocked
    rtx_thread.o(i.osRtxThreadDelayTick) refers to rtx_thread.o(i.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(i.osRtxThreadDelayTick) refers to rtx_thread.o(i.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(i.osRtxThreadDelayTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(i.osRtxThreadDispatch) refers to rtx_thread.o(i.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(i.osRtxThreadDispatch) refers to rtx_thread.o(i.osRtxThreadBlock) for osRtxThreadBlock
    rtx_thread.o(i.osRtxThreadDispatch) refers to rtx_thread.o(i.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(i.osRtxThreadDispatch) refers to rtx_thread.o(i.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(i.osRtxThreadDispatch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(i.osRtxThreadFree) refers to rtx_mempool.o(i.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(i.osRtxThreadFree) refers to rtx_memory.o(i.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(i.osRtxThreadFree) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(i.osRtxThreadListSort) refers to rtx_thread.o(i.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(i.osRtxThreadListSort) refers to rtx_thread.o(i.osRtxThreadListPut) for osRtxThreadListPut
    rtx_thread.o(i.osRtxThreadPostProcess) refers to rtx_thread.o(i.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(i.osRtxThreadPostProcess) refers to rtx_thread.o(i.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(i.osRtxThreadPostProcess) refers to rtx_evr.o(i.EvrRtxThreadFlagsWaitCompleted) for EvrRtxThreadFlagsWaitCompleted
    rtx_thread.o(i.osRtxThreadReadyPut) refers to rtx_thread.o(i.osRtxThreadListPut) for osRtxThreadListPut
    rtx_thread.o(i.osRtxThreadReadyPut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(i.osRtxThreadStackCheck) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_thread.o(i.osRtxThreadStackCheck) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(i.osRtxThreadSwitch) refers to rtx_thread.o(i.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(i.osRtxThreadSwitch) refers to rtx_evr.o(i.EvrRtxThreadSwitch) for EvrRtxThreadSwitch
    rtx_thread.o(i.osRtxThreadSwitch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(i.osRtxThreadWaitEnter) refers to rtx_thread.o(i.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(i.osRtxThreadWaitEnter) refers to rtx_evr.o(i.EvrRtxThreadBlocked) for EvrRtxThreadBlocked
    rtx_thread.o(i.osRtxThreadWaitEnter) refers to rtx_thread.o(i.osRtxThreadDelayInsert) for osRtxThreadDelayInsert
    rtx_thread.o(i.osRtxThreadWaitEnter) refers to rtx_thread.o(i.osRtxThreadListGet) for osRtxThreadListGet
    rtx_thread.o(i.osRtxThreadWaitEnter) refers to rtx_thread.o(i.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(i.osRtxThreadWaitEnter) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(i.osRtxThreadWaitExit) refers to rtx_evr.o(i.EvrRtxThreadUnblocked) for EvrRtxThreadUnblocked
    rtx_thread.o(i.osRtxThreadWaitExit) refers to rtx_thread.o(i.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_thread.o(i.osRtxThreadWaitExit) refers to rtx_thread.o(i.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(i.osRtxThreadWaitExit) refers to rtx_thread.o(i.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(i.osRtxThreadWaitExit) refers to rtx_thread.o(i.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(i.osThreadDetach) refers to rtx_evr.o(i.EvrRtxThreadDetach) for EvrRtxThreadDetach
    rtx_thread.o(i.osThreadDetach) refers to rtx_evr.o(i.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(i.osThreadDetach) refers to rtx_thread.o(i.svcRtxThreadDetach) for svcRtxThreadDetach
    rtx_thread.o(i.osThreadEnumerate) refers to rtx_evr.o(i.EvrRtxThreadEnumerate) for EvrRtxThreadEnumerate
    rtx_thread.o(i.osThreadEnumerate) refers to rtx_thread.o(i.svcRtxThreadEnumerate) for svcRtxThreadEnumerate
    rtx_thread.o(i.osThreadExit) refers to rtx_evr.o(i.EvrRtxThreadExit) for EvrRtxThreadExit
    rtx_thread.o(i.osThreadExit) refers to rtx_evr.o(i.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(i.osThreadExit) refers to rtx_thread.o(i.svcRtxThreadExit) for svcRtxThreadExit
    rtx_thread.o(i.osThreadFlagsClear) refers to rtx_evr.o(i.EvrRtxThreadFlagsClear) for EvrRtxThreadFlagsClear
    rtx_thread.o(i.osThreadFlagsClear) refers to rtx_evr.o(i.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(i.osThreadFlagsClear) refers to rtx_thread.o(i.svcRtxThreadFlagsClear) for svcRtxThreadFlagsClear
    rtx_thread.o(i.osThreadFlagsGet) refers to rtx_evr.o(i.EvrRtxThreadFlagsGet) for EvrRtxThreadFlagsGet
    rtx_thread.o(i.osThreadFlagsGet) refers to rtx_thread.o(i.svcRtxThreadFlagsGet) for svcRtxThreadFlagsGet
    rtx_thread.o(i.osThreadFlagsSet) refers to rtx_evr.o(i.EvrRtxThreadFlagsSet) for EvrRtxThreadFlagsSet
    rtx_thread.o(i.osThreadFlagsSet) refers to rtx_evr.o(i.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(i.osThreadFlagsSet) refers to rtx_thread.o(i.ThreadFlagsSet) for ThreadFlagsSet
    rtx_thread.o(i.osThreadFlagsSet) refers to rtx_system.o(i.osRtxPostProcess) for osRtxPostProcess
    rtx_thread.o(i.osThreadFlagsSet) refers to rtx_evr.o(i.EvrRtxThreadFlagsSetDone) for EvrRtxThreadFlagsSetDone
    rtx_thread.o(i.osThreadFlagsSet) refers to rtx_thread.o(i.svcRtxThreadFlagsSet) for svcRtxThreadFlagsSet
    rtx_thread.o(i.osThreadFlagsWait) refers to rtx_evr.o(i.EvrRtxThreadFlagsWait) for EvrRtxThreadFlagsWait
    rtx_thread.o(i.osThreadFlagsWait) refers to rtx_evr.o(i.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(i.osThreadFlagsWait) refers to rtx_thread.o(i.svcRtxThreadFlagsWait) for svcRtxThreadFlagsWait
    rtx_thread.o(i.osThreadGetCount) refers to rtx_evr.o(i.EvrRtxThreadGetCount) for EvrRtxThreadGetCount
    rtx_thread.o(i.osThreadGetCount) refers to rtx_thread.o(i.svcRtxThreadGetCount) for svcRtxThreadGetCount
    rtx_thread.o(i.osThreadGetId) refers to rtx_evr.o(i.EvrRtxThreadGetId) for EvrRtxThreadGetId
    rtx_thread.o(i.osThreadGetId) refers to rtx_thread.o(i.svcRtxThreadGetId) for svcRtxThreadGetId
    rtx_thread.o(i.osThreadGetName) refers to rtx_evr.o(i.EvrRtxThreadGetName) for EvrRtxThreadGetName
    rtx_thread.o(i.osThreadGetName) refers to rtx_thread.o(i.svcRtxThreadGetName) for svcRtxThreadGetName
    rtx_thread.o(i.osThreadGetPriority) refers to rtx_evr.o(i.EvrRtxThreadGetPriority) for EvrRtxThreadGetPriority
    rtx_thread.o(i.osThreadGetPriority) refers to rtx_thread.o(i.svcRtxThreadGetPriority) for svcRtxThreadGetPriority
    rtx_thread.o(i.osThreadGetStackSize) refers to rtx_evr.o(i.EvrRtxThreadGetStackSize) for EvrRtxThreadGetStackSize
    rtx_thread.o(i.osThreadGetStackSize) refers to rtx_thread.o(i.svcRtxThreadGetStackSize) for svcRtxThreadGetStackSize
    rtx_thread.o(i.osThreadGetStackSpace) refers to rtx_evr.o(i.EvrRtxThreadGetStackSpace) for EvrRtxThreadGetStackSpace
    rtx_thread.o(i.osThreadGetStackSpace) refers to rtx_thread.o(i.svcRtxThreadGetStackSpace) for svcRtxThreadGetStackSpace
    rtx_thread.o(i.osThreadGetState) refers to rtx_evr.o(i.EvrRtxThreadGetState) for EvrRtxThreadGetState
    rtx_thread.o(i.osThreadGetState) refers to rtx_thread.o(i.svcRtxThreadGetState) for svcRtxThreadGetState
    rtx_thread.o(i.osThreadJoin) refers to rtx_evr.o(i.EvrRtxThreadJoin) for EvrRtxThreadJoin
    rtx_thread.o(i.osThreadJoin) refers to rtx_evr.o(i.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(i.osThreadJoin) refers to rtx_thread.o(i.svcRtxThreadJoin) for svcRtxThreadJoin
    rtx_thread.o(i.osThreadNew) refers to rtx_evr.o(i.EvrRtxThreadNew) for EvrRtxThreadNew
    rtx_thread.o(i.osThreadNew) refers to rtx_evr.o(i.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(i.osThreadNew) refers to rtx_thread.o(i.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(i.osThreadResume) refers to rtx_evr.o(i.EvrRtxThreadResume) for EvrRtxThreadResume
    rtx_thread.o(i.osThreadResume) refers to rtx_evr.o(i.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(i.osThreadResume) refers to rtx_thread.o(i.svcRtxThreadResume) for svcRtxThreadResume
    rtx_thread.o(i.osThreadSetPriority) refers to rtx_evr.o(i.EvrRtxThreadSetPriority) for EvrRtxThreadSetPriority
    rtx_thread.o(i.osThreadSetPriority) refers to rtx_evr.o(i.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(i.osThreadSetPriority) refers to rtx_thread.o(i.svcRtxThreadSetPriority) for svcRtxThreadSetPriority
    rtx_thread.o(i.osThreadSuspend) refers to rtx_evr.o(i.EvrRtxThreadSuspend) for EvrRtxThreadSuspend
    rtx_thread.o(i.osThreadSuspend) refers to rtx_evr.o(i.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(i.osThreadSuspend) refers to rtx_thread.o(i.svcRtxThreadSuspend) for svcRtxThreadSuspend
    rtx_thread.o(i.osThreadTerminate) refers to rtx_evr.o(i.EvrRtxThreadTerminate) for EvrRtxThreadTerminate
    rtx_thread.o(i.osThreadTerminate) refers to rtx_evr.o(i.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(i.osThreadTerminate) refers to rtx_thread.o(i.svcRtxThreadTerminate) for svcRtxThreadTerminate
    rtx_thread.o(i.osThreadYield) refers to rtx_evr.o(i.EvrRtxThreadYield) for EvrRtxThreadYield
    rtx_thread.o(i.osThreadYield) refers to rtx_evr.o(i.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(i.osThreadYield) refers to rtx_thread.o(i.svcRtxThreadYield) for svcRtxThreadYield
    rtx_thread.o(i.svcRtxThreadDetach) refers to rtx_evr.o(i.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(i.svcRtxThreadDetach) refers to rtx_evr.o(i.EvrRtxThreadDetached) for EvrRtxThreadDetached
    rtx_thread.o(i.svcRtxThreadDetach) refers to rtx_thread.o(i.osRtxThreadListUnlink) for osRtxThreadListUnlink
    rtx_thread.o(i.svcRtxThreadDetach) refers to rtx_thread.o(i.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(i.svcRtxThreadDetach) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(i.svcRtxThreadEnumerate) refers to rtx_evr.o(i.EvrRtxThreadEnumerate) for EvrRtxThreadEnumerate
    rtx_thread.o(i.svcRtxThreadEnumerate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(i.svcRtxThreadExit) refers to rtx_mutex.o(i.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(i.svcRtxThreadExit) refers to rtx_thread.o(i.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(i.svcRtxThreadExit) refers to rtx_evr.o(i.EvrRtxThreadJoined) for EvrRtxThreadJoined
    rtx_thread.o(i.svcRtxThreadExit) refers to rtx_thread.o(i.osRtxThreadListGet) for osRtxThreadListGet
    rtx_thread.o(i.svcRtxThreadExit) refers to rtx_thread.o(i.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(i.svcRtxThreadExit) refers to rtx_thread.o(i.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(i.svcRtxThreadExit) refers to rtx_evr.o(i.EvrRtxThreadDestroyed) for EvrRtxThreadDestroyed
    rtx_thread.o(i.svcRtxThreadExit) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(i.svcRtxThreadFlagsClear) refers to rtx_evr.o(i.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(i.svcRtxThreadFlagsClear) refers to rtx_thread.o(i.ThreadFlagsClear) for ThreadFlagsClear
    rtx_thread.o(i.svcRtxThreadFlagsClear) refers to rtx_evr.o(i.EvrRtxThreadFlagsClearDone) for EvrRtxThreadFlagsClearDone
    rtx_thread.o(i.svcRtxThreadFlagsClear) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(i.svcRtxThreadFlagsGet) refers to rtx_evr.o(i.EvrRtxThreadFlagsGet) for EvrRtxThreadFlagsGet
    rtx_thread.o(i.svcRtxThreadFlagsGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(i.svcRtxThreadFlagsSet) refers to rtx_evr.o(i.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(i.svcRtxThreadFlagsSet) refers to rtx_thread.o(i.ThreadFlagsSet) for ThreadFlagsSet
    rtx_thread.o(i.svcRtxThreadFlagsSet) refers to rtx_thread.o(i.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(i.svcRtxThreadFlagsSet) refers to rtx_thread.o(i.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(i.svcRtxThreadFlagsSet) refers to rtx_evr.o(i.EvrRtxThreadFlagsWaitCompleted) for EvrRtxThreadFlagsWaitCompleted
    rtx_thread.o(i.svcRtxThreadFlagsSet) refers to rtx_evr.o(i.EvrRtxThreadFlagsSetDone) for EvrRtxThreadFlagsSetDone
    rtx_thread.o(i.svcRtxThreadFlagsWait) refers to rtx_evr.o(i.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(i.svcRtxThreadFlagsWait) refers to rtx_thread.o(i.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(i.svcRtxThreadFlagsWait) refers to rtx_evr.o(i.EvrRtxThreadFlagsWaitCompleted) for EvrRtxThreadFlagsWaitCompleted
    rtx_thread.o(i.svcRtxThreadFlagsWait) refers to rtx_evr.o(i.EvrRtxThreadFlagsWaitPending) for EvrRtxThreadFlagsWaitPending
    rtx_thread.o(i.svcRtxThreadFlagsWait) refers to rtx_thread.o(i.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(i.svcRtxThreadFlagsWait) refers to rtx_evr.o(i.EvrRtxThreadFlagsWaitNotCompleted) for EvrRtxThreadFlagsWaitNotCompleted
    rtx_thread.o(i.svcRtxThreadFlagsWait) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(i.svcRtxThreadGetCount) refers to rtx_evr.o(i.EvrRtxThreadGetCount) for EvrRtxThreadGetCount
    rtx_thread.o(i.svcRtxThreadGetCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(i.svcRtxThreadGetId) refers to rtx_evr.o(i.EvrRtxThreadGetId) for EvrRtxThreadGetId
    rtx_thread.o(i.svcRtxThreadGetId) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(i.svcRtxThreadGetName) refers to rtx_evr.o(i.EvrRtxThreadGetName) for EvrRtxThreadGetName
    rtx_thread.o(i.svcRtxThreadGetPriority) refers to rtx_evr.o(i.EvrRtxThreadGetPriority) for EvrRtxThreadGetPriority
    rtx_thread.o(i.svcRtxThreadGetStackSize) refers to rtx_evr.o(i.EvrRtxThreadGetStackSize) for EvrRtxThreadGetStackSize
    rtx_thread.o(i.svcRtxThreadGetStackSpace) refers to rtx_evr.o(i.EvrRtxThreadGetStackSpace) for EvrRtxThreadGetStackSpace
    rtx_thread.o(i.svcRtxThreadGetStackSpace) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(i.svcRtxThreadGetState) refers to rtx_evr.o(i.EvrRtxThreadGetState) for EvrRtxThreadGetState
    rtx_thread.o(i.svcRtxThreadJoin) refers to rtx_evr.o(i.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(i.svcRtxThreadJoin) refers to rtx_evr.o(i.EvrRtxThreadJoinPending) for EvrRtxThreadJoinPending
    rtx_thread.o(i.svcRtxThreadJoin) refers to rtx_thread.o(i.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(i.svcRtxThreadJoin) refers to rtx_thread.o(i.osRtxThreadListUnlink) for osRtxThreadListUnlink
    rtx_thread.o(i.svcRtxThreadJoin) refers to rtx_thread.o(i.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(i.svcRtxThreadJoin) refers to rtx_evr.o(i.EvrRtxThreadJoined) for EvrRtxThreadJoined
    rtx_thread.o(i.svcRtxThreadJoin) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(i.svcRtxThreadNew) refers to rtx_evr.o(i.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(i.svcRtxThreadNew) refers to rtx_mempool.o(i.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_thread.o(i.svcRtxThreadNew) refers to rtx_memory.o(i.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_thread.o(i.svcRtxThreadNew) refers to rtx_mempool.o(i.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(i.svcRtxThreadNew) refers to rtx_memory.o(i.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(i.svcRtxThreadNew) refers to rtx_evr.o(i.EvrRtxThreadCreated) for EvrRtxThreadCreated
    rtx_thread.o(i.svcRtxThreadNew) refers to rtx_thread.o(i.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(i.svcRtxThreadNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(i.svcRtxThreadNew) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(i.svcRtxThreadNew) refers to rtx_thread.o(i.osThreadExit) for osThreadExit
    rtx_thread.o(i.svcRtxThreadNew) refers to rtx_thread.o(i.osRtxThreadPostProcess) for osRtxThreadPostProcess
    rtx_thread.o(i.svcRtxThreadResume) refers to rtx_evr.o(i.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(i.svcRtxThreadResume) refers to rtx_evr.o(i.EvrRtxThreadResumed) for EvrRtxThreadResumed
    rtx_thread.o(i.svcRtxThreadResume) refers to rtx_thread.o(i.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(i.svcRtxThreadResume) refers to rtx_thread.o(i.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(i.svcRtxThreadResume) refers to rtx_thread.o(i.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(i.svcRtxThreadSetPriority) refers to rtx_evr.o(i.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(i.svcRtxThreadSetPriority) refers to rtx_thread.o(i.osRtxThreadListSort) for osRtxThreadListSort
    rtx_thread.o(i.svcRtxThreadSetPriority) refers to rtx_thread.o(i.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(i.svcRtxThreadSuspend) refers to rtx_evr.o(i.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(i.svcRtxThreadSuspend) refers to rtx_thread.o(i.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(i.svcRtxThreadSuspend) refers to rtx_thread.o(i.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(i.svcRtxThreadSuspend) refers to rtx_evr.o(i.EvrRtxThreadSuspended) for EvrRtxThreadSuspended
    rtx_thread.o(i.svcRtxThreadSuspend) refers to rtx_thread.o(i.osRtxThreadListGet) for osRtxThreadListGet
    rtx_thread.o(i.svcRtxThreadSuspend) refers to rtx_thread.o(i.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(i.svcRtxThreadSuspend) refers to rtx_thread.o(i.osRtxThreadDelayInsert) for osRtxThreadDelayInsert
    rtx_thread.o(i.svcRtxThreadSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(i.svcRtxThreadTerminate) refers to rtx_evr.o(i.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(i.svcRtxThreadTerminate) refers to rtx_thread.o(i.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(i.svcRtxThreadTerminate) refers to rtx_thread.o(i.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(i.svcRtxThreadTerminate) refers to rtx_mutex.o(i.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(i.svcRtxThreadTerminate) refers to rtx_thread.o(i.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(i.svcRtxThreadTerminate) refers to rtx_evr.o(i.EvrRtxThreadJoined) for EvrRtxThreadJoined
    rtx_thread.o(i.svcRtxThreadTerminate) refers to rtx_thread.o(i.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(i.svcRtxThreadTerminate) refers to rtx_thread.o(i.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(i.svcRtxThreadTerminate) refers to rtx_thread.o(i.osRtxThreadListGet) for osRtxThreadListGet
    rtx_thread.o(i.svcRtxThreadTerminate) refers to rtx_thread.o(i.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(i.svcRtxThreadTerminate) refers to rtx_evr.o(i.EvrRtxThreadDestroyed) for EvrRtxThreadDestroyed
    rtx_thread.o(i.svcRtxThreadTerminate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(i.svcRtxThreadYield) refers to rtx_thread.o(i.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(i.svcRtxThreadYield) refers to rtx_thread.o(i.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(i.svcRtxThreadYield) refers to rtx_thread.o(i.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(i.svcRtxThreadYield) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(i.TimerInsert) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(i.TimerRemove) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(i.TimerUnlink) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(i.osRtxTimerThread) refers to rtx_msgqueue.o(i.osMessageQueueGet) for osMessageQueueGet
    rtx_timer.o(i.osRtxTimerThread) refers to rtx_evr.o(i.EvrRtxTimerCallback) for EvrRtxTimerCallback
    rtx_timer.o(i.osRtxTimerThread) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(i.osRtxTimerTick) refers to rtx_timer.o(i.TimerUnlink) for TimerUnlink
    rtx_timer.o(i.osRtxTimerTick) refers to rtx_msgqueue.o(i.osMessageQueuePut) for osMessageQueuePut
    rtx_timer.o(i.osRtxTimerTick) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_timer.o(i.osRtxTimerTick) refers to rtx_timer.o(i.TimerInsert) for TimerInsert
    rtx_timer.o(i.osRtxTimerTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(i.osTimerDelete) refers to rtx_evr.o(i.EvrRtxTimerDelete) for EvrRtxTimerDelete
    rtx_timer.o(i.osTimerDelete) refers to rtx_evr.o(i.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(i.osTimerDelete) refers to rtx_timer.o(i.svcRtxTimerDelete) for svcRtxTimerDelete
    rtx_timer.o(i.osTimerGetName) refers to rtx_evr.o(i.EvrRtxTimerGetName) for EvrRtxTimerGetName
    rtx_timer.o(i.osTimerGetName) refers to rtx_timer.o(i.svcRtxTimerGetName) for svcRtxTimerGetName
    rtx_timer.o(i.osTimerIsRunning) refers to rtx_evr.o(i.EvrRtxTimerIsRunning) for EvrRtxTimerIsRunning
    rtx_timer.o(i.osTimerIsRunning) refers to rtx_timer.o(i.svcRtxTimerIsRunning) for svcRtxTimerIsRunning
    rtx_timer.o(i.osTimerNew) refers to rtx_evr.o(i.EvrRtxTimerNew) for EvrRtxTimerNew
    rtx_timer.o(i.osTimerNew) refers to rtx_evr.o(i.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(i.osTimerNew) refers to rtx_timer.o(i.svcRtxTimerNew) for svcRtxTimerNew
    rtx_timer.o(i.osTimerStart) refers to rtx_evr.o(i.EvrRtxTimerStart) for EvrRtxTimerStart
    rtx_timer.o(i.osTimerStart) refers to rtx_evr.o(i.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(i.osTimerStart) refers to rtx_timer.o(i.svcRtxTimerStart) for svcRtxTimerStart
    rtx_timer.o(i.osTimerStop) refers to rtx_evr.o(i.EvrRtxTimerStop) for EvrRtxTimerStop
    rtx_timer.o(i.osTimerStop) refers to rtx_evr.o(i.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(i.osTimerStop) refers to rtx_timer.o(i.svcRtxTimerStop) for svcRtxTimerStop
    rtx_timer.o(i.svcRtxTimerDelete) refers to rtx_evr.o(i.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(i.svcRtxTimerDelete) refers to rtx_timer.o(i.TimerRemove) for TimerRemove
    rtx_timer.o(i.svcRtxTimerDelete) refers to rtx_mempool.o(i.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_timer.o(i.svcRtxTimerDelete) refers to rtx_memory.o(i.osRtxMemoryFree) for osRtxMemoryFree
    rtx_timer.o(i.svcRtxTimerDelete) refers to rtx_evr.o(i.EvrRtxTimerDestroyed) for EvrRtxTimerDestroyed
    rtx_timer.o(i.svcRtxTimerDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(i.svcRtxTimerGetName) refers to rtx_evr.o(i.EvrRtxTimerGetName) for EvrRtxTimerGetName
    rtx_timer.o(i.svcRtxTimerIsRunning) refers to rtx_evr.o(i.EvrRtxTimerIsRunning) for EvrRtxTimerIsRunning
    rtx_timer.o(i.svcRtxTimerNew) refers to rtx_msgqueue.o(i.svcRtxMessageQueueNew) for svcRtxMessageQueueNew
    rtx_timer.o(i.svcRtxTimerNew) refers to rtx_evr.o(i.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(i.svcRtxTimerNew) refers to rtx_thread.o(i.svcRtxThreadNew) for svcRtxThreadNew
    rtx_timer.o(i.svcRtxTimerNew) refers to rtx_evr.o(i.EvrRtxTimerCreated) for EvrRtxTimerCreated
    rtx_timer.o(i.svcRtxTimerNew) refers to rtx_mempool.o(i.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_timer.o(i.svcRtxTimerNew) refers to rtx_memory.o(i.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_timer.o(i.svcRtxTimerNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(i.svcRtxTimerNew) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_timer.o(i.svcRtxTimerNew) refers to rtx_timer.o(i.osRtxTimerThread) for osRtxTimerThread
    rtx_timer.o(i.svcRtxTimerStart) refers to rtx_evr.o(i.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(i.svcRtxTimerStart) refers to rtx_timer.o(i.TimerRemove) for TimerRemove
    rtx_timer.o(i.svcRtxTimerStart) refers to rtx_timer.o(i.TimerInsert) for TimerInsert
    rtx_timer.o(i.svcRtxTimerStart) refers to rtx_evr.o(i.EvrRtxTimerStarted) for EvrRtxTimerStarted
    rtx_timer.o(i.svcRtxTimerStop) refers to rtx_evr.o(i.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(i.svcRtxTimerStop) refers to rtx_timer.o(i.TimerRemove) for TimerRemove
    rtx_timer.o(i.svcRtxTimerStop) refers to rtx_evr.o(i.EvrRtxTimerStopped) for EvrRtxTimerStopped
    usart_stm32f10x.o(i.USART1_Control) refers to usart_stm32f10x.o(i.USART_Control) for USART_Control
    usart_stm32f10x.o(i.USART1_Control) refers to usart_stm32f10x.o(.constdata) for .constdata
    usart_stm32f10x.o(i.USART1_GetCapabilities) refers to usart_stm32f10x.o(i.USART_GetCapabilities) for USART_GetCapabilities
    usart_stm32f10x.o(i.USART1_GetCapabilities) refers to usart_stm32f10x.o(.constdata) for .constdata
    usart_stm32f10x.o(i.USART1_GetModemStatus) refers to usart_stm32f10x.o(i.USART_GetModemStatus) for USART_GetModemStatus
    usart_stm32f10x.o(i.USART1_GetModemStatus) refers to usart_stm32f10x.o(.constdata) for .constdata
    usart_stm32f10x.o(i.USART1_GetRxCount) refers to usart_stm32f10x.o(i.USART_GetRxCount) for USART_GetRxCount
    usart_stm32f10x.o(i.USART1_GetRxCount) refers to usart_stm32f10x.o(.constdata) for .constdata
    usart_stm32f10x.o(i.USART1_GetStatus) refers to usart_stm32f10x.o(i.USART_GetStatus) for USART_GetStatus
    usart_stm32f10x.o(i.USART1_GetStatus) refers to usart_stm32f10x.o(.constdata) for .constdata
    usart_stm32f10x.o(i.USART1_GetTxCount) refers to usart_stm32f10x.o(i.USART_GetTxCount) for USART_GetTxCount
    usart_stm32f10x.o(i.USART1_GetTxCount) refers to usart_stm32f10x.o(.constdata) for .constdata
    usart_stm32f10x.o(i.USART1_IRQHandler) refers to usart_stm32f10x.o(i.USART_IRQHandler) for USART_IRQHandler
    usart_stm32f10x.o(i.USART1_IRQHandler) refers to usart_stm32f10x.o(.constdata) for .constdata
    usart_stm32f10x.o(i.USART1_Initialize) refers to usart_stm32f10x.o(i.USART_Initialize) for USART_Initialize
    usart_stm32f10x.o(i.USART1_Initialize) refers to usart_stm32f10x.o(.constdata) for .constdata
    usart_stm32f10x.o(i.USART1_PowerControl) refers to usart_stm32f10x.o(i.USART_PowerControl) for USART_PowerControl
    usart_stm32f10x.o(i.USART1_PowerControl) refers to usart_stm32f10x.o(.constdata) for .constdata
    usart_stm32f10x.o(i.USART1_Receive) refers to usart_stm32f10x.o(i.USART_Receive) for USART_Receive
    usart_stm32f10x.o(i.USART1_Receive) refers to usart_stm32f10x.o(.constdata) for .constdata
    usart_stm32f10x.o(i.USART1_Send) refers to usart_stm32f10x.o(i.USART_Send) for USART_Send
    usart_stm32f10x.o(i.USART1_Send) refers to usart_stm32f10x.o(.constdata) for .constdata
    usart_stm32f10x.o(i.USART1_SetModemControl) refers to usart_stm32f10x.o(i.USART_SetModemControl) for USART_SetModemControl
    usart_stm32f10x.o(i.USART1_SetModemControl) refers to usart_stm32f10x.o(.constdata) for .constdata
    usart_stm32f10x.o(i.USART1_Transfer) refers to usart_stm32f10x.o(i.USART_Transfer) for USART_Transfer
    usart_stm32f10x.o(i.USART1_Transfer) refers to usart_stm32f10x.o(.constdata) for .constdata
    usart_stm32f10x.o(i.USART1_Uninitialize) refers to usart_stm32f10x.o(i.USART_Uninitialize) for USART_Uninitialize
    usart_stm32f10x.o(i.USART1_Uninitialize) refers to usart_stm32f10x.o(.constdata) for .constdata
    usart_stm32f10x.o(i.USART_Control) refers to gpio_stm32f10x.o(i.GPIO_PinConfigure) for GPIO_PinConfigure
    usart_stm32f10x.o(i.USART_Initialize) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    usart_stm32f10x.o(i.USART_Initialize) refers to gpio_stm32f10x.o(i.GPIO_AFConfigure) for GPIO_AFConfigure
    usart_stm32f10x.o(i.USART_Initialize) refers to gpio_stm32f10x.o(i.GPIO_PortClock) for GPIO_PortClock
    usart_stm32f10x.o(i.USART_PowerControl) refers to usart_stm32f10x.o(i.USART_PeripheralReset) for USART_PeripheralReset
    usart_stm32f10x.o(i.USART_Receive) refers to usart_stm32f10x.o(i.USART_Send) for USART_Send
    usart_stm32f10x.o(i.USART_Send) refers to usart_stm32f10x.o(i.USART_Receive) for USART_Receive
    usart_stm32f10x.o(i.USART_Transfer) refers to usart_stm32f10x.o(i.USART_Receive) for USART_Receive
    usart_stm32f10x.o(i.USART_Transfer) refers to usart_stm32f10x.o(i.USART_Send) for USART_Send
    usart_stm32f10x.o(i.USART_Uninitialize) refers to gpio_stm32f10x.o(i.GPIO_PinConfigure) for GPIO_PinConfigure
    usart_stm32f10x.o(i.USART_Uninitialize) refers to gpio_stm32f10x.o(i.GPIO_AFConfigure) for GPIO_AFConfigure
    usart_stm32f10x.o(i.USARTx_GetVersion) refers to usart_stm32f10x.o(.constdata) for .constdata
    usart_stm32f10x.o(.constdata) refers to usart_stm32f10x.o(.constdata) for USART1_tx
    usart_stm32f10x.o(.constdata) refers to usart_stm32f10x.o(.constdata) for USART1_rx
    usart_stm32f10x.o(.constdata) refers to usart_stm32f10x.o(.bss) for USART1_Info
    usart_stm32f10x.o(.constdata) refers to usart_stm32f10x.o(.bss) for USART1_TransferInfo
    usart_stm32f10x.o(.constdata) refers to usart_stm32f10x.o(i.USARTx_GetVersion) for USARTx_GetVersion
    usart_stm32f10x.o(.constdata) refers to usart_stm32f10x.o(i.USART1_GetCapabilities) for USART1_GetCapabilities
    usart_stm32f10x.o(.constdata) refers to usart_stm32f10x.o(i.USART1_Initialize) for USART1_Initialize
    usart_stm32f10x.o(.constdata) refers to usart_stm32f10x.o(i.USART1_Uninitialize) for USART1_Uninitialize
    usart_stm32f10x.o(.constdata) refers to usart_stm32f10x.o(i.USART1_PowerControl) for USART1_PowerControl
    usart_stm32f10x.o(.constdata) refers to usart_stm32f10x.o(i.USART1_Send) for USART1_Send
    usart_stm32f10x.o(.constdata) refers to usart_stm32f10x.o(i.USART1_Receive) for USART1_Receive
    usart_stm32f10x.o(.constdata) refers to usart_stm32f10x.o(i.USART1_Transfer) for USART1_Transfer
    usart_stm32f10x.o(.constdata) refers to usart_stm32f10x.o(i.USART1_GetTxCount) for USART1_GetTxCount
    usart_stm32f10x.o(.constdata) refers to usart_stm32f10x.o(i.USART1_GetRxCount) for USART1_GetRxCount
    usart_stm32f10x.o(.constdata) refers to usart_stm32f10x.o(i.USART1_Control) for USART1_Control
    usart_stm32f10x.o(.constdata) refers to usart_stm32f10x.o(i.USART1_GetStatus) for USART1_GetStatus
    usart_stm32f10x.o(.constdata) refers to usart_stm32f10x.o(i.USART1_SetModemControl) for USART1_SetModemControl
    usart_stm32f10x.o(.constdata) refers to usart_stm32f10x.o(i.USART1_GetModemStatus) for USART1_GetModemStatus
    retarget_io.o(i._sys_open) refers to strcmpv7m.o(.text) for strcmp
    retarget_io.o(i._sys_read) refers to dependent_io.o(i.stdin_getchar) for stdin_getchar
    retarget_io.o(i._sys_write) refers to dependent_io.o(i.stderr_putchar) for stderr_putchar
    retarget_io.o(i._sys_write) refers to dependent_io.o(i.stdout_putchar) for stdout_putchar
    dma_stm32f10x.o(i.DMA1_Channel1_IRQHandler) refers to dma_stm32f10x.o(i.DMA1_Channel1_Event) for DMA1_Channel1_Event
    dma_stm32f10x.o(i.DMA1_Channel2_IRQHandler) refers to dma_stm32f10x.o(i.DMA1_Channel2_Event) for DMA1_Channel2_Event
    dma_stm32f10x.o(i.DMA1_Channel3_IRQHandler) refers to dma_stm32f10x.o(i.DMA1_Channel3_Event) for DMA1_Channel3_Event
    dma_stm32f10x.o(i.DMA1_Channel4_IRQHandler) refers to dma_stm32f10x.o(i.DMA1_Channel4_Event) for DMA1_Channel4_Event
    dma_stm32f10x.o(i.DMA1_Channel5_IRQHandler) refers to dma_stm32f10x.o(i.DMA1_Channel5_Event) for DMA1_Channel5_Event
    dma_stm32f10x.o(i.DMA1_Channel6_IRQHandler) refers to dma_stm32f10x.o(i.DMA1_Channel6_Event) for DMA1_Channel6_Event
    dma_stm32f10x.o(i.DMA1_Channel7_IRQHandler) refers to dma_stm32f10x.o(i.DMA1_Channel7_Event) for DMA1_Channel7_Event
    dma_stm32f10x.o(i.DMA2_Channel1_IRQHandler) refers to dma_stm32f10x.o(i.DMA2_Channel1_Event) for DMA2_Channel1_Event
    dma_stm32f10x.o(i.DMA2_Channel2_IRQHandler) refers to dma_stm32f10x.o(i.DMA2_Channel2_Event) for DMA2_Channel2_Event
    dma_stm32f10x.o(i.DMA2_Channel3_IRQHandler) refers to dma_stm32f10x.o(i.DMA2_Channel3_Event) for DMA2_Channel3_Event
    dma_stm32f10x.o(i.DMA2_Channel4_5_IRQHandler) refers to dma_stm32f10x.o(i.DMA2_Channel4_Event) for DMA2_Channel4_Event
    dma_stm32f10x.o(i.DMA2_Channel4_5_IRQHandler) refers to dma_stm32f10x.o(i.DMA2_Channel5_Event) for DMA2_Channel5_Event
    dma_stm32f10x.o(i.DMA2_Channel4_IRQHandler) refers to dma_stm32f10x.o(i.DMA2_Channel4_Event) for DMA2_Channel4_Event
    dma_stm32f10x.o(i.DMA_ChannelInitialize) refers to dma_stm32f10x.o(i.__NVIC_ClearPendingIRQ) for __NVIC_ClearPendingIRQ
    dma_stm32f10x.o(i.DMA_ChannelInitialize) refers to dma_stm32f10x.o(i.__NVIC_EnableIRQ) for __NVIC_EnableIRQ
    dma_stm32f10x.o(i.DMA_ChannelInitialize) refers to dma_stm32f10x.o(.data) for .data
    dma_stm32f10x.o(i.DMA_ChannelUninitialize) refers to dma_stm32f10x.o(i.__NVIC_DisableIRQ) for __NVIC_DisableIRQ
    dma_stm32f10x.o(i.DMA_ChannelUninitialize) refers to dma_stm32f10x.o(.data) for .data
    gpio_stm32f10x.o(i.GPIO_PinConfigure) refers to gpio_stm32f10x.o(i.GPIO_GetPortClockState) for GPIO_GetPortClockState
    gpio_stm32f10x.o(i.GPIO_PinConfigure) refers to gpio_stm32f10x.o(i.GPIO_PortClock) for GPIO_PortClock
    startup_stm32f10x_hd.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_hd.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_hd.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_hd.o(RESET) refers to startup_stm32f10x_hd.o(STACK) for __initial_sp
    startup_stm32f10x_hd.o(RESET) refers to startup_stm32f10x_hd.o(.text) for Reset_Handler
    startup_stm32f10x_hd.o(RESET) refers to irq_cm3.o(.text) for SVC_Handler
    startup_stm32f10x_hd.o(RESET) refers to dma_stm32f10x.o(i.DMA1_Channel1_IRQHandler) for DMA1_Channel1_IRQHandler
    startup_stm32f10x_hd.o(RESET) refers to dma_stm32f10x.o(i.DMA1_Channel2_IRQHandler) for DMA1_Channel2_IRQHandler
    startup_stm32f10x_hd.o(RESET) refers to dma_stm32f10x.o(i.DMA1_Channel3_IRQHandler) for DMA1_Channel3_IRQHandler
    startup_stm32f10x_hd.o(RESET) refers to dma_stm32f10x.o(i.DMA1_Channel4_IRQHandler) for DMA1_Channel4_IRQHandler
    startup_stm32f10x_hd.o(RESET) refers to dma_stm32f10x.o(i.DMA1_Channel5_IRQHandler) for DMA1_Channel5_IRQHandler
    startup_stm32f10x_hd.o(RESET) refers to dma_stm32f10x.o(i.DMA1_Channel6_IRQHandler) for DMA1_Channel6_IRQHandler
    startup_stm32f10x_hd.o(RESET) refers to dma_stm32f10x.o(i.DMA1_Channel7_IRQHandler) for DMA1_Channel7_IRQHandler
    startup_stm32f10x_hd.o(RESET) refers to usart_stm32f10x.o(i.USART1_IRQHandler) for USART1_IRQHandler
    startup_stm32f10x_hd.o(RESET) refers to dma_stm32f10x.o(i.DMA2_Channel1_IRQHandler) for DMA2_Channel1_IRQHandler
    startup_stm32f10x_hd.o(RESET) refers to dma_stm32f10x.o(i.DMA2_Channel2_IRQHandler) for DMA2_Channel2_IRQHandler
    startup_stm32f10x_hd.o(RESET) refers to dma_stm32f10x.o(i.DMA2_Channel3_IRQHandler) for DMA2_Channel3_IRQHandler
    startup_stm32f10x_hd.o(RESET) refers to dma_stm32f10x.o(i.DMA2_Channel4_5_IRQHandler) for DMA2_Channel4_5_IRQHandler
    startup_stm32f10x_hd.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_hd.o(.text) refers to system_stm32f10x.o(i.SystemInit) for SystemInit
    startup_stm32f10x_hd.o(.text) refers to __main.o(!!!main) for __main
    startup_stm32f10x_hd.o(.text) refers to startup_stm32f10x_hd.o(HEAP) for Heap_Mem
    startup_stm32f10x_hd.o(.text) refers to startup_stm32f10x_hd.o(STACK) for Stack_Mem
    system_stm32f10x.o(i.SetSysClock) refers to system_stm32f10x.o(i.SetSysClockTo72) for SetSysClockTo72
    system_stm32f10x.o(i.SystemCoreClockUpdate) refers to system_stm32f10x.o(.data) for .data
    system_stm32f10x.o(i.SystemInit) refers to system_stm32f10x.o(i.SetSysClock) for SetSysClock
    rt_memcpy_v6.o(.text) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    rt_memclr.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to rtx_lib.o(i._platform_post_stackheap_init) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(i.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_stm32f10x_hd.o(.text) for __user_initial_stackheap
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002C) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000002) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000A) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000011) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_user_alloc_1
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    libinit2.o(.ARM.Collect$$libinit$$00000010) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000026) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000027) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.rev16_text), (4 bytes).
    Removing main.o(.revsh_text), (4 bytes).
    Removing main.o(.rrx_text), (6 bytes).
    Removing usart.o(i.USART_1_IRS_callback), (32 bytes).
    Removing usart.o(i.USART_1_init), (48 bytes).
    Removing usart.o(i.USART_default_init), (44 bytes).
    Removing usart.o(.data), (4 bytes).
    Removing dependent_io.o(i.__backspace), (4 bytes).
    Removing dependent_io.o(i.__device_stdio_callback), (32 bytes).
    Removing dependent_io.o(i.__device_stdio_in), (2 bytes).
    Removing dependent_io.o(i.__device_stdio_out), (2 bytes).
    Removing dependent_io.o(i.device_stdio_init), (92 bytes).
    Removing dependent_io.o(i.ferror), (4 bytes).
    Removing dependent_io.o(i.fgetc), (26 bytes).
    Removing dependent_io.o(i.fputc), (28 bytes).
    Removing dependent_io.o(i.stderr_putchar), (44 bytes).
    Removing dependent_io.o(i.stdin_getchar), (12 bytes).
    Removing dependent_io.o(i.stdout_putchar), (12 bytes).
    Removing dependent_io.o(i.sys_stdio_manage_init), (76 bytes).
    Removing dependent_io.o(.bss), (20 bytes).
    Removing dependent_io.o(.bss), (128 bytes).
    Removing dependent_io.o(.bss), (128 bytes).
    Removing dependent_io.o(.data), (52 bytes).
    Removing dependent_io.o(.data), (20 bytes).
    Removing dependent_io.o(.data), (20 bytes).
    Removing irq_cm3.o(.constdata), (1 bytes).
    Removing rtx_delay.o(.rev16_text), (4 bytes).
    Removing rtx_delay.o(.revsh_text), (4 bytes).
    Removing rtx_delay.o(.rrx_text), (6 bytes).
    Removing rtx_delay.o(.emb_text), (340 bytes).
    Removing rtx_delay.o(i.osDelay), (60 bytes).
    Removing rtx_delay.o(i.osDelayUntil), (64 bytes).
    Removing rtx_delay.o(i.svcRtxDelay), (22 bytes).
    Removing rtx_delay.o(i.svcRtxDelayUntil), (64 bytes).
    Removing rtx_evflags.o(.rev16_text), (4 bytes).
    Removing rtx_evflags.o(.revsh_text), (4 bytes).
    Removing rtx_evflags.o(.rrx_text), (6 bytes).
    Removing rtx_evflags.o(.emb_text), (340 bytes).
    Removing rtx_evflags.o(i.EventFlagsCheck), (46 bytes).
    Removing rtx_evflags.o(i.EventFlagsClear), (6 bytes).
    Removing rtx_evflags.o(i.EventFlagsSet), (6 bytes).
    Removing rtx_evflags.o(i.osEventFlagsClear), (60 bytes).
    Removing rtx_evflags.o(i.osEventFlagsDelete), (60 bytes).
    Removing rtx_evflags.o(i.osEventFlagsGet), (36 bytes).
    Removing rtx_evflags.o(i.osEventFlagsGetName), (44 bytes).
    Removing rtx_evflags.o(i.osEventFlagsNew), (80 bytes).
    Removing rtx_evflags.o(i.osEventFlagsSet), (124 bytes).
    Removing rtx_evflags.o(i.osEventFlagsWait), (160 bytes).
    Removing rtx_evflags.o(i.osRtxEventFlagsPostProcess), (74 bytes).
    Removing rtx_evflags.o(i.svcRtxEventFlagsClear), (74 bytes).
    Removing rtx_evflags.o(i.svcRtxEventFlagsDelete), (128 bytes).
    Removing rtx_evflags.o(i.svcRtxEventFlagsGet), (54 bytes).
    Removing rtx_evflags.o(i.svcRtxEventFlagsGetName), (54 bytes).
    Removing rtx_evflags.o(i.svcRtxEventFlagsNew), (148 bytes).
    Removing rtx_evflags.o(i.svcRtxEventFlagsSet), (162 bytes).
    Removing rtx_evflags.o(i.svcRtxEventFlagsWait), (184 bytes).
    Removing rtx_evr.o(.rev16_text), (4 bytes).
    Removing rtx_evr.o(.revsh_text), (4 bytes).
    Removing rtx_evr.o(.rrx_text), (6 bytes).
    Removing rtx_evr.o(i.EvrRtxEventFlagsClear), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxEventFlagsClearDone), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxEventFlagsCreated), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxEventFlagsDelete), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxEventFlagsDestroyed), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxEventFlagsError), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxEventFlagsGet), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxEventFlagsGetName), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxEventFlagsNew), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxEventFlagsSet), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxEventFlagsSetDone), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxEventFlagsWait), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxEventFlagsWaitCompleted), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxEventFlagsWaitNotCompleted), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxEventFlagsWaitPending), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxKernelGetInfo), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxKernelGetSysTimerCount), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxKernelGetSysTimerFreq), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxKernelGetTickCount), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxKernelGetTickFreq), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxKernelInfoRetrieved), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxKernelLock), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxKernelLockRestored), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxKernelLocked), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxKernelRestoreLock), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxKernelResume), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxKernelResumed), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxKernelSuspend), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxKernelSuspended), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxKernelUnlock), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxKernelUnlocked), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxMemoryPoolAlloc), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxMemoryPoolAllocFailed), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxMemoryPoolAllocPending), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxMemoryPoolAllocated), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxMemoryPoolCreated), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxMemoryPoolDeallocated), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxMemoryPoolDelete), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxMemoryPoolDestroyed), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxMemoryPoolError), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxMemoryPoolFree), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxMemoryPoolFreeFailed), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxMemoryPoolGetBlockSize), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxMemoryPoolGetCapacity), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxMemoryPoolGetCount), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxMemoryPoolGetName), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxMemoryPoolGetSpace), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxMemoryPoolNew), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxMessageQueueCreated), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxMessageQueueDelete), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxMessageQueueDestroyed), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxMessageQueueGet), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxMessageQueueGetCapacity), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxMessageQueueGetCount), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxMessageQueueGetMsgSize), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxMessageQueueGetName), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxMessageQueueGetPending), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxMessageQueueGetSpace), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxMessageQueueNew), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxMessageQueueNotRetrieved), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxMessageQueueReset), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxMessageQueueResetDone), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxMutexGetName), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxMutexGetOwner), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxSemaphoreAcquire), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxSemaphoreAcquirePending), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxSemaphoreAcquired), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxSemaphoreCreated), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxSemaphoreDelete), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxSemaphoreDestroyed), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxSemaphoreError), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxSemaphoreGetCount), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxSemaphoreGetName), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxSemaphoreNew), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxSemaphoreNotAcquired), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxSemaphoreRelease), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxSemaphoreReleased), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxThreadDelay), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxThreadDelayUntil), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxThreadDetach), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxThreadDetached), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxThreadEnumerate), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxThreadFlagsClear), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxThreadFlagsClearDone), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxThreadFlagsGet), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxThreadFlagsSet), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxThreadFlagsSetDone), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxThreadFlagsWait), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxThreadFlagsWaitNotCompleted), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxThreadFlagsWaitPending), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxThreadGetCount), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxThreadGetId), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxThreadGetName), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxThreadGetPriority), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxThreadGetStackSize), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxThreadGetStackSpace), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxThreadGetState), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxThreadJoin), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxThreadJoinPending), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxThreadNew), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxThreadResume), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxThreadResumed), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxThreadSetPriority), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxThreadSuspend), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxThreadSuspended), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxThreadTerminate), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxThreadYield), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxTimerCallback), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxTimerCreated), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxTimerDelete), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxTimerDestroyed), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxTimerError), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxTimerGetName), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxTimerIsRunning), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxTimerNew), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxTimerStart), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxTimerStarted), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxTimerStop), (2 bytes).
    Removing rtx_evr.o(i.EvrRtxTimerStopped), (2 bytes).
    Removing rtx_kernel.o(.rev16_text), (4 bytes).
    Removing rtx_kernel.o(.revsh_text), (4 bytes).
    Removing rtx_kernel.o(.rrx_text), (6 bytes).
    Removing rtx_kernel.o(.emb_text), (340 bytes).
    Removing rtx_kernel.o(i.KernelBlock), (96 bytes).
    Removing rtx_kernel.o(i.KernelUnblock), (60 bytes).
    Removing rtx_kernel.o(i.osKernelGetInfo), (92 bytes).
    Removing rtx_kernel.o(i.osKernelGetSysTimerCount), (36 bytes).
    Removing rtx_kernel.o(i.osKernelGetSysTimerFreq), (36 bytes).
    Removing rtx_kernel.o(i.osKernelGetTickCount), (48 bytes).
    Removing rtx_kernel.o(i.osKernelGetTickFreq), (44 bytes).
    Removing rtx_kernel.o(i.osKernelLock), (52 bytes).
    Removing rtx_kernel.o(i.osKernelRestoreLock), (56 bytes).
    Removing rtx_kernel.o(i.osKernelResume), (56 bytes).
    Removing rtx_kernel.o(i.osKernelSuspend), (48 bytes).
    Removing rtx_kernel.o(i.osKernelUnlock), (52 bytes).
    Removing rtx_kernel.o(i.svcRtxKernelGetInfo), (68 bytes).
    Removing rtx_kernel.o(i.svcRtxKernelGetSysTimerCount), (18 bytes).
    Removing rtx_kernel.o(i.svcRtxKernelGetSysTimerFreq), (18 bytes).
    Removing rtx_kernel.o(i.svcRtxKernelGetTickCount), (24 bytes).
    Removing rtx_kernel.o(i.svcRtxKernelGetTickFreq), (20 bytes).
    Removing rtx_kernel.o(i.svcRtxKernelLock), (56 bytes).
    Removing rtx_kernel.o(i.svcRtxKernelRestoreLock), (68 bytes).
    Removing rtx_kernel.o(i.svcRtxKernelResume), (180 bytes).
    Removing rtx_kernel.o(i.svcRtxKernelSuspend), (68 bytes).
    Removing rtx_kernel.o(i.svcRtxKernelUnlock), (56 bytes).
    Removing rtx_kernel.o(.data), (4 bytes).
    Removing rtx_lib.o(.rev16_text), (4 bytes).
    Removing rtx_lib.o(.revsh_text), (4 bytes).
    Removing rtx_lib.o(.rrx_text), (6 bytes).
    Removing rtx_lib.o(i.__user_perthread_libspace), (92 bytes).
    Removing rtx_lib.o(.bss.os), (496 bytes).
    Removing rtx_lib.o(.data), (4 bytes).
    Removing rtx_memory.o(.rev16_text), (4 bytes).
    Removing rtx_memory.o(.revsh_text), (4 bytes).
    Removing rtx_memory.o(.rrx_text), (6 bytes).
    Removing rtx_memory.o(.emb_text), (340 bytes).
    Removing rtx_mempool.o(.rev16_text), (4 bytes).
    Removing rtx_mempool.o(.revsh_text), (4 bytes).
    Removing rtx_mempool.o(.rrx_text), (6 bytes).
    Removing rtx_mempool.o(i.osMemoryPoolAlloc), (124 bytes).
    Removing rtx_mempool.o(i.osMemoryPoolDelete), (60 bytes).
    Removing rtx_mempool.o(i.osMemoryPoolFree), (136 bytes).
    Removing rtx_mempool.o(i.osMemoryPoolGetBlockSize), (36 bytes).
    Removing rtx_mempool.o(i.osMemoryPoolGetCapacity), (36 bytes).
    Removing rtx_mempool.o(i.osMemoryPoolGetCount), (36 bytes).
    Removing rtx_mempool.o(i.osMemoryPoolGetName), (44 bytes).
    Removing rtx_mempool.o(i.osMemoryPoolGetSpace), (36 bytes).
    Removing rtx_mempool.o(i.osMemoryPoolNew), (92 bytes).
    Removing rtx_mempool.o(i.osRtxMemoryPoolPostProcess), (58 bytes).
    Removing rtx_mempool.o(i.svcRtxMemoryPoolAlloc), (116 bytes).
    Removing rtx_mempool.o(i.svcRtxMemoryPoolDelete), (144 bytes).
    Removing rtx_mempool.o(i.svcRtxMemoryPoolFree), (134 bytes).
    Removing rtx_mempool.o(i.svcRtxMemoryPoolGetBlockSize), (54 bytes).
    Removing rtx_mempool.o(i.svcRtxMemoryPoolGetCapacity), (54 bytes).
    Removing rtx_mempool.o(i.svcRtxMemoryPoolGetCount), (54 bytes).
    Removing rtx_mempool.o(i.svcRtxMemoryPoolGetName), (54 bytes).
    Removing rtx_mempool.o(i.svcRtxMemoryPoolGetSpace), (62 bytes).
    Removing rtx_mempool.o(i.svcRtxMemoryPoolNew), (360 bytes).
    Removing rtx_msgqueue.o(.rev16_text), (4 bytes).
    Removing rtx_msgqueue.o(.revsh_text), (4 bytes).
    Removing rtx_msgqueue.o(.rrx_text), (6 bytes).
    Removing rtx_msgqueue.o(i.MessageQueueGet), (42 bytes).
    Removing rtx_msgqueue.o(i.MessageQueueRemove), (30 bytes).
    Removing rtx_msgqueue.o(i.osMessageQueueDelete), (60 bytes).
    Removing rtx_msgqueue.o(i.osMessageQueueGet), (180 bytes).
    Removing rtx_msgqueue.o(i.osMessageQueueGetCapacity), (36 bytes).
    Removing rtx_msgqueue.o(i.osMessageQueueGetCount), (36 bytes).
    Removing rtx_msgqueue.o(i.osMessageQueueGetMsgSize), (36 bytes).
    Removing rtx_msgqueue.o(i.osMessageQueueGetName), (44 bytes).
    Removing rtx_msgqueue.o(i.osMessageQueueGetSpace), (36 bytes).
    Removing rtx_msgqueue.o(i.osMessageQueueNew), (92 bytes).
    Removing rtx_msgqueue.o(i.osMessageQueueReset), (60 bytes).
    Removing rtx_msgqueue.o(i.osRtxMessageQueuePostProcess), (284 bytes).
    Removing rtx_msgqueue.o(i.svcRtxMessageQueueDelete), (144 bytes).
    Removing rtx_msgqueue.o(i.svcRtxMessageQueueGet), (284 bytes).
    Removing rtx_msgqueue.o(i.svcRtxMessageQueueGetCapacity), (54 bytes).
    Removing rtx_msgqueue.o(i.svcRtxMessageQueueGetCount), (54 bytes).
    Removing rtx_msgqueue.o(i.svcRtxMessageQueueGetMsgSize), (54 bytes).
    Removing rtx_msgqueue.o(i.svcRtxMessageQueueGetName), (54 bytes).
    Removing rtx_msgqueue.o(i.svcRtxMessageQueueGetSpace), (62 bytes).
    Removing rtx_msgqueue.o(i.svcRtxMessageQueueNew), (376 bytes).
    Removing rtx_msgqueue.o(i.svcRtxMessageQueueReset), (212 bytes).
    Removing rtx_mutex.o(.rev16_text), (4 bytes).
    Removing rtx_mutex.o(.revsh_text), (4 bytes).
    Removing rtx_mutex.o(.rrx_text), (6 bytes).
    Removing rtx_mutex.o(.emb_text), (340 bytes).
    Removing rtx_mutex.o(i.osMutexGetName), (44 bytes).
    Removing rtx_mutex.o(i.osMutexGetOwner), (44 bytes).
    Removing rtx_mutex.o(i.svcRtxMutexGetName), (54 bytes).
    Removing rtx_mutex.o(i.svcRtxMutexGetOwner), (70 bytes).
    Removing rtx_semaphore.o(.rev16_text), (4 bytes).
    Removing rtx_semaphore.o(.revsh_text), (4 bytes).
    Removing rtx_semaphore.o(.rrx_text), (6 bytes).
    Removing rtx_semaphore.o(.emb_text), (340 bytes).
    Removing rtx_semaphore.o(i.SemaphoreTokenDecrement), (18 bytes).
    Removing rtx_semaphore.o(i.SemaphoreTokenIncrement), (28 bytes).
    Removing rtx_semaphore.o(i.osRtxSemaphorePostProcess), (52 bytes).
    Removing rtx_semaphore.o(i.osSemaphoreAcquire), (124 bytes).
    Removing rtx_semaphore.o(i.osSemaphoreDelete), (60 bytes).
    Removing rtx_semaphore.o(i.osSemaphoreGetCount), (36 bytes).
    Removing rtx_semaphore.o(i.osSemaphoreGetName), (44 bytes).
    Removing rtx_semaphore.o(i.osSemaphoreNew), (92 bytes).
    Removing rtx_semaphore.o(i.osSemaphoreRelease), (124 bytes).
    Removing rtx_semaphore.o(i.svcRtxSemaphoreAcquire), (120 bytes).
    Removing rtx_semaphore.o(i.svcRtxSemaphoreDelete), (128 bytes).
    Removing rtx_semaphore.o(i.svcRtxSemaphoreGetCount), (54 bytes).
    Removing rtx_semaphore.o(i.svcRtxSemaphoreGetName), (54 bytes).
    Removing rtx_semaphore.o(i.svcRtxSemaphoreNew), (188 bytes).
    Removing rtx_semaphore.o(i.svcRtxSemaphoreRelease), (114 bytes).
    Removing rtx_system.o(.rev16_text), (4 bytes).
    Removing rtx_system.o(.revsh_text), (4 bytes).
    Removing rtx_system.o(.rrx_text), (6 bytes).
    Removing rtx_system.o(i.SysTick_GetVal), (12 bytes).
    Removing rtx_system.o(i.osRtxSysTimerDisable), (10 bytes).
    Removing rtx_system.o(i.osRtxSysTimerGetCount), (44 bytes).
    Removing rtx_system.o(i.osRtxSysTimerGetFreq), (12 bytes).
    Removing rtx_thread.o(.rev16_text), (4 bytes).
    Removing rtx_thread.o(.revsh_text), (4 bytes).
    Removing rtx_thread.o(.rrx_text), (6 bytes).
    Removing rtx_thread.o(i.ThreadFlagsClear), (6 bytes).
    Removing rtx_thread.o(i.ThreadFlagsSet), (6 bytes).
    Removing rtx_thread.o(i.osRtxThreadListUnlink), (30 bytes).
    Removing rtx_thread.o(i.osThreadDetach), (60 bytes).
    Removing rtx_thread.o(i.osThreadEnumerate), (44 bytes).
    Removing rtx_thread.o(i.osThreadFlagsClear), (60 bytes).
    Removing rtx_thread.o(i.osThreadFlagsGet), (44 bytes).
    Removing rtx_thread.o(i.osThreadFlagsSet), (128 bytes).
    Removing rtx_thread.o(i.osThreadFlagsWait), (72 bytes).
    Removing rtx_thread.o(i.osThreadGetCount), (44 bytes).
    Removing rtx_thread.o(i.osThreadGetId), (44 bytes).
    Removing rtx_thread.o(i.osThreadGetName), (44 bytes).
    Removing rtx_thread.o(i.osThreadGetPriority), (48 bytes).
    Removing rtx_thread.o(i.osThreadGetStackSize), (44 bytes).
    Removing rtx_thread.o(i.osThreadGetStackSpace), (44 bytes).
    Removing rtx_thread.o(i.osThreadGetState), (48 bytes).
    Removing rtx_thread.o(i.osThreadJoin), (60 bytes).
    Removing rtx_thread.o(i.osThreadNew), (92 bytes).
    Removing rtx_thread.o(i.osThreadResume), (60 bytes).
    Removing rtx_thread.o(i.osThreadSetPriority), (64 bytes).
    Removing rtx_thread.o(i.osThreadSuspend), (60 bytes).
    Removing rtx_thread.o(i.osThreadTerminate), (60 bytes).
    Removing rtx_thread.o(i.osThreadYield), (52 bytes).
    Removing rtx_thread.o(i.svcRtxThreadDetach), (112 bytes).
    Removing rtx_thread.o(i.svcRtxThreadEnumerate), (88 bytes).
    Removing rtx_thread.o(i.svcRtxThreadFlagsClear), (88 bytes).
    Removing rtx_thread.o(i.svcRtxThreadFlagsGet), (52 bytes).
    Removing rtx_thread.o(i.svcRtxThreadFlagsSet), (142 bytes).
    Removing rtx_thread.o(i.svcRtxThreadFlagsWait), (140 bytes).
    Removing rtx_thread.o(i.svcRtxThreadGetCount), (56 bytes).
    Removing rtx_thread.o(i.svcRtxThreadGetId), (20 bytes).
    Removing rtx_thread.o(i.svcRtxThreadGetName), (54 bytes).
    Removing rtx_thread.o(i.svcRtxThreadGetPriority), (66 bytes).
    Removing rtx_thread.o(i.svcRtxThreadGetStackSize), (54 bytes).
    Removing rtx_thread.o(i.svcRtxThreadGetStackSpace), (116 bytes).
    Removing rtx_thread.o(i.svcRtxThreadGetState), (50 bytes).
    Removing rtx_thread.o(i.svcRtxThreadJoin), (136 bytes).
    Removing rtx_thread.o(i.svcRtxThreadResume), (84 bytes).
    Removing rtx_thread.o(i.svcRtxThreadSetPriority), (88 bytes).
    Removing rtx_thread.o(i.svcRtxThreadSuspend), (160 bytes).
    Removing rtx_thread.o(i.svcRtxThreadTerminate), (216 bytes).
    Removing rtx_thread.o(i.svcRtxThreadYield), (56 bytes).
    Removing rtx_timer.o(.rev16_text), (4 bytes).
    Removing rtx_timer.o(.revsh_text), (4 bytes).
    Removing rtx_timer.o(.rrx_text), (6 bytes).
    Removing rtx_timer.o(.emb_text), (340 bytes).
    Removing rtx_timer.o(i.TimerRemove), (44 bytes).
    Removing rtx_timer.o(i.osRtxTimerThread), (44 bytes).
    Removing rtx_timer.o(i.osTimerDelete), (60 bytes).
    Removing rtx_timer.o(i.osTimerGetName), (44 bytes).
    Removing rtx_timer.o(i.osTimerIsRunning), (44 bytes).
    Removing rtx_timer.o(i.osTimerNew), (100 bytes).
    Removing rtx_timer.o(i.osTimerStart), (64 bytes).
    Removing rtx_timer.o(i.osTimerStop), (60 bytes).
    Removing rtx_timer.o(i.svcRtxTimerDelete), (112 bytes).
    Removing rtx_timer.o(i.svcRtxTimerGetName), (54 bytes).
    Removing rtx_timer.o(i.svcRtxTimerIsRunning), (48 bytes).
    Removing rtx_timer.o(i.svcRtxTimerNew), (280 bytes).
    Removing rtx_timer.o(i.svcRtxTimerStart), (92 bytes).
    Removing rtx_timer.o(i.svcRtxTimerStop), (72 bytes).
    Removing rtx_config.o(.rev16_text), (4 bytes).
    Removing rtx_config.o(.revsh_text), (4 bytes).
    Removing rtx_config.o(.rrx_text), (6 bytes).
    Removing usart_stm32f10x.o(.rev16_text), (4 bytes).
    Removing usart_stm32f10x.o(.revsh_text), (4 bytes).
    Removing usart_stm32f10x.o(.rrx_text), (6 bytes).
    Removing usart_stm32f10x.o(i.USART1_Control), (12 bytes).
    Removing usart_stm32f10x.o(i.USART1_GetCapabilities), (12 bytes).
    Removing usart_stm32f10x.o(i.USART1_GetModemStatus), (12 bytes).
    Removing usart_stm32f10x.o(i.USART1_GetRxCount), (12 bytes).
    Removing usart_stm32f10x.o(i.USART1_GetStatus), (12 bytes).
    Removing usart_stm32f10x.o(i.USART1_GetTxCount), (12 bytes).
    Removing usart_stm32f10x.o(i.USART1_Initialize), (12 bytes).
    Removing usart_stm32f10x.o(i.USART1_PowerControl), (12 bytes).
    Removing usart_stm32f10x.o(i.USART1_Receive), (12 bytes).
    Removing usart_stm32f10x.o(i.USART1_Send), (12 bytes).
    Removing usart_stm32f10x.o(i.USART1_SetModemControl), (12 bytes).
    Removing usart_stm32f10x.o(i.USART1_Transfer), (12 bytes).
    Removing usart_stm32f10x.o(i.USART1_Uninitialize), (12 bytes).
    Removing usart_stm32f10x.o(i.USART_Control), (1688 bytes).
    Removing usart_stm32f10x.o(i.USART_GetCapabilities), (4 bytes).
    Removing usart_stm32f10x.o(i.USART_GetModemStatus), (116 bytes).
    Removing usart_stm32f10x.o(i.USART_GetRxCount), (6 bytes).
    Removing usart_stm32f10x.o(i.USART_GetStatus), (166 bytes).
    Removing usart_stm32f10x.o(i.USART_GetTxCount), (6 bytes).
    Removing usart_stm32f10x.o(i.USART_Initialize), (142 bytes).
    Removing usart_stm32f10x.o(i.USART_PeripheralReset), (168 bytes).
    Removing usart_stm32f10x.o(i.USART_PowerControl), (452 bytes).
    Removing usart_stm32f10x.o(i.USART_Receive), (140 bytes).
    Removing usart_stm32f10x.o(i.USART_Send), (114 bytes).
    Removing usart_stm32f10x.o(i.USART_SetModemControl), (80 bytes).
    Removing usart_stm32f10x.o(i.USART_Transfer), (84 bytes).
    Removing usart_stm32f10x.o(i.USART_Uninitialize), (100 bytes).
    Removing usart_stm32f10x.o(i.USARTx_GetVersion), (12 bytes).
    Removing usart_stm32f10x.o(.constdata), (56 bytes).
    Removing retarget_io.o(i._sys_close), (32 bytes).
    Removing retarget_io.o(i._sys_flen), (32 bytes).
    Removing retarget_io.o(i._sys_istty), (32 bytes).
    Removing retarget_io.o(i._sys_open), (104 bytes).
    Removing retarget_io.o(i._sys_read), (38 bytes).
    Removing retarget_io.o(i._sys_seek), (12 bytes).
    Removing retarget_io.o(i._sys_write), (66 bytes).
    Removing retarget_io.o(.constdata), (7 bytes).
    Removing retarget_io.o(.constdata), (8 bytes).
    Removing retarget_io.o(.constdata), (8 bytes).
    Removing dma_stm32f10x.o(.rev16_text), (4 bytes).
    Removing dma_stm32f10x.o(.revsh_text), (4 bytes).
    Removing dma_stm32f10x.o(.rrx_text), (6 bytes).
    Removing dma_stm32f10x.o(i.DMA2_Channel4_IRQHandler), (28 bytes).
    Removing dma_stm32f10x.o(i.DMA_ChannelInitialize), (376 bytes).
    Removing dma_stm32f10x.o(i.DMA_ChannelUninitialize), (280 bytes).
    Removing dma_stm32f10x.o(i.__NVIC_ClearPendingIRQ), (26 bytes).
    Removing dma_stm32f10x.o(i.__NVIC_DisableIRQ), (34 bytes).
    Removing dma_stm32f10x.o(i.__NVIC_EnableIRQ), (26 bytes).
    Removing dma_stm32f10x.o(.data), (2 bytes).
    Removing gpio_stm32f10x.o(.rev16_text), (4 bytes).
    Removing gpio_stm32f10x.o(.revsh_text), (4 bytes).
    Removing gpio_stm32f10x.o(.rrx_text), (6 bytes).
    Removing gpio_stm32f10x.o(i.GPIO_AFConfigure), (108 bytes).
    Removing gpio_stm32f10x.o(i.GPIO_GetPortClockState), (136 bytes).
    Removing gpio_stm32f10x.o(i.GPIO_PinConfigure), (102 bytes).
    Removing gpio_stm32f10x.o(i.GPIO_PortClock), (260 bytes).
    Removing system_stm32f10x.o(.rev16_text), (4 bytes).
    Removing system_stm32f10x.o(.revsh_text), (4 bytes).
    Removing system_stm32f10x.o(.rrx_text), (6 bytes).

423 unused section(s) (total 22036 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/dczerorl.s                 0x00000000   Number         0  __dczerorl.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/scatter.s                  0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  strcmpv7m.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_v6.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr_w.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../fplib/fpinit.s                        0x00000000   Number         0  fpinit.o ABSOLUTE
    C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\Source\ARM\irq_cm3.s 0x00000000   Number         0  irq_cm3.o ABSOLUTE
    C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\Source\rtx_delay.c 0x00000000   Number         0  rtx_delay.o ABSOLUTE
    C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\Source\rtx_evflags.c 0x00000000   Number         0  rtx_evflags.o ABSOLUTE
    C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\Source\rtx_evr.c 0x00000000   Number         0  rtx_evr.o ABSOLUTE
    C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\Source\rtx_kernel.c 0x00000000   Number         0  rtx_kernel.o ABSOLUTE
    C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\Source\rtx_lib.c 0x00000000   Number         0  rtx_lib.o ABSOLUTE
    C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\Source\rtx_memory.c 0x00000000   Number         0  rtx_memory.o ABSOLUTE
    C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\Source\rtx_mempool.c 0x00000000   Number         0  rtx_mempool.o ABSOLUTE
    C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\Source\rtx_msgqueue.c 0x00000000   Number         0  rtx_msgqueue.o ABSOLUTE
    C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\Source\rtx_mutex.c 0x00000000   Number         0  rtx_mutex.o ABSOLUTE
    C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\Source\rtx_semaphore.c 0x00000000   Number         0  rtx_semaphore.o ABSOLUTE
    C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\Source\rtx_system.c 0x00000000   Number         0  rtx_system.o ABSOLUTE
    C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\Source\rtx_thread.c 0x00000000   Number         0  rtx_thread.o ABSOLUTE
    C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\Source\rtx_timer.c 0x00000000   Number         0  rtx_timer.o ABSOLUTE
    C:\Keil_v5\ARM\PACK\Keil\ARM_Compiler\1.3.1\Source\retarget_io.c 0x00000000   Number         0  retarget_io.o ABSOLUTE
    C:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.2.0\RTE_Driver\DMA_STM32F10x.c 0x00000000   Number         0  dma_stm32f10x.o ABSOLUTE
    C:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.2.0\RTE_Driver\GPIO_STM32F10x.c 0x00000000   Number         0  gpio_stm32f10x.o ABSOLUTE
    C:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.2.0\RTE_Driver\USART_STM32F10x.c 0x00000000   Number         0  usart_stm32f10x.o ABSOLUTE
    C:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\5.0.1\\CMSIS\\RTOS2\\RTX\\Source\\rtx_delay.c 0x00000000   Number         0  rtx_delay.o ABSOLUTE
    C:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\5.0.1\\CMSIS\\RTOS2\\RTX\\Source\\rtx_evflags.c 0x00000000   Number         0  rtx_evflags.o ABSOLUTE
    C:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\5.0.1\\CMSIS\\RTOS2\\RTX\\Source\\rtx_evr.c 0x00000000   Number         0  rtx_evr.o ABSOLUTE
    C:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\5.0.1\\CMSIS\\RTOS2\\RTX\\Source\\rtx_kernel.c 0x00000000   Number         0  rtx_kernel.o ABSOLUTE
    C:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\5.0.1\\CMSIS\\RTOS2\\RTX\\Source\\rtx_lib.c 0x00000000   Number         0  rtx_lib.o ABSOLUTE
    C:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\5.0.1\\CMSIS\\RTOS2\\RTX\\Source\\rtx_memory.c 0x00000000   Number         0  rtx_memory.o ABSOLUTE
    C:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\5.0.1\\CMSIS\\RTOS2\\RTX\\Source\\rtx_mempool.c 0x00000000   Number         0  rtx_mempool.o ABSOLUTE
    C:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\5.0.1\\CMSIS\\RTOS2\\RTX\\Source\\rtx_msgqueue.c 0x00000000   Number         0  rtx_msgqueue.o ABSOLUTE
    C:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\5.0.1\\CMSIS\\RTOS2\\RTX\\Source\\rtx_mutex.c 0x00000000   Number         0  rtx_mutex.o ABSOLUTE
    C:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\5.0.1\\CMSIS\\RTOS2\\RTX\\Source\\rtx_semaphore.c 0x00000000   Number         0  rtx_semaphore.o ABSOLUTE
    C:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\5.0.1\\CMSIS\\RTOS2\\RTX\\Source\\rtx_system.c 0x00000000   Number         0  rtx_system.o ABSOLUTE
    C:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\5.0.1\\CMSIS\\RTOS2\\RTX\\Source\\rtx_thread.c 0x00000000   Number         0  rtx_thread.o ABSOLUTE
    C:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\5.0.1\\CMSIS\\RTOS2\\RTX\\Source\\rtx_timer.c 0x00000000   Number         0  rtx_timer.o ABSOLUTE
    C:\\Keil_v5\\ARM\\PACK\\Keil\\STM32F1xx_DFP\\2.2.0\\RTE_Driver\\DMA_STM32F10x.c 0x00000000   Number         0  dma_stm32f10x.o ABSOLUTE
    C:\\Keil_v5\\ARM\\PACK\\Keil\\STM32F1xx_DFP\\2.2.0\\RTE_Driver\\GPIO_STM32F10x.c 0x00000000   Number         0  gpio_stm32f10x.o ABSOLUTE
    C:\\Keil_v5\\ARM\\PACK\\Keil\\STM32F1xx_DFP\\2.2.0\\RTE_Driver\\USART_STM32F10x.c 0x00000000   Number         0  usart_stm32f10x.o ABSOLUTE
    RTE\CMSIS\RTX_Config.c                   0x00000000   Number         0  rtx_config.o ABSOLUTE
    RTE\Device\STM32F103ZE\startup_stm32f10x_hd.s 0x00000000   Number         0  startup_stm32f10x_hd.o ABSOLUTE
    RTE\Device\STM32F103ZE\system_stm32f10x.c 0x00000000   Number         0  system_stm32f10x.o ABSOLUTE
    RTE\\CMSIS\\RTX_Config.c                 0x00000000   Number         0  rtx_config.o ABSOLUTE
    RTE\\Device\\STM32F103ZE\\system_stm32f10x.c 0x00000000   Number         0  system_stm32f10x.o ABSOLUTE
    Src\Main\main.c                          0x00000000   Number         0  main.o ABSOLUTE
    Src\Retarget\dependent_io.c              0x00000000   Number         0  dependent_io.o ABSOLUTE
    Src\Usart\usart.c                        0x00000000   Number         0  usart.o ABSOLUTE
    Src\\Main\\main.c                        0x00000000   Number         0  main.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    RESET                                    0x08000000   Section      304  startup_stm32f10x_hd.o(RESET)
    !!!main                                  0x08000130   Section        8  __main.o(!!!main)
    !!!scatter                               0x08000138   Section       52  __scatter.o(!!!scatter)
    !!dczerorl                               0x0800016c   Section       58  __dczerorl.o(!!dczerorl)
    !!handler_zi                             0x080001a8   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x080001c4   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000002          0x080001c6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    .ARM.Collect$$libinit$$00000004          0x080001c6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$0000000A          0x080001c6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    .ARM.Collect$$libinit$$0000000C          0x080001c6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x080001c6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000011          0x080001c6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    .ARM.Collect$$libinit$$00000013          0x080001c6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x080001c6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x080001c6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x080001c6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x080001c6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x080001c6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x080001c6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x080001c6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x080001c6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x080001c6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$0000002C          0x080001c6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    .ARM.Collect$$libinit$$0000002E          0x080001c6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x080001c6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x080001c6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000033          0x080001c6   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000033)
    .ARM.Collect$$libshutdown$$00000000      0x080001c8   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x080001ca   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x080001ca   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x080001ca   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x080001ca   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x080001ca   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x080001ca   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x080001ca   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x080001cc   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x080001cc   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x080001cc   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000008          0x080001d2   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    .ARM.Collect$$rtentry$$0000000A          0x080001da   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x080001de   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x080001de   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x080001e6   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x080001e8   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x080001e8   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x080001ec   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    .emb_text                                0x080001f4   Section      340  rtx_mempool.o(.emb_text)
    .emb_text                                0x08000348   Section      340  rtx_msgqueue.o(.emb_text)
    .emb_text                                0x0800049c   Section      340  rtx_system.o(.emb_text)
    .emb_text                                0x080005f0   Section      340  rtx_thread.o(.emb_text)
    .text                                    0x08000744   Section      136  irq_cm3.o(.text)
    .text                                    0x080007cc   Section       64  startup_stm32f10x_hd.o(.text)
    .text                                    0x0800080c   Section      138  rt_memcpy_v6.o(.text)
    .text                                    0x08000896   Section       78  rt_memclr_w.o(.text)
    .text                                    0x080008e4   Section        0  heapauxi.o(.text)
    .text                                    0x080008ea   Section      100  rt_memcpy_w.o(.text)
    .text                                    0x0800094e   Section       74  sys_stackheap_outer.o(.text)
    .text                                    0x08000998   Section        0  exit.o(.text)
    .text                                    0x080009ac   Section        8  libspace.o(.text)
    .text                                    0x080009b4   Section        0  sys_exit.o(.text)
    .text                                    0x080009c0   Section        2  use_no_semi.o(.text)
    .text                                    0x080009c2   Section        0  indicate_semi.o(.text)
    i.DMA1_Channel1_Event                    0x080009c2   Section        0  dma_stm32f10x.o(i.DMA1_Channel1_Event)
    i.DMA1_Channel1_IRQHandler               0x080009c4   Section        0  dma_stm32f10x.o(i.DMA1_Channel1_IRQHandler)
    i.DMA1_Channel2_Event                    0x080009dc   Section        0  dma_stm32f10x.o(i.DMA1_Channel2_Event)
    i.DMA1_Channel2_IRQHandler               0x080009e0   Section        0  dma_stm32f10x.o(i.DMA1_Channel2_IRQHandler)
    i.DMA1_Channel3_Event                    0x080009f8   Section        0  dma_stm32f10x.o(i.DMA1_Channel3_Event)
    i.DMA1_Channel3_IRQHandler               0x080009fc   Section        0  dma_stm32f10x.o(i.DMA1_Channel3_IRQHandler)
    i.DMA1_Channel4_Event                    0x08000a14   Section        0  dma_stm32f10x.o(i.DMA1_Channel4_Event)
    i.DMA1_Channel4_IRQHandler               0x08000a18   Section        0  dma_stm32f10x.o(i.DMA1_Channel4_IRQHandler)
    i.DMA1_Channel5_Event                    0x08000a30   Section        0  dma_stm32f10x.o(i.DMA1_Channel5_Event)
    i.DMA1_Channel5_IRQHandler               0x08000a34   Section        0  dma_stm32f10x.o(i.DMA1_Channel5_IRQHandler)
    i.DMA1_Channel6_Event                    0x08000a4c   Section        0  dma_stm32f10x.o(i.DMA1_Channel6_Event)
    i.DMA1_Channel6_IRQHandler               0x08000a50   Section        0  dma_stm32f10x.o(i.DMA1_Channel6_IRQHandler)
    i.DMA1_Channel7_Event                    0x08000a68   Section        0  dma_stm32f10x.o(i.DMA1_Channel7_Event)
    i.DMA1_Channel7_IRQHandler               0x08000a6c   Section        0  dma_stm32f10x.o(i.DMA1_Channel7_IRQHandler)
    i.DMA2_Channel1_Event                    0x08000a84   Section        0  dma_stm32f10x.o(i.DMA2_Channel1_Event)
    i.DMA2_Channel1_IRQHandler               0x08000a88   Section        0  dma_stm32f10x.o(i.DMA2_Channel1_IRQHandler)
    i.DMA2_Channel2_Event                    0x08000aa4   Section        0  dma_stm32f10x.o(i.DMA2_Channel2_Event)
    i.DMA2_Channel2_IRQHandler               0x08000aa8   Section        0  dma_stm32f10x.o(i.DMA2_Channel2_IRQHandler)
    i.DMA2_Channel3_Event                    0x08000ac4   Section        0  dma_stm32f10x.o(i.DMA2_Channel3_Event)
    i.DMA2_Channel3_IRQHandler               0x08000ac8   Section        0  dma_stm32f10x.o(i.DMA2_Channel3_IRQHandler)
    i.DMA2_Channel4_5_IRQHandler             0x08000ae4   Section        0  dma_stm32f10x.o(i.DMA2_Channel4_5_IRQHandler)
    i.DMA2_Channel4_Event                    0x08000b14   Section        0  dma_stm32f10x.o(i.DMA2_Channel4_Event)
    i.DMA2_Channel5_Event                    0x08000b16   Section        0  dma_stm32f10x.o(i.DMA2_Channel5_Event)
    i.EvrRtxEventFlagsWaitTimeout            0x08000b18   Section        0  rtx_evr.o(i.EvrRtxEventFlagsWaitTimeout)
    i.EvrRtxKernelError                      0x08000b1a   Section        0  rtx_evr.o(i.EvrRtxKernelError)
    i.EvrRtxKernelGetState                   0x08000b1c   Section        0  rtx_evr.o(i.EvrRtxKernelGetState)
    i.EvrRtxKernelInitialize                 0x08000b1e   Section        0  rtx_evr.o(i.EvrRtxKernelInitialize)
    i.EvrRtxKernelInitializeCompleted        0x08000b20   Section        0  rtx_evr.o(i.EvrRtxKernelInitializeCompleted)
    i.EvrRtxKernelStart                      0x08000b22   Section        0  rtx_evr.o(i.EvrRtxKernelStart)
    i.EvrRtxKernelStarted                    0x08000b24   Section        0  rtx_evr.o(i.EvrRtxKernelStarted)
    i.EvrRtxMemoryAlloc                      0x08000b26   Section        0  rtx_evr.o(i.EvrRtxMemoryAlloc)
    i.EvrRtxMemoryBlockAlloc                 0x08000b28   Section        0  rtx_evr.o(i.EvrRtxMemoryBlockAlloc)
    i.EvrRtxMemoryBlockFree                  0x08000b2a   Section        0  rtx_evr.o(i.EvrRtxMemoryBlockFree)
    i.EvrRtxMemoryBlockInit                  0x08000b2c   Section        0  rtx_evr.o(i.EvrRtxMemoryBlockInit)
    i.EvrRtxMemoryFree                       0x08000b2e   Section        0  rtx_evr.o(i.EvrRtxMemoryFree)
    i.EvrRtxMemoryInit                       0x08000b30   Section        0  rtx_evr.o(i.EvrRtxMemoryInit)
    i.EvrRtxMemoryPoolAllocTimeout           0x08000b32   Section        0  rtx_evr.o(i.EvrRtxMemoryPoolAllocTimeout)
    i.EvrRtxMessageQueueError                0x08000b34   Section        0  rtx_evr.o(i.EvrRtxMessageQueueError)
    i.EvrRtxMessageQueueGetTimeout           0x08000b36   Section        0  rtx_evr.o(i.EvrRtxMessageQueueGetTimeout)
    i.EvrRtxMessageQueueInsertPending        0x08000b38   Section        0  rtx_evr.o(i.EvrRtxMessageQueueInsertPending)
    i.EvrRtxMessageQueueInserted             0x08000b3a   Section        0  rtx_evr.o(i.EvrRtxMessageQueueInserted)
    i.EvrRtxMessageQueueNotInserted          0x08000b3c   Section        0  rtx_evr.o(i.EvrRtxMessageQueueNotInserted)
    i.EvrRtxMessageQueuePut                  0x08000b3e   Section        0  rtx_evr.o(i.EvrRtxMessageQueuePut)
    i.EvrRtxMessageQueuePutPending           0x08000b40   Section        0  rtx_evr.o(i.EvrRtxMessageQueuePutPending)
    i.EvrRtxMessageQueuePutTimeout           0x08000b42   Section        0  rtx_evr.o(i.EvrRtxMessageQueuePutTimeout)
    i.EvrRtxMessageQueueRetrieved            0x08000b44   Section        0  rtx_evr.o(i.EvrRtxMessageQueueRetrieved)
    i.EvrRtxMutexAcquire                     0x08000b46   Section        0  rtx_evr.o(i.EvrRtxMutexAcquire)
    i.EvrRtxMutexAcquirePending              0x08000b48   Section        0  rtx_evr.o(i.EvrRtxMutexAcquirePending)
    i.EvrRtxMutexAcquireTimeout              0x08000b4a   Section        0  rtx_evr.o(i.EvrRtxMutexAcquireTimeout)
    i.EvrRtxMutexAcquired                    0x08000b4c   Section        0  rtx_evr.o(i.EvrRtxMutexAcquired)
    i.EvrRtxMutexCreated                     0x08000b4e   Section        0  rtx_evr.o(i.EvrRtxMutexCreated)
    i.EvrRtxMutexDelete                      0x08000b50   Section        0  rtx_evr.o(i.EvrRtxMutexDelete)
    i.EvrRtxMutexDestroyed                   0x08000b52   Section        0  rtx_evr.o(i.EvrRtxMutexDestroyed)
    i.EvrRtxMutexError                       0x08000b54   Section        0  rtx_evr.o(i.EvrRtxMutexError)
    i.EvrRtxMutexNew                         0x08000b56   Section        0  rtx_evr.o(i.EvrRtxMutexNew)
    i.EvrRtxMutexNotAcquired                 0x08000b58   Section        0  rtx_evr.o(i.EvrRtxMutexNotAcquired)
    i.EvrRtxMutexRelease                     0x08000b5a   Section        0  rtx_evr.o(i.EvrRtxMutexRelease)
    i.EvrRtxMutexReleased                    0x08000b5c   Section        0  rtx_evr.o(i.EvrRtxMutexReleased)
    i.EvrRtxSemaphoreAcquireTimeout          0x08000b5e   Section        0  rtx_evr.o(i.EvrRtxSemaphoreAcquireTimeout)
    i.EvrRtxThreadBlocked                    0x08000b60   Section        0  rtx_evr.o(i.EvrRtxThreadBlocked)
    i.EvrRtxThreadCreated                    0x08000b62   Section        0  rtx_evr.o(i.EvrRtxThreadCreated)
    i.EvrRtxThreadDelayCompleted             0x08000b64   Section        0  rtx_evr.o(i.EvrRtxThreadDelayCompleted)
    i.EvrRtxThreadDestroyed                  0x08000b66   Section        0  rtx_evr.o(i.EvrRtxThreadDestroyed)
    i.EvrRtxThreadError                      0x08000b68   Section        0  rtx_evr.o(i.EvrRtxThreadError)
    i.EvrRtxThreadExit                       0x08000b6a   Section        0  rtx_evr.o(i.EvrRtxThreadExit)
    i.EvrRtxThreadFlagsWaitCompleted         0x08000b6c   Section        0  rtx_evr.o(i.EvrRtxThreadFlagsWaitCompleted)
    i.EvrRtxThreadFlagsWaitTimeout           0x08000b6e   Section        0  rtx_evr.o(i.EvrRtxThreadFlagsWaitTimeout)
    i.EvrRtxThreadJoined                     0x08000b70   Section        0  rtx_evr.o(i.EvrRtxThreadJoined)
    i.EvrRtxThreadSwitch                     0x08000b72   Section        0  rtx_evr.o(i.EvrRtxThreadSwitch)
    i.EvrRtxThreadUnblocked                  0x08000b74   Section        0  rtx_evr.o(i.EvrRtxThreadUnblocked)
    i.ExtTick_EnableIRQ                      0x08000b76   Section        0  rtx_kernel.o(i.ExtTick_EnableIRQ)
    ExtTick_EnableIRQ                        0x08000b77   Thumb Code    22  rtx_kernel.o(i.ExtTick_EnableIRQ)
    i.MessageQueuePut                        0x08000b8c   Section        0  rtx_msgqueue.o(i.MessageQueuePut)
    MessageQueuePut                          0x08000b8d   Thumb Code    66  rtx_msgqueue.o(i.MessageQueuePut)
    i.SetSysClock                            0x08000bce   Section        0  system_stm32f10x.o(i.SetSysClock)
    SetSysClock                              0x08000bcf   Thumb Code     4  system_stm32f10x.o(i.SetSysClock)
    i.SetSysClockTo72                        0x08000bd4   Section        0  system_stm32f10x.o(i.SetSysClockTo72)
    SetSysClockTo72                          0x08000bd5   Thumb Code   166  system_stm32f10x.o(i.SetSysClockTo72)
    i.SystemCoreClockUpdate                  0x08000c84   Section        0  system_stm32f10x.o(i.SystemCoreClockUpdate)
    i.SystemInit                             0x08000d00   Section        0  system_stm32f10x.o(i.SystemInit)
    i.ThreadFlagsCheck                       0x08000d50   Section        0  rtx_thread.o(i.ThreadFlagsCheck)
    ThreadFlagsCheck                         0x08000d51   Thumb Code    46  rtx_thread.o(i.ThreadFlagsCheck)
    i.TimerInsert                            0x08000d80   Section        0  rtx_timer.o(i.TimerInsert)
    TimerInsert                              0x08000d81   Thumb Code    50  rtx_timer.o(i.TimerInsert)
    i.TimerUnlink                            0x08000db8   Section        0  rtx_timer.o(i.TimerUnlink)
    TimerUnlink                              0x08000db9   Thumb Code    18  rtx_timer.o(i.TimerUnlink)
    i.USART1_IRQHandler                      0x08000dd0   Section        0  usart_stm32f10x.o(i.USART1_IRQHandler)
    i.USART_IRQHandler                       0x08000ddc   Section        0  usart_stm32f10x.o(i.USART_IRQHandler)
    i._mutex_acquire                         0x08000fde   Section        0  rtx_lib.o(i._mutex_acquire)
    __tagsym$$used                           0x08000fdf   Number         0  rtx_lib.o(i._mutex_acquire)
    i._mutex_free                            0x08000ffa   Section        0  rtx_lib.o(i._mutex_free)
    __tagsym$$used                           0x08000ffb   Number         0  rtx_lib.o(i._mutex_free)
    i._mutex_initialize                      0x08001000   Section        0  rtx_lib.o(i._mutex_initialize)
    __tagsym$$used                           0x08001001   Number         0  rtx_lib.o(i._mutex_initialize)
    i._mutex_release                         0x0800101e   Section        0  rtx_lib.o(i._mutex_release)
    __tagsym$$used                           0x0800101f   Number         0  rtx_lib.o(i._mutex_release)
    i._platform_post_stackheap_init          0x08001036   Section        0  rtx_lib.o(i._platform_post_stackheap_init)
    i.isr_queue_get                          0x0800103c   Section        0  rtx_system.o(i.isr_queue_get)
    isr_queue_get                            0x0800103d   Thumb Code    40  rtx_system.o(i.isr_queue_get)
    i.isr_queue_put                          0x08001068   Section        0  rtx_system.o(i.isr_queue_put)
    isr_queue_put                            0x08001069   Thumb Code    48  rtx_system.o(i.isr_queue_put)
    i.main                                   0x0800109c   Section        0  main.o(i.main)
    i.osKernelGetState                       0x080010b4   Section        0  rtx_kernel.o(i.osKernelGetState)
    i.osKernelInitialize                     0x080010f4   Section        0  rtx_kernel.o(i.osKernelInitialize)
    i.osKernelStart                          0x0800113c   Section        0  rtx_kernel.o(i.osKernelStart)
    i.osMessageQueuePut                      0x08001184   Section        0  rtx_msgqueue.o(i.osMessageQueuePut)
    i.osMutexAcquire                         0x08001244   Section        0  rtx_mutex.o(i.osMutexAcquire)
    i.osMutexDelete                          0x08001284   Section        0  rtx_mutex.o(i.osMutexDelete)
    i.osMutexNew                             0x080012c0   Section        0  rtx_mutex.o(i.osMutexNew)
    i.osMutexRelease                         0x08001310   Section        0  rtx_mutex.o(i.osMutexRelease)
    i.osRtxErrorNotify                       0x0800134c   Section        0  rtx_config.o(i.osRtxErrorNotify)
    i.osRtxIdleThread                        0x0800134e   Section        0  rtx_config.o(i.osRtxIdleThread)
    i.osRtxMemoryAlloc                       0x08001350   Section        0  rtx_memory.o(i.osRtxMemoryAlloc)
    i.osRtxMemoryFree                        0x080013ce   Section        0  rtx_memory.o(i.osRtxMemoryFree)
    i.osRtxMemoryInit                        0x08001422   Section        0  rtx_memory.o(i.osRtxMemoryInit)
    i.osRtxMemoryPoolAlloc                   0x0800145e   Section        0  rtx_mempool.o(i.osRtxMemoryPoolAlloc)
    i.osRtxMemoryPoolFree                    0x0800149a   Section        0  rtx_mempool.o(i.osRtxMemoryPoolFree)
    i.osRtxMemoryPoolInit                    0x080014ea   Section        0  rtx_mempool.o(i.osRtxMemoryPoolInit)
    i.osRtxMutexOwnerRelease                 0x08001532   Section        0  rtx_mutex.o(i.osRtxMutexOwnerRelease)
    i.osRtxPendSV_Handler                    0x08001584   Section        0  rtx_system.o(i.osRtxPendSV_Handler)
    i.osRtxPostProcess                       0x080015d0   Section        0  rtx_system.o(i.osRtxPostProcess)
    i.osRtxSysTimerAckIRQ                    0x08001608   Section        0  rtx_system.o(i.osRtxSysTimerAckIRQ)
    i.osRtxSysTimerEnable                    0x08001610   Section        0  rtx_system.o(i.osRtxSysTimerEnable)
    i.osRtxSysTimerSetup                     0x0800161c   Section        0  rtx_system.o(i.osRtxSysTimerSetup)
    i.osRtxThreadBlock                       0x0800164c   Section        0  rtx_thread.o(i.osRtxThreadBlock)
    i.osRtxThreadDelayInsert                 0x0800167c   Section        0  rtx_thread.o(i.osRtxThreadDelayInsert)
    i.osRtxThreadDelayRemove                 0x080016d8   Section        0  rtx_thread.o(i.osRtxThreadDelayRemove)
    i.osRtxThreadDelayTick                   0x08001738   Section        0  rtx_thread.o(i.osRtxThreadDelayTick)
    i.osRtxThreadDispatch                    0x080017f8   Section        0  rtx_thread.o(i.osRtxThreadDispatch)
    i.osRtxThreadFree                        0x0800186c   Section        0  rtx_thread.o(i.osRtxThreadFree)
    osRtxThreadFree                          0x0800186d   Thumb Code    78  rtx_thread.o(i.osRtxThreadFree)
    i.osRtxThreadListGet                     0x080018c0   Section        0  rtx_thread.o(i.osRtxThreadListGet)
    i.osRtxThreadListPut                     0x080018d8   Section        0  rtx_thread.o(i.osRtxThreadListPut)
    i.osRtxThreadListRemove                  0x08001902   Section        0  rtx_thread.o(i.osRtxThreadListRemove)
    i.osRtxThreadListRoot                    0x0800191a   Section        0  rtx_thread.o(i.osRtxThreadListRoot)
    i.osRtxThreadListSort                    0x0800192a   Section        0  rtx_thread.o(i.osRtxThreadListSort)
    i.osRtxThreadPostProcess                 0x08001954   Section        0  rtx_thread.o(i.osRtxThreadPostProcess)
    i.osRtxThreadReadyPut                    0x08001994   Section        0  rtx_thread.o(i.osRtxThreadReadyPut)
    i.osRtxThreadRegPtr                      0x080019a4   Section        0  rtx_thread.o(i.osRtxThreadRegPtr)
    i.osRtxThreadStackCheck                  0x080019ac   Section        0  rtx_thread.o(i.osRtxThreadStackCheck)
    i.osRtxThreadSwitch                      0x080019d4   Section        0  rtx_thread.o(i.osRtxThreadSwitch)
    i.osRtxThreadWaitEnter                   0x080019f4   Section        0  rtx_thread.o(i.osRtxThreadWaitEnter)
    i.osRtxThreadWaitExit                    0x08001a44   Section        0  rtx_thread.o(i.osRtxThreadWaitExit)
    i.osRtxTick_Handler                      0x08001a78   Section        0  rtx_system.o(i.osRtxTick_Handler)
    i.osRtxTimerTick                         0x08001af4   Section        0  rtx_timer.o(i.osRtxTimerTick)
    i.osThreadExit                           0x08001b4c   Section        0  rtx_thread.o(i.osThreadExit)
    i.os_kernel_is_active                    0x08001b68   Section        0  rtx_lib.o(i.os_kernel_is_active)
    os_kernel_is_active                      0x08001b69   Thumb Code    32  rtx_lib.o(i.os_kernel_is_active)
    i.svcRtxKernelGetState                   0x08001b8c   Section        0  rtx_kernel.o(i.svcRtxKernelGetState)
    i.svcRtxKernelInitialize                 0x08001ba0   Section        0  rtx_kernel.o(i.svcRtxKernelInitialize)
    i.svcRtxKernelStart                      0x08001d60   Section        0  rtx_kernel.o(i.svcRtxKernelStart)
    i.svcRtxMessageQueuePut                  0x08001df8   Section        0  rtx_msgqueue.o(i.svcRtxMessageQueuePut)
    i.svcRtxMutexAcquire                     0x08001efc   Section        0  rtx_mutex.o(i.svcRtxMutexAcquire)
    i.svcRtxMutexDelete                      0x08001fe0   Section        0  rtx_mutex.o(i.svcRtxMutexDelete)
    i.svcRtxMutexNew                         0x080020b4   Section        0  rtx_mutex.o(i.svcRtxMutexNew)
    i.svcRtxMutexRelease                     0x0800214c   Section        0  rtx_mutex.o(i.svcRtxMutexRelease)
    i.svcRtxThreadExit                       0x08002248   Section        0  rtx_thread.o(i.svcRtxThreadExit)
    i.svcRtxThreadNew                        0x080022bc   Section        0  rtx_thread.o(i.svcRtxThreadNew)
    .constdata                               0x080024d8   Section       36  rtx_lib.o(.constdata)
    os_idle_thread_attr                      0x080024d8   Data          36  rtx_lib.o(.constdata)
    .constdata                               0x080024fc   Section       36  rtx_lib.o(.constdata)
    os_timer_thread_attr                     0x080024fc   Data          36  rtx_lib.o(.constdata)
    .constdata                               0x08002520   Section       24  rtx_lib.o(.constdata)
    os_timer_mq_attr                         0x08002520   Data          24  rtx_lib.o(.constdata)
    .constdata                               0x08002538   Section        4  rtx_lib.o(.constdata)
    .constdata                               0x0800253c   Section       60  usart_stm32f10x.o(.constdata)
    usart_driver_version                     0x0800253c   Data           4  usart_stm32f10x.o(.constdata)
    USART1_Resources                         0x08002540   Data          56  usart_stm32f10x.o(.constdata)
    .constdata                               0x08002578   Section        8  usart_stm32f10x.o(.constdata)
    USART1_tx                                0x08002578   Data           8  usart_stm32f10x.o(.constdata)
    .constdata                               0x08002580   Section        8  usart_stm32f10x.o(.constdata)
    USART1_rx                                0x08002580   Data           8  usart_stm32f10x.o(.constdata)
    .conststrlit                             0x08002588   Section       11  rtx_kernel.o(.conststrlit)
    .rodata                                  0x08002594   Section      104  rtx_lib.o(.rodata)
    __tagsym$$used                           0x08002594   Number         0  rtx_lib.o(.rodata)
    .bss.os                                  0x20000000   Section     4096  rtx_lib.o(.bss.os)
    os_mem                                   0x20000000   Data        4096  rtx_lib.o(.bss.os)
    .bss.os                                  0x20001000   Section       64  rtx_lib.o(.bss.os)
    os_isr_queue                             0x20001000   Data          64  rtx_lib.o(.bss.os)
    .bss.os.msgqueue.cb                      0x20001040   Section       52  rtx_lib.o(.bss.os.msgqueue.cb)
    os_timer_mq_cb                           0x20001040   Data          52  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.msgqueue.mem                     0x20001074   Section       80  rtx_lib.o(.bss.os.msgqueue.mem)
    os_timer_mq_data                         0x20001074   Data          80  rtx_lib.o(.bss.os.msgqueue.mem)
    .bss.os.thread.cb                        0x200010c4   Section       68  rtx_lib.o(.bss.os.thread.cb)
    os_idle_thread_cb                        0x200010c4   Data          68  rtx_lib.o(.bss.os.thread.cb)
    .bss.os.thread.cb                        0x20001108   Section       68  rtx_lib.o(.bss.os.thread.cb)
    os_timer_thread_cb                       0x20001108   Data          68  rtx_lib.o(.bss.os.thread.cb)
    .bss.os.thread.stack                     0x20001150   Section      200  rtx_lib.o(.bss.os.thread.stack)
    os_idle_thread_stack                     0x20001150   Data         200  rtx_lib.o(.bss.os.thread.stack)
    .bss.os.thread.stack                     0x20001218   Section      200  rtx_lib.o(.bss.os.thread.stack)
    os_timer_thread_stack                    0x20001218   Data         200  rtx_lib.o(.bss.os.thread.stack)
    .data                                    0x200012e0   Section        1  rtx_lib.o(.data)
    os_kernel_active                         0x200012e0   Data           1  rtx_lib.o(.data)
    .data                                    0x200012e4   Section       20  system_stm32f10x.o(.data)
    .data.os                                 0x200012f8   Section      168  rtx_kernel.o(.data.os)
    .bss                                     0x200013a0   Section       20  usart_stm32f10x.o(.bss)
    USART1_Info                              0x200013a0   Data          20  usart_stm32f10x.o(.bss)
    .bss                                     0x200013b4   Section       36  usart_stm32f10x.o(.bss)
    USART1_TransferInfo                      0x200013b4   Data          36  usart_stm32f10x.o(.bss)
    .bss                                     0x200013d8   Section       96  libspace.o(.bss)
    HEAP                                     0x20001438   Section      512  startup_stm32f10x_hd.o(HEAP)
    Heap_Mem                                 0x20001438   Data         512  startup_stm32f10x_hd.o(HEAP)
    STACK                                    0x20001638   Section     1024  startup_stm32f10x_hd.o(STACK)
    Stack_Mem                                0x20001638   Data        1024  startup_stm32f10x_hd.o(STACK)
    __initial_sp                             0x20001a38   Data           0  startup_stm32f10x_hd.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$P$D$K$B$S$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$USESV6$~STKCKD$USESV7$~SHL$OSPACE$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __ARM_use_no_argv                        0x00000000   Number         0  main.o ABSOLUTE
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __Vectors_Size                           0x00000130   Number         0  startup_stm32f10x_hd.o ABSOLUTE
    __Vectors                                0x08000000   Data           4  startup_stm32f10x_hd.o(RESET)
    __Vectors_End                            0x08000130   Data           0  startup_stm32f10x_hd.o(RESET)
    __main                                   0x08000131   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x08000139   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x08000139   Thumb Code    44  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x08000139   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x08000147   Thumb Code     0  __scatter.o(!!!scatter)
    __decompress                             0x0800016d   Thumb Code    58  __dczerorl.o(!!dczerorl)
    __decompress0                            0x0800016d   Thumb Code     0  __dczerorl.o(!!dczerorl)
    __scatterload_zeroinit                   0x080001a9   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    __rt_lib_init                            0x080001c5   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_alloca_1                   0x080001c7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_argv_1                     0x080001c7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    __rt_lib_init_atexit_1                   0x080001c7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_clock_1                    0x080001c7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_cpp_1                      0x080001c7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_exceptions_1               0x080001c7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_fp_1                       0x080001c7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    __rt_lib_init_fp_trap_1                  0x080001c7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_getenv_1                   0x080001c7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_heap_1                     0x080001c7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    __rt_lib_init_lc_collate_1               0x080001c7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    __rt_lib_init_lc_ctype_1                 0x080001c7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_monetary_1              0x080001c7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_numeric_1               0x080001c7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_time_1                  0x080001c7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_preinit_1                  0x080001c7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_rand_1                     0x080001c7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_init_return                     0x080001c7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000033)
    __rt_lib_init_signal_1                   0x080001c7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_stdio_1                    0x080001c7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_user_alloc_1               0x080001c7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_shutdown                        0x080001c9   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x080001cb   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x080001cb   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x080001cb   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x080001cb   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x080001cb   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x080001cb   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x080001cb   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x080001cd   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x080001cd   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x080001cd   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_postsh_1                      0x080001d3   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    __rt_entry_li                            0x080001db   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_main                          0x080001df   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x080001df   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x080001e7   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x080001e9   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x080001e9   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x080001ed   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    __asm___13_rtx_mempool_c_7914b4c7__atomic_wr8 0x080001f5   Thumb Code    16  rtx_mempool.o(.emb_text)
    __asm___13_rtx_mempool_c_7914b4c7__atomic_set32 0x08000205   Thumb Code    20  rtx_mempool.o(.emb_text)
    __asm___13_rtx_mempool_c_7914b4c7__atomic_clr32 0x08000219   Thumb Code    22  rtx_mempool.o(.emb_text)
    __asm___13_rtx_mempool_c_7914b4c7__atomic_chk32_all 0x0800022f   Thumb Code    38  rtx_mempool.o(.emb_text)
    __asm___13_rtx_mempool_c_7914b4c7__atomic_chk32_any 0x08000255   Thumb Code    34  rtx_mempool.o(.emb_text)
    __asm___13_rtx_mempool_c_7914b4c7__atomic_inc32 0x08000277   Thumb Code    18  rtx_mempool.o(.emb_text)
    __asm___13_rtx_mempool_c_7914b4c7__atomic_inc32_lt 0x08000289   Thumb Code    30  rtx_mempool.o(.emb_text)
    __asm___13_rtx_mempool_c_7914b4c7__atomic_inc16_lt 0x080002a7   Thumb Code    30  rtx_mempool.o(.emb_text)
    __asm___13_rtx_mempool_c_7914b4c7__atomic_inc16_lim 0x080002c5   Thumb Code    26  rtx_mempool.o(.emb_text)
    __asm___13_rtx_mempool_c_7914b4c7__atomic_dec32_nz 0x080002df   Thumb Code    26  rtx_mempool.o(.emb_text)
    __asm___13_rtx_mempool_c_7914b4c7__atomic_dec16_nz 0x080002f9   Thumb Code    26  rtx_mempool.o(.emb_text)
    __asm___13_rtx_mempool_c_7914b4c7__atomic_link_get 0x08000313   Thumb Code    26  rtx_mempool.o(.emb_text)
    __asm___13_rtx_mempool_c_7914b4c7__atomic_link_put 0x0800032d   Thumb Code    28  rtx_mempool.o(.emb_text)
    __asm___14_rtx_msgqueue_c_3fd3b50e__atomic_wr8 0x08000349   Thumb Code    16  rtx_msgqueue.o(.emb_text)
    __asm___14_rtx_msgqueue_c_3fd3b50e__atomic_set32 0x08000359   Thumb Code    20  rtx_msgqueue.o(.emb_text)
    __asm___14_rtx_msgqueue_c_3fd3b50e__atomic_clr32 0x0800036d   Thumb Code    22  rtx_msgqueue.o(.emb_text)
    __asm___14_rtx_msgqueue_c_3fd3b50e__atomic_chk32_all 0x08000383   Thumb Code    38  rtx_msgqueue.o(.emb_text)
    __asm___14_rtx_msgqueue_c_3fd3b50e__atomic_chk32_any 0x080003a9   Thumb Code    34  rtx_msgqueue.o(.emb_text)
    __asm___14_rtx_msgqueue_c_3fd3b50e__atomic_inc32 0x080003cb   Thumb Code    18  rtx_msgqueue.o(.emb_text)
    __asm___14_rtx_msgqueue_c_3fd3b50e__atomic_inc32_lt 0x080003dd   Thumb Code    30  rtx_msgqueue.o(.emb_text)
    __asm___14_rtx_msgqueue_c_3fd3b50e__atomic_inc16_lt 0x080003fb   Thumb Code    30  rtx_msgqueue.o(.emb_text)
    __asm___14_rtx_msgqueue_c_3fd3b50e__atomic_inc16_lim 0x08000419   Thumb Code    26  rtx_msgqueue.o(.emb_text)
    __asm___14_rtx_msgqueue_c_3fd3b50e__atomic_dec32_nz 0x08000433   Thumb Code    26  rtx_msgqueue.o(.emb_text)
    __asm___14_rtx_msgqueue_c_3fd3b50e__atomic_dec16_nz 0x0800044d   Thumb Code    26  rtx_msgqueue.o(.emb_text)
    __asm___14_rtx_msgqueue_c_3fd3b50e__atomic_link_get 0x08000467   Thumb Code    26  rtx_msgqueue.o(.emb_text)
    __asm___14_rtx_msgqueue_c_3fd3b50e__atomic_link_put 0x08000481   Thumb Code    28  rtx_msgqueue.o(.emb_text)
    __asm___12_rtx_system_c_024f2f18__atomic_wr8 0x0800049d   Thumb Code    16  rtx_system.o(.emb_text)
    __asm___12_rtx_system_c_024f2f18__atomic_set32 0x080004ad   Thumb Code    20  rtx_system.o(.emb_text)
    __asm___12_rtx_system_c_024f2f18__atomic_clr32 0x080004c1   Thumb Code    22  rtx_system.o(.emb_text)
    __asm___12_rtx_system_c_024f2f18__atomic_chk32_all 0x080004d7   Thumb Code    38  rtx_system.o(.emb_text)
    __asm___12_rtx_system_c_024f2f18__atomic_chk32_any 0x080004fd   Thumb Code    34  rtx_system.o(.emb_text)
    __asm___12_rtx_system_c_024f2f18__atomic_inc32 0x0800051f   Thumb Code    18  rtx_system.o(.emb_text)
    __asm___12_rtx_system_c_024f2f18__atomic_inc32_lt 0x08000531   Thumb Code    30  rtx_system.o(.emb_text)
    __asm___12_rtx_system_c_024f2f18__atomic_inc16_lt 0x0800054f   Thumb Code    30  rtx_system.o(.emb_text)
    __asm___12_rtx_system_c_024f2f18__atomic_inc16_lim 0x0800056d   Thumb Code    26  rtx_system.o(.emb_text)
    __asm___12_rtx_system_c_024f2f18__atomic_dec32_nz 0x08000587   Thumb Code    26  rtx_system.o(.emb_text)
    __asm___12_rtx_system_c_024f2f18__atomic_dec16_nz 0x080005a1   Thumb Code    26  rtx_system.o(.emb_text)
    __asm___12_rtx_system_c_024f2f18__atomic_link_get 0x080005bb   Thumb Code    26  rtx_system.o(.emb_text)
    __asm___12_rtx_system_c_024f2f18__atomic_link_put 0x080005d5   Thumb Code    28  rtx_system.o(.emb_text)
    __asm___12_rtx_thread_c_add96be5__atomic_wr8 0x080005f1   Thumb Code    16  rtx_thread.o(.emb_text)
    __asm___12_rtx_thread_c_add96be5__atomic_set32 0x08000601   Thumb Code    20  rtx_thread.o(.emb_text)
    __asm___12_rtx_thread_c_add96be5__atomic_clr32 0x08000615   Thumb Code    22  rtx_thread.o(.emb_text)
    __asm___12_rtx_thread_c_add96be5__atomic_chk32_all 0x0800062b   Thumb Code    38  rtx_thread.o(.emb_text)
    __asm___12_rtx_thread_c_add96be5__atomic_chk32_any 0x08000651   Thumb Code    34  rtx_thread.o(.emb_text)
    __asm___12_rtx_thread_c_add96be5__atomic_inc32 0x08000673   Thumb Code    18  rtx_thread.o(.emb_text)
    __asm___12_rtx_thread_c_add96be5__atomic_inc32_lt 0x08000685   Thumb Code    30  rtx_thread.o(.emb_text)
    __asm___12_rtx_thread_c_add96be5__atomic_inc16_lt 0x080006a3   Thumb Code    30  rtx_thread.o(.emb_text)
    __asm___12_rtx_thread_c_add96be5__atomic_inc16_lim 0x080006c1   Thumb Code    26  rtx_thread.o(.emb_text)
    __asm___12_rtx_thread_c_add96be5__atomic_dec32_nz 0x080006db   Thumb Code    26  rtx_thread.o(.emb_text)
    __asm___12_rtx_thread_c_add96be5__atomic_dec16_nz 0x080006f5   Thumb Code    26  rtx_thread.o(.emb_text)
    __asm___12_rtx_thread_c_add96be5__atomic_link_get 0x0800070f   Thumb Code    26  rtx_thread.o(.emb_text)
    __asm___12_rtx_thread_c_add96be5__atomic_link_put 0x08000729   Thumb Code    28  rtx_thread.o(.emb_text)
    SVC_Handler                              0x08000745   Thumb Code    96  irq_cm3.o(.text)
    PendSV_Handler                           0x080007a5   Thumb Code    16  irq_cm3.o(.text)
    SysTick_Handler                          0x080007b5   Thumb Code    16  irq_cm3.o(.text)
    Reset_Handler                            0x080007cd   Thumb Code     8  startup_stm32f10x_hd.o(.text)
    NMI_Handler                              0x080007d5   Thumb Code     2  startup_stm32f10x_hd.o(.text)
    HardFault_Handler                        0x080007d7   Thumb Code     2  startup_stm32f10x_hd.o(.text)
    MemManage_Handler                        0x080007d9   Thumb Code     2  startup_stm32f10x_hd.o(.text)
    BusFault_Handler                         0x080007db   Thumb Code     2  startup_stm32f10x_hd.o(.text)
    UsageFault_Handler                       0x080007dd   Thumb Code     2  startup_stm32f10x_hd.o(.text)
    DebugMon_Handler                         0x080007e1   Thumb Code     2  startup_stm32f10x_hd.o(.text)
    ADC1_2_IRQHandler                        0x080007e7   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    ADC3_IRQHandler                          0x080007e7   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    CAN1_RX1_IRQHandler                      0x080007e7   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    CAN1_SCE_IRQHandler                      0x080007e7   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    EXTI0_IRQHandler                         0x080007e7   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    EXTI15_10_IRQHandler                     0x080007e7   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    EXTI1_IRQHandler                         0x080007e7   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    EXTI2_IRQHandler                         0x080007e7   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    EXTI3_IRQHandler                         0x080007e7   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    EXTI4_IRQHandler                         0x080007e7   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    EXTI9_5_IRQHandler                       0x080007e7   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    FLASH_IRQHandler                         0x080007e7   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    FSMC_IRQHandler                          0x080007e7   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    I2C1_ER_IRQHandler                       0x080007e7   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    I2C1_EV_IRQHandler                       0x080007e7   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    I2C2_ER_IRQHandler                       0x080007e7   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    I2C2_EV_IRQHandler                       0x080007e7   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    PVD_IRQHandler                           0x080007e7   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    RCC_IRQHandler                           0x080007e7   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    RTCAlarm_IRQHandler                      0x080007e7   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    RTC_IRQHandler                           0x080007e7   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    SDIO_IRQHandler                          0x080007e7   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    SPI1_IRQHandler                          0x080007e7   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    SPI2_IRQHandler                          0x080007e7   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    SPI3_IRQHandler                          0x080007e7   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    TAMPER_IRQHandler                        0x080007e7   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    TIM1_BRK_IRQHandler                      0x080007e7   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    TIM1_CC_IRQHandler                       0x080007e7   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    TIM1_TRG_COM_IRQHandler                  0x080007e7   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    TIM1_UP_IRQHandler                       0x080007e7   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    TIM2_IRQHandler                          0x080007e7   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    TIM3_IRQHandler                          0x080007e7   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    TIM4_IRQHandler                          0x080007e7   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    TIM5_IRQHandler                          0x080007e7   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    TIM6_IRQHandler                          0x080007e7   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    TIM7_IRQHandler                          0x080007e7   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    TIM8_BRK_IRQHandler                      0x080007e7   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    TIM8_CC_IRQHandler                       0x080007e7   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    TIM8_TRG_COM_IRQHandler                  0x080007e7   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    TIM8_UP_IRQHandler                       0x080007e7   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    UART4_IRQHandler                         0x080007e7   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    UART5_IRQHandler                         0x080007e7   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    USART2_IRQHandler                        0x080007e7   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    USART3_IRQHandler                        0x080007e7   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    USBWakeUp_IRQHandler                     0x080007e7   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    USB_HP_CAN1_TX_IRQHandler                0x080007e7   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    USB_LP_CAN1_RX0_IRQHandler               0x080007e7   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    WWDG_IRQHandler                          0x080007e7   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    __user_initial_stackheap                 0x080007e9   Thumb Code     0  startup_stm32f10x_hd.o(.text)
    __aeabi_memcpy                           0x0800080d   Thumb Code     0  rt_memcpy_v6.o(.text)
    __rt_memcpy                              0x0800080d   Thumb Code   138  rt_memcpy_v6.o(.text)
    _memcpy_lastbytes                        0x08000873   Thumb Code     0  rt_memcpy_v6.o(.text)
    __aeabi_memclr4                          0x08000897   Thumb Code     0  rt_memclr_w.o(.text)
    __aeabi_memclr8                          0x08000897   Thumb Code     0  rt_memclr_w.o(.text)
    __rt_memclr_w                            0x08000897   Thumb Code    78  rt_memclr_w.o(.text)
    _memset_w                                0x0800089b   Thumb Code     0  rt_memclr_w.o(.text)
    __use_two_region_memory                  0x080008e5   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x080008e7   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x080008e9   Thumb Code     2  heapauxi.o(.text)
    __aeabi_memcpy4                          0x080008eb   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memcpy8                          0x080008eb   Thumb Code     0  rt_memcpy_w.o(.text)
    __rt_memcpy_w                            0x080008eb   Thumb Code   100  rt_memcpy_w.o(.text)
    _memcpy_lastbytes_aligned                0x08000933   Thumb Code     0  rt_memcpy_w.o(.text)
    __user_setup_stackheap                   0x0800094f   Thumb Code    74  sys_stackheap_outer.o(.text)
    exit                                     0x08000999   Thumb Code    18  exit.o(.text)
    __user_libspace                          0x080009ad   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x080009ad   Thumb Code     0  libspace.o(.text)
    _sys_exit                                0x080009b5   Thumb Code     8  sys_exit.o(.text)
    __I$use$semihosting                      0x080009c1   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x080009c1   Thumb Code     2  use_no_semi.o(.text)
    DMA1_Channel1_Event                      0x080009c3   Thumb Code     2  dma_stm32f10x.o(i.DMA1_Channel1_Event)
    __semihosting_library_function           0x080009c3   Thumb Code     0  indicate_semi.o(.text)
    DMA1_Channel1_IRQHandler                 0x080009c5   Thumb Code    18  dma_stm32f10x.o(i.DMA1_Channel1_IRQHandler)
    DMA1_Channel2_Event                      0x080009dd   Thumb Code     2  dma_stm32f10x.o(i.DMA1_Channel2_Event)
    DMA1_Channel2_IRQHandler                 0x080009e1   Thumb Code    20  dma_stm32f10x.o(i.DMA1_Channel2_IRQHandler)
    DMA1_Channel3_Event                      0x080009f9   Thumb Code     2  dma_stm32f10x.o(i.DMA1_Channel3_Event)
    DMA1_Channel3_IRQHandler                 0x080009fd   Thumb Code    20  dma_stm32f10x.o(i.DMA1_Channel3_IRQHandler)
    DMA1_Channel4_Event                      0x08000a15   Thumb Code     2  dma_stm32f10x.o(i.DMA1_Channel4_Event)
    DMA1_Channel4_IRQHandler                 0x08000a19   Thumb Code    20  dma_stm32f10x.o(i.DMA1_Channel4_IRQHandler)
    DMA1_Channel5_Event                      0x08000a31   Thumb Code     2  dma_stm32f10x.o(i.DMA1_Channel5_Event)
    DMA1_Channel5_IRQHandler                 0x08000a35   Thumb Code    20  dma_stm32f10x.o(i.DMA1_Channel5_IRQHandler)
    DMA1_Channel6_Event                      0x08000a4d   Thumb Code     2  dma_stm32f10x.o(i.DMA1_Channel6_Event)
    DMA1_Channel6_IRQHandler                 0x08000a51   Thumb Code    20  dma_stm32f10x.o(i.DMA1_Channel6_IRQHandler)
    DMA1_Channel7_Event                      0x08000a69   Thumb Code     2  dma_stm32f10x.o(i.DMA1_Channel7_Event)
    DMA1_Channel7_IRQHandler                 0x08000a6d   Thumb Code    20  dma_stm32f10x.o(i.DMA1_Channel7_IRQHandler)
    DMA2_Channel1_Event                      0x08000a85   Thumb Code     2  dma_stm32f10x.o(i.DMA2_Channel1_Event)
    DMA2_Channel1_IRQHandler                 0x08000a89   Thumb Code    22  dma_stm32f10x.o(i.DMA2_Channel1_IRQHandler)
    DMA2_Channel2_Event                      0x08000aa5   Thumb Code     2  dma_stm32f10x.o(i.DMA2_Channel2_Event)
    DMA2_Channel2_IRQHandler                 0x08000aa9   Thumb Code    24  dma_stm32f10x.o(i.DMA2_Channel2_IRQHandler)
    DMA2_Channel3_Event                      0x08000ac5   Thumb Code     2  dma_stm32f10x.o(i.DMA2_Channel3_Event)
    DMA2_Channel3_IRQHandler                 0x08000ac9   Thumb Code    24  dma_stm32f10x.o(i.DMA2_Channel3_IRQHandler)
    DMA2_Channel4_5_IRQHandler               0x08000ae5   Thumb Code    44  dma_stm32f10x.o(i.DMA2_Channel4_5_IRQHandler)
    DMA2_Channel4_Event                      0x08000b15   Thumb Code     2  dma_stm32f10x.o(i.DMA2_Channel4_Event)
    DMA2_Channel5_Event                      0x08000b17   Thumb Code     2  dma_stm32f10x.o(i.DMA2_Channel5_Event)
    EvrRtxEventFlagsWaitTimeout              0x08000b19   Thumb Code     2  rtx_evr.o(i.EvrRtxEventFlagsWaitTimeout)
    EvrRtxKernelError                        0x08000b1b   Thumb Code     2  rtx_evr.o(i.EvrRtxKernelError)
    EvrRtxKernelGetState                     0x08000b1d   Thumb Code     2  rtx_evr.o(i.EvrRtxKernelGetState)
    EvrRtxKernelInitialize                   0x08000b1f   Thumb Code     2  rtx_evr.o(i.EvrRtxKernelInitialize)
    EvrRtxKernelInitializeCompleted          0x08000b21   Thumb Code     2  rtx_evr.o(i.EvrRtxKernelInitializeCompleted)
    EvrRtxKernelStart                        0x08000b23   Thumb Code     2  rtx_evr.o(i.EvrRtxKernelStart)
    EvrRtxKernelStarted                      0x08000b25   Thumb Code     2  rtx_evr.o(i.EvrRtxKernelStarted)
    EvrRtxMemoryAlloc                        0x08000b27   Thumb Code     2  rtx_evr.o(i.EvrRtxMemoryAlloc)
    EvrRtxMemoryBlockAlloc                   0x08000b29   Thumb Code     2  rtx_evr.o(i.EvrRtxMemoryBlockAlloc)
    EvrRtxMemoryBlockFree                    0x08000b2b   Thumb Code     2  rtx_evr.o(i.EvrRtxMemoryBlockFree)
    EvrRtxMemoryBlockInit                    0x08000b2d   Thumb Code     2  rtx_evr.o(i.EvrRtxMemoryBlockInit)
    EvrRtxMemoryFree                         0x08000b2f   Thumb Code     2  rtx_evr.o(i.EvrRtxMemoryFree)
    EvrRtxMemoryInit                         0x08000b31   Thumb Code     2  rtx_evr.o(i.EvrRtxMemoryInit)
    EvrRtxMemoryPoolAllocTimeout             0x08000b33   Thumb Code     2  rtx_evr.o(i.EvrRtxMemoryPoolAllocTimeout)
    EvrRtxMessageQueueError                  0x08000b35   Thumb Code     2  rtx_evr.o(i.EvrRtxMessageQueueError)
    EvrRtxMessageQueueGetTimeout             0x08000b37   Thumb Code     2  rtx_evr.o(i.EvrRtxMessageQueueGetTimeout)
    EvrRtxMessageQueueInsertPending          0x08000b39   Thumb Code     2  rtx_evr.o(i.EvrRtxMessageQueueInsertPending)
    EvrRtxMessageQueueInserted               0x08000b3b   Thumb Code     2  rtx_evr.o(i.EvrRtxMessageQueueInserted)
    EvrRtxMessageQueueNotInserted            0x08000b3d   Thumb Code     2  rtx_evr.o(i.EvrRtxMessageQueueNotInserted)
    EvrRtxMessageQueuePut                    0x08000b3f   Thumb Code     2  rtx_evr.o(i.EvrRtxMessageQueuePut)
    EvrRtxMessageQueuePutPending             0x08000b41   Thumb Code     2  rtx_evr.o(i.EvrRtxMessageQueuePutPending)
    EvrRtxMessageQueuePutTimeout             0x08000b43   Thumb Code     2  rtx_evr.o(i.EvrRtxMessageQueuePutTimeout)
    EvrRtxMessageQueueRetrieved              0x08000b45   Thumb Code     2  rtx_evr.o(i.EvrRtxMessageQueueRetrieved)
    EvrRtxMutexAcquire                       0x08000b47   Thumb Code     2  rtx_evr.o(i.EvrRtxMutexAcquire)
    EvrRtxMutexAcquirePending                0x08000b49   Thumb Code     2  rtx_evr.o(i.EvrRtxMutexAcquirePending)
    EvrRtxMutexAcquireTimeout                0x08000b4b   Thumb Code     2  rtx_evr.o(i.EvrRtxMutexAcquireTimeout)
    EvrRtxMutexAcquired                      0x08000b4d   Thumb Code     2  rtx_evr.o(i.EvrRtxMutexAcquired)
    EvrRtxMutexCreated                       0x08000b4f   Thumb Code     2  rtx_evr.o(i.EvrRtxMutexCreated)
    EvrRtxMutexDelete                        0x08000b51   Thumb Code     2  rtx_evr.o(i.EvrRtxMutexDelete)
    EvrRtxMutexDestroyed                     0x08000b53   Thumb Code     2  rtx_evr.o(i.EvrRtxMutexDestroyed)
    EvrRtxMutexError                         0x08000b55   Thumb Code     2  rtx_evr.o(i.EvrRtxMutexError)
    EvrRtxMutexNew                           0x08000b57   Thumb Code     2  rtx_evr.o(i.EvrRtxMutexNew)
    EvrRtxMutexNotAcquired                   0x08000b59   Thumb Code     2  rtx_evr.o(i.EvrRtxMutexNotAcquired)
    EvrRtxMutexRelease                       0x08000b5b   Thumb Code     2  rtx_evr.o(i.EvrRtxMutexRelease)
    EvrRtxMutexReleased                      0x08000b5d   Thumb Code     2  rtx_evr.o(i.EvrRtxMutexReleased)
    EvrRtxSemaphoreAcquireTimeout            0x08000b5f   Thumb Code     2  rtx_evr.o(i.EvrRtxSemaphoreAcquireTimeout)
    EvrRtxThreadBlocked                      0x08000b61   Thumb Code     2  rtx_evr.o(i.EvrRtxThreadBlocked)
    EvrRtxThreadCreated                      0x08000b63   Thumb Code     2  rtx_evr.o(i.EvrRtxThreadCreated)
    EvrRtxThreadDelayCompleted               0x08000b65   Thumb Code     2  rtx_evr.o(i.EvrRtxThreadDelayCompleted)
    EvrRtxThreadDestroyed                    0x08000b67   Thumb Code     2  rtx_evr.o(i.EvrRtxThreadDestroyed)
    EvrRtxThreadError                        0x08000b69   Thumb Code     2  rtx_evr.o(i.EvrRtxThreadError)
    EvrRtxThreadExit                         0x08000b6b   Thumb Code     2  rtx_evr.o(i.EvrRtxThreadExit)
    EvrRtxThreadFlagsWaitCompleted           0x08000b6d   Thumb Code     2  rtx_evr.o(i.EvrRtxThreadFlagsWaitCompleted)
    EvrRtxThreadFlagsWaitTimeout             0x08000b6f   Thumb Code     2  rtx_evr.o(i.EvrRtxThreadFlagsWaitTimeout)
    EvrRtxThreadJoined                       0x08000b71   Thumb Code     2  rtx_evr.o(i.EvrRtxThreadJoined)
    EvrRtxThreadSwitch                       0x08000b73   Thumb Code     2  rtx_evr.o(i.EvrRtxThreadSwitch)
    EvrRtxThreadUnblocked                    0x08000b75   Thumb Code     2  rtx_evr.o(i.EvrRtxThreadUnblocked)
    SystemCoreClockUpdate                    0x08000c85   Thumb Code   106  system_stm32f10x.o(i.SystemCoreClockUpdate)
    SystemInit                               0x08000d01   Thumb Code    64  system_stm32f10x.o(i.SystemInit)
    USART1_IRQHandler                        0x08000dd1   Thumb Code     6  usart_stm32f10x.o(i.USART1_IRQHandler)
    USART_IRQHandler                         0x08000ddd   Thumb Code   514  usart_stm32f10x.o(i.USART_IRQHandler)
    _mutex_acquire                           0x08000fdf   Thumb Code    28  rtx_lib.o(i._mutex_acquire)
    _mutex_free                              0x08000ffb   Thumb Code     6  rtx_lib.o(i._mutex_free)
    _mutex_initialize                        0x08001001   Thumb Code    30  rtx_lib.o(i._mutex_initialize)
    _mutex_release                           0x0800101f   Thumb Code    24  rtx_lib.o(i._mutex_release)
    _platform_post_stackheap_init            0x08001037   Thumb Code     4  rtx_lib.o(i._platform_post_stackheap_init)
    main                                     0x0800109d   Thumb Code    22  main.o(i.main)
    osKernelGetState                         0x080010b5   Thumb Code    60  rtx_kernel.o(i.osKernelGetState)
    osKernelInitialize                       0x080010f5   Thumb Code    68  rtx_kernel.o(i.osKernelInitialize)
    osKernelStart                            0x0800113d   Thumb Code    68  rtx_kernel.o(i.osKernelStart)
    osMessageQueuePut                        0x08001185   Thumb Code   186  rtx_msgqueue.o(i.osMessageQueuePut)
    osMutexAcquire                           0x08001245   Thumb Code    60  rtx_mutex.o(i.osMutexAcquire)
    osMutexDelete                            0x08001285   Thumb Code    54  rtx_mutex.o(i.osMutexDelete)
    osMutexNew                               0x080012c1   Thumb Code    74  rtx_mutex.o(i.osMutexNew)
    osMutexRelease                           0x08001311   Thumb Code    54  rtx_mutex.o(i.osMutexRelease)
    osRtxErrorNotify                         0x0800134d   Thumb Code     2  rtx_config.o(i.osRtxErrorNotify)
    osRtxIdleThread                          0x0800134f   Thumb Code     2  rtx_config.o(i.osRtxIdleThread)
    osRtxMemoryAlloc                         0x08001351   Thumb Code   126  rtx_memory.o(i.osRtxMemoryAlloc)
    osRtxMemoryFree                          0x080013cf   Thumb Code    84  rtx_memory.o(i.osRtxMemoryFree)
    osRtxMemoryInit                          0x08001423   Thumb Code    60  rtx_memory.o(i.osRtxMemoryInit)
    osRtxMemoryPoolAlloc                     0x0800145f   Thumb Code    60  rtx_mempool.o(i.osRtxMemoryPoolAlloc)
    osRtxMemoryPoolFree                      0x0800149b   Thumb Code    80  rtx_mempool.o(i.osRtxMemoryPoolFree)
    osRtxMemoryPoolInit                      0x080014eb   Thumb Code    72  rtx_mempool.o(i.osRtxMemoryPoolInit)
    osRtxMutexOwnerRelease                   0x08001533   Thumb Code    82  rtx_mutex.o(i.osRtxMutexOwnerRelease)
    osRtxPendSV_Handler                      0x08001585   Thumb Code    70  rtx_system.o(i.osRtxPendSV_Handler)
    osRtxPostProcess                         0x080015d1   Thumb Code    46  rtx_system.o(i.osRtxPostProcess)
    osRtxSysTimerAckIRQ                      0x08001609   Thumb Code     8  rtx_system.o(i.osRtxSysTimerAckIRQ)
    osRtxSysTimerEnable                      0x08001611   Thumb Code    10  rtx_system.o(i.osRtxSysTimerEnable)
    osRtxSysTimerSetup                       0x0800161d   Thumb Code    34  rtx_system.o(i.osRtxSysTimerSetup)
    osRtxThreadBlock                         0x0800164d   Thumb Code    44  rtx_thread.o(i.osRtxThreadBlock)
    osRtxThreadDelayInsert                   0x0800167d   Thumb Code    86  rtx_thread.o(i.osRtxThreadDelayInsert)
    osRtxThreadDelayRemove                   0x080016d9   Thumb Code    92  rtx_thread.o(i.osRtxThreadDelayRemove)
    osRtxThreadDelayTick                     0x08001739   Thumb Code   188  rtx_thread.o(i.osRtxThreadDelayTick)
    osRtxThreadDispatch                      0x080017f9   Thumb Code   110  rtx_thread.o(i.osRtxThreadDispatch)
    osRtxThreadListGet                       0x080018c1   Thumb Code    24  rtx_thread.o(i.osRtxThreadListGet)
    osRtxThreadListPut                       0x080018d9   Thumb Code    42  rtx_thread.o(i.osRtxThreadListPut)
    osRtxThreadListRemove                    0x08001903   Thumb Code    24  rtx_thread.o(i.osRtxThreadListRemove)
    osRtxThreadListRoot                      0x0800191b   Thumb Code    16  rtx_thread.o(i.osRtxThreadListRoot)
    osRtxThreadListSort                      0x0800192b   Thumb Code    42  rtx_thread.o(i.osRtxThreadListSort)
    osRtxThreadPostProcess                   0x08001955   Thumb Code    64  rtx_thread.o(i.osRtxThreadPostProcess)
    osRtxThreadReadyPut                      0x08001995   Thumb Code    12  rtx_thread.o(i.osRtxThreadReadyPut)
    osRtxThreadRegPtr                        0x080019a5   Thumb Code     6  rtx_thread.o(i.osRtxThreadRegPtr)
    osRtxThreadStackCheck                    0x080019ad   Thumb Code    32  rtx_thread.o(i.osRtxThreadStackCheck)
    osRtxThreadSwitch                        0x080019d5   Thumb Code    26  rtx_thread.o(i.osRtxThreadSwitch)
    osRtxThreadWaitEnter                     0x080019f5   Thumb Code    76  rtx_thread.o(i.osRtxThreadWaitEnter)
    osRtxThreadWaitExit                      0x08001a45   Thumb Code    52  rtx_thread.o(i.osRtxThreadWaitExit)
    osRtxTick_Handler                        0x08001a79   Thumb Code   120  rtx_system.o(i.osRtxTick_Handler)
    osRtxTimerTick                           0x08001af5   Thumb Code    82  rtx_timer.o(i.osRtxTimerTick)
    osThreadExit                             0x08001b4d   Thumb Code    22  rtx_thread.o(i.osThreadExit)
    svcRtxKernelGetState                     0x08001b8d   Thumb Code    14  rtx_kernel.o(i.svcRtxKernelGetState)
    svcRtxKernelInitialize                   0x08001ba1   Thumb Code   434  rtx_kernel.o(i.svcRtxKernelInitialize)
    svcRtxKernelStart                        0x08001d61   Thumb Code   134  rtx_kernel.o(i.svcRtxKernelStart)
    svcRtxMessageQueuePut                    0x08001df9   Thumb Code   256  rtx_msgqueue.o(i.svcRtxMessageQueuePut)
    svcRtxMutexAcquire                       0x08001efd   Thumb Code   224  rtx_mutex.o(i.svcRtxMutexAcquire)
    svcRtxMutexDelete                        0x08001fe1   Thumb Code   206  rtx_mutex.o(i.svcRtxMutexDelete)
    svcRtxMutexNew                           0x080020b5   Thumb Code   148  rtx_mutex.o(i.svcRtxMutexNew)
    svcRtxMutexRelease                       0x0800214d   Thumb Code   246  rtx_mutex.o(i.svcRtxMutexRelease)
    svcRtxThreadExit                         0x08002249   Thumb Code   112  rtx_thread.o(i.svcRtxThreadExit)
    svcRtxThreadNew                          0x080022bd   Thumb Code   518  rtx_thread.o(i.svcRtxThreadNew)
    osRtxUserSVC                             0x08002538   Data           4  rtx_lib.o(.constdata)
    osRtxConfig                              0x08002594   Data         104  rtx_lib.o(.rodata)
    Region$$Table$$Base                      0x080025fc   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x0800261c   Number         0  anon$$obj.o(Region$$Table)
    SystemCoreClock                          0x200012e4   Data           4  system_stm32f10x.o(.data)
    AHBPrescTable                            0x200012e8   Data          16  system_stm32f10x.o(.data)
    osRtxInfo                                0x200012f8   Data         168  rtx_kernel.o(.data.os)
    __libspace_start                         0x200013d8   Data          96  libspace.o(.bss)
    __temporary_stack_top$libspace           0x20001438   Data           0  libspace.o(.bss)



==============================================================================

Memory Map of the image

  Image Entry point : 0x080007cd

  Load Region LR_1 (Base: 0x08000000, Size: 0x000039bc, Max: 0xffffffff, ABSOLUTE, COMPRESSED[0x0000265c])

    Execution Region ER_RO (Base: 0x08000000, Size: 0x0000261c, Max: 0xffffffff, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x00000130   Data   RO         3455    RESET               startup_stm32f10x_hd.o
    0x08000130   0x00000008   Code   RO         3518  * !!!main             c_w.l(__main.o)
    0x08000138   0x00000034   Code   RO         3677    !!!scatter          c_w.l(__scatter.o)
    0x0800016c   0x0000003a   Code   RO         3675    !!dczerorl          c_w.l(__dczerorl.o)
    0x080001a6   0x00000002   PAD
    0x080001a8   0x0000001c   Code   RO         3679    !!handler_zi        c_w.l(__scatter_zi.o)
    0x080001c4   0x00000002   Code   RO         3545    .ARM.Collect$$libinit$$00000000  c_w.l(libinit.o)
    0x080001c6   0x00000000   Code   RO         3552    .ARM.Collect$$libinit$$00000002  c_w.l(libinit2.o)
    0x080001c6   0x00000000   Code   RO         3554    .ARM.Collect$$libinit$$00000004  c_w.l(libinit2.o)
    0x080001c6   0x00000000   Code   RO         3557    .ARM.Collect$$libinit$$0000000A  c_w.l(libinit2.o)
    0x080001c6   0x00000000   Code   RO         3559    .ARM.Collect$$libinit$$0000000C  c_w.l(libinit2.o)
    0x080001c6   0x00000000   Code   RO         3561    .ARM.Collect$$libinit$$0000000E  c_w.l(libinit2.o)
    0x080001c6   0x00000000   Code   RO         3564    .ARM.Collect$$libinit$$00000011  c_w.l(libinit2.o)
    0x080001c6   0x00000000   Code   RO         3566    .ARM.Collect$$libinit$$00000013  c_w.l(libinit2.o)
    0x080001c6   0x00000000   Code   RO         3568    .ARM.Collect$$libinit$$00000015  c_w.l(libinit2.o)
    0x080001c6   0x00000000   Code   RO         3570    .ARM.Collect$$libinit$$00000017  c_w.l(libinit2.o)
    0x080001c6   0x00000000   Code   RO         3572    .ARM.Collect$$libinit$$00000019  c_w.l(libinit2.o)
    0x080001c6   0x00000000   Code   RO         3574    .ARM.Collect$$libinit$$0000001B  c_w.l(libinit2.o)
    0x080001c6   0x00000000   Code   RO         3576    .ARM.Collect$$libinit$$0000001D  c_w.l(libinit2.o)
    0x080001c6   0x00000000   Code   RO         3578    .ARM.Collect$$libinit$$0000001F  c_w.l(libinit2.o)
    0x080001c6   0x00000000   Code   RO         3580    .ARM.Collect$$libinit$$00000021  c_w.l(libinit2.o)
    0x080001c6   0x00000000   Code   RO         3582    .ARM.Collect$$libinit$$00000023  c_w.l(libinit2.o)
    0x080001c6   0x00000000   Code   RO         3584    .ARM.Collect$$libinit$$00000025  c_w.l(libinit2.o)
    0x080001c6   0x00000000   Code   RO         3588    .ARM.Collect$$libinit$$0000002C  c_w.l(libinit2.o)
    0x080001c6   0x00000000   Code   RO         3590    .ARM.Collect$$libinit$$0000002E  c_w.l(libinit2.o)
    0x080001c6   0x00000000   Code   RO         3592    .ARM.Collect$$libinit$$00000030  c_w.l(libinit2.o)
    0x080001c6   0x00000000   Code   RO         3594    .ARM.Collect$$libinit$$00000032  c_w.l(libinit2.o)
    0x080001c6   0x00000002   Code   RO         3595    .ARM.Collect$$libinit$$00000033  c_w.l(libinit2.o)
    0x080001c8   0x00000002   Code   RO         3615    .ARM.Collect$$libshutdown$$00000000  c_w.l(libshutdown.o)
    0x080001ca   0x00000000   Code   RO         3628    .ARM.Collect$$libshutdown$$00000002  c_w.l(libshutdown2.o)
    0x080001ca   0x00000000   Code   RO         3630    .ARM.Collect$$libshutdown$$00000004  c_w.l(libshutdown2.o)
    0x080001ca   0x00000000   Code   RO         3633    .ARM.Collect$$libshutdown$$00000007  c_w.l(libshutdown2.o)
    0x080001ca   0x00000000   Code   RO         3636    .ARM.Collect$$libshutdown$$0000000A  c_w.l(libshutdown2.o)
    0x080001ca   0x00000000   Code   RO         3638    .ARM.Collect$$libshutdown$$0000000C  c_w.l(libshutdown2.o)
    0x080001ca   0x00000000   Code   RO         3641    .ARM.Collect$$libshutdown$$0000000F  c_w.l(libshutdown2.o)
    0x080001ca   0x00000002   Code   RO         3642    .ARM.Collect$$libshutdown$$00000010  c_w.l(libshutdown2.o)
    0x080001cc   0x00000000   Code   RO         3520    .ARM.Collect$$rtentry$$00000000  c_w.l(__rtentry.o)
    0x080001cc   0x00000000   Code   RO         3524    .ARM.Collect$$rtentry$$00000002  c_w.l(__rtentry2.o)
    0x080001cc   0x00000006   Code   RO         3536    .ARM.Collect$$rtentry$$00000004  c_w.l(__rtentry4.o)
    0x080001d2   0x00000008   Code   RO         3525    .ARM.Collect$$rtentry$$00000008  c_w.l(__rtentry2.o)
    0x080001da   0x00000004   Code   RO         3527    .ARM.Collect$$rtentry$$0000000A  c_w.l(__rtentry2.o)
    0x080001de   0x00000000   Code   RO         3529    .ARM.Collect$$rtentry$$0000000C  c_w.l(__rtentry2.o)
    0x080001de   0x00000008   Code   RO         3530    .ARM.Collect$$rtentry$$0000000D  c_w.l(__rtentry2.o)
    0x080001e6   0x00000002   Code   RO         3549    .ARM.Collect$$rtexit$$00000000  c_w.l(rtexit.o)
    0x080001e8   0x00000000   Code   RO         3597    .ARM.Collect$$rtexit$$00000002  c_w.l(rtexit2.o)
    0x080001e8   0x00000004   Code   RO         3598    .ARM.Collect$$rtexit$$00000003  c_w.l(rtexit2.o)
    0x080001ec   0x00000006   Code   RO         3599    .ARM.Collect$$rtexit$$00000004  c_w.l(rtexit2.o)
    0x080001f2   0x00000002   PAD
    0x080001f4   0x00000154   Code   RO         1770    .emb_text           rtx_mempool.o
    0x08000348   0x00000154   Code   RO         1924    .emb_text           rtx_msgqueue.o
    0x0800049c   0x00000154   Code   RO         2300    .emb_text           rtx_system.o
    0x080005f0   0x00000154   Code   RO         2397    .emb_text           rtx_thread.o
    0x08000744   0x00000088   Code   RO          197    .text               irq_cm3.o
    0x080007cc   0x00000040   Code   RO         3456  * .text               startup_stm32f10x_hd.o
    0x0800080c   0x0000008a   Code   RO         3508    .text               c_w.l(rt_memcpy_v6.o)
    0x08000896   0x0000004e   Code   RO         3512    .text               c_w.l(rt_memclr_w.o)
    0x080008e4   0x00000006   Code   RO         3516    .text               c_w.l(heapauxi.o)
    0x080008ea   0x00000064   Code   RO         3521    .text               c_w.l(rt_memcpy_w.o)
    0x0800094e   0x0000004a   Code   RO         3538    .text               c_w.l(sys_stackheap_outer.o)
    0x08000998   0x00000012   Code   RO         3540    .text               c_w.l(exit.o)
    0x080009aa   0x00000002   PAD
    0x080009ac   0x00000008   Code   RO         3546    .text               c_w.l(libspace.o)
    0x080009b4   0x0000000c   Code   RO         3607    .text               c_w.l(sys_exit.o)
    0x080009c0   0x00000002   Code   RO         3618    .text               c_w.l(use_no_semi.o)
    0x080009c2   0x00000000   Code   RO         3620    .text               c_w.l(indicate_semi.o)
    0x080009c2   0x00000002   Code   RO         3213    i.DMA1_Channel1_Event  dma_stm32f10x.o
    0x080009c4   0x00000018   Code   RO         3214    i.DMA1_Channel1_IRQHandler  dma_stm32f10x.o
    0x080009dc   0x00000002   Code   RO         3215    i.DMA1_Channel2_Event  dma_stm32f10x.o
    0x080009de   0x00000002   PAD
    0x080009e0   0x00000018   Code   RO         3216    i.DMA1_Channel2_IRQHandler  dma_stm32f10x.o
    0x080009f8   0x00000002   Code   RO         3217    i.DMA1_Channel3_Event  dma_stm32f10x.o
    0x080009fa   0x00000002   PAD
    0x080009fc   0x00000018   Code   RO         3218    i.DMA1_Channel3_IRQHandler  dma_stm32f10x.o
    0x08000a14   0x00000002   Code   RO         3219    i.DMA1_Channel4_Event  dma_stm32f10x.o
    0x08000a16   0x00000002   PAD
    0x08000a18   0x00000018   Code   RO         3220    i.DMA1_Channel4_IRQHandler  dma_stm32f10x.o
    0x08000a30   0x00000002   Code   RO         3221    i.DMA1_Channel5_Event  dma_stm32f10x.o
    0x08000a32   0x00000002   PAD
    0x08000a34   0x00000018   Code   RO         3222    i.DMA1_Channel5_IRQHandler  dma_stm32f10x.o
    0x08000a4c   0x00000002   Code   RO         3223    i.DMA1_Channel6_Event  dma_stm32f10x.o
    0x08000a4e   0x00000002   PAD
    0x08000a50   0x00000018   Code   RO         3224    i.DMA1_Channel6_IRQHandler  dma_stm32f10x.o
    0x08000a68   0x00000002   Code   RO         3225    i.DMA1_Channel7_Event  dma_stm32f10x.o
    0x08000a6a   0x00000002   PAD
    0x08000a6c   0x00000018   Code   RO         3226    i.DMA1_Channel7_IRQHandler  dma_stm32f10x.o
    0x08000a84   0x00000002   Code   RO         3227    i.DMA2_Channel1_Event  dma_stm32f10x.o
    0x08000a86   0x00000002   PAD
    0x08000a88   0x0000001c   Code   RO         3228    i.DMA2_Channel1_IRQHandler  dma_stm32f10x.o
    0x08000aa4   0x00000002   Code   RO         3229    i.DMA2_Channel2_Event  dma_stm32f10x.o
    0x08000aa6   0x00000002   PAD
    0x08000aa8   0x0000001c   Code   RO         3230    i.DMA2_Channel2_IRQHandler  dma_stm32f10x.o
    0x08000ac4   0x00000002   Code   RO         3231    i.DMA2_Channel3_Event  dma_stm32f10x.o
    0x08000ac6   0x00000002   PAD
    0x08000ac8   0x0000001c   Code   RO         3232    i.DMA2_Channel3_IRQHandler  dma_stm32f10x.o
    0x08000ae4   0x00000030   Code   RO         3233    i.DMA2_Channel4_5_IRQHandler  dma_stm32f10x.o
    0x08000b14   0x00000002   Code   RO         3234    i.DMA2_Channel4_Event  dma_stm32f10x.o
    0x08000b16   0x00000002   Code   RO         3236    i.DMA2_Channel5_Event  dma_stm32f10x.o
    0x08000b18   0x00000002   Code   RO          429    i.EvrRtxEventFlagsWaitTimeout  rtx_evr.o
    0x08000b1a   0x00000002   Code   RO          430    i.EvrRtxKernelError  rtx_evr.o
    0x08000b1c   0x00000002   Code   RO          432    i.EvrRtxKernelGetState  rtx_evr.o
    0x08000b1e   0x00000002   Code   RO          438    i.EvrRtxKernelInitialize  rtx_evr.o
    0x08000b20   0x00000002   Code   RO          439    i.EvrRtxKernelInitializeCompleted  rtx_evr.o
    0x08000b22   0x00000002   Code   RO          446    i.EvrRtxKernelStart  rtx_evr.o
    0x08000b24   0x00000002   Code   RO          447    i.EvrRtxKernelStarted  rtx_evr.o
    0x08000b26   0x00000002   Code   RO          452    i.EvrRtxMemoryAlloc  rtx_evr.o
    0x08000b28   0x00000002   Code   RO          453    i.EvrRtxMemoryBlockAlloc  rtx_evr.o
    0x08000b2a   0x00000002   Code   RO          454    i.EvrRtxMemoryBlockFree  rtx_evr.o
    0x08000b2c   0x00000002   Code   RO          455    i.EvrRtxMemoryBlockInit  rtx_evr.o
    0x08000b2e   0x00000002   Code   RO          456    i.EvrRtxMemoryFree  rtx_evr.o
    0x08000b30   0x00000002   Code   RO          457    i.EvrRtxMemoryInit  rtx_evr.o
    0x08000b32   0x00000002   Code   RO          461    i.EvrRtxMemoryPoolAllocTimeout  rtx_evr.o
    0x08000b34   0x00000002   Code   RO          479    i.EvrRtxMessageQueueError  rtx_evr.o
    0x08000b36   0x00000002   Code   RO          487    i.EvrRtxMessageQueueGetTimeout  rtx_evr.o
    0x08000b38   0x00000002   Code   RO          488    i.EvrRtxMessageQueueInsertPending  rtx_evr.o
    0x08000b3a   0x00000002   Code   RO          489    i.EvrRtxMessageQueueInserted  rtx_evr.o
    0x08000b3c   0x00000002   Code   RO          491    i.EvrRtxMessageQueueNotInserted  rtx_evr.o
    0x08000b3e   0x00000002   Code   RO          493    i.EvrRtxMessageQueuePut  rtx_evr.o
    0x08000b40   0x00000002   Code   RO          494    i.EvrRtxMessageQueuePutPending  rtx_evr.o
    0x08000b42   0x00000002   Code   RO          495    i.EvrRtxMessageQueuePutTimeout  rtx_evr.o
    0x08000b44   0x00000002   Code   RO          498    i.EvrRtxMessageQueueRetrieved  rtx_evr.o
    0x08000b46   0x00000002   Code   RO          499    i.EvrRtxMutexAcquire  rtx_evr.o
    0x08000b48   0x00000002   Code   RO          500    i.EvrRtxMutexAcquirePending  rtx_evr.o
    0x08000b4a   0x00000002   Code   RO          501    i.EvrRtxMutexAcquireTimeout  rtx_evr.o
    0x08000b4c   0x00000002   Code   RO          502    i.EvrRtxMutexAcquired  rtx_evr.o
    0x08000b4e   0x00000002   Code   RO          503    i.EvrRtxMutexCreated  rtx_evr.o
    0x08000b50   0x00000002   Code   RO          504    i.EvrRtxMutexDelete  rtx_evr.o
    0x08000b52   0x00000002   Code   RO          505    i.EvrRtxMutexDestroyed  rtx_evr.o
    0x08000b54   0x00000002   Code   RO          506    i.EvrRtxMutexError  rtx_evr.o
    0x08000b56   0x00000002   Code   RO          509    i.EvrRtxMutexNew    rtx_evr.o
    0x08000b58   0x00000002   Code   RO          510    i.EvrRtxMutexNotAcquired  rtx_evr.o
    0x08000b5a   0x00000002   Code   RO          511    i.EvrRtxMutexRelease  rtx_evr.o
    0x08000b5c   0x00000002   Code   RO          512    i.EvrRtxMutexReleased  rtx_evr.o
    0x08000b5e   0x00000002   Code   RO          515    i.EvrRtxSemaphoreAcquireTimeout  rtx_evr.o
    0x08000b60   0x00000002   Code   RO          527    i.EvrRtxThreadBlocked  rtx_evr.o
    0x08000b62   0x00000002   Code   RO          528    i.EvrRtxThreadCreated  rtx_evr.o
    0x08000b64   0x00000002   Code   RO          530    i.EvrRtxThreadDelayCompleted  rtx_evr.o
    0x08000b66   0x00000002   Code   RO          532    i.EvrRtxThreadDestroyed  rtx_evr.o
    0x08000b68   0x00000002   Code   RO          536    i.EvrRtxThreadError  rtx_evr.o
    0x08000b6a   0x00000002   Code   RO          537    i.EvrRtxThreadExit  rtx_evr.o
    0x08000b6c   0x00000002   Code   RO          544    i.EvrRtxThreadFlagsWaitCompleted  rtx_evr.o
    0x08000b6e   0x00000002   Code   RO          547    i.EvrRtxThreadFlagsWaitTimeout  rtx_evr.o
    0x08000b70   0x00000002   Code   RO          557    i.EvrRtxThreadJoined  rtx_evr.o
    0x08000b72   0x00000002   Code   RO          564    i.EvrRtxThreadSwitch  rtx_evr.o
    0x08000b74   0x00000002   Code   RO          566    i.EvrRtxThreadUnblocked  rtx_evr.o
    0x08000b76   0x00000016   Code   RO         1433    i.ExtTick_EnableIRQ  rtx_kernel.o
    0x08000b8c   0x00000042   Code   RO         1926    i.MessageQueuePut   rtx_msgqueue.o
    0x08000bce   0x00000004   Code   RO         3463    i.SetSysClock       system_stm32f10x.o
    0x08000bd2   0x00000002   PAD
    0x08000bd4   0x000000b0   Code   RO         3464    i.SetSysClockTo72   system_stm32f10x.o
    0x08000c84   0x0000007c   Code   RO         3465    i.SystemCoreClockUpdate  system_stm32f10x.o
    0x08000d00   0x00000050   Code   RO         3466    i.SystemInit        system_stm32f10x.o
    0x08000d50   0x0000002e   Code   RO         2398    i.ThreadFlagsCheck  rtx_thread.o
    0x08000d7e   0x00000002   PAD
    0x08000d80   0x00000038   Code   RO         2803    i.TimerInsert       rtx_timer.o
    0x08000db8   0x00000018   Code   RO         2805    i.TimerUnlink       rtx_timer.o
    0x08000dd0   0x0000000c   Code   RO         2959    i.USART1_IRQHandler  usart_stm32f10x.o
    0x08000ddc   0x00000202   Code   RO         2973    i.USART_IRQHandler  usart_stm32f10x.o
    0x08000fde   0x0000001c   Code   RO         1649    i._mutex_acquire    rtx_lib.o
    0x08000ffa   0x00000006   Code   RO         1650    i._mutex_free       rtx_lib.o
    0x08001000   0x0000001e   Code   RO         1651    i._mutex_initialize  rtx_lib.o
    0x0800101e   0x00000018   Code   RO         1652    i._mutex_release    rtx_lib.o
    0x08001036   0x00000004   Code   RO         1653    i._platform_post_stackheap_init  rtx_lib.o
    0x0800103a   0x00000002   PAD
    0x0800103c   0x0000002c   Code   RO         2302    i.isr_queue_get     rtx_system.o
    0x08001068   0x00000034   Code   RO         2303    i.isr_queue_put     rtx_system.o
    0x0800109c   0x00000016   Code   RO            4    i.main              main.o
    0x080010b2   0x00000002   PAD
    0x080010b4   0x00000040   Code   RO         1437    i.osKernelGetState  rtx_kernel.o
    0x080010f4   0x00000048   Code   RO         1442    i.osKernelInitialize  rtx_kernel.o
    0x0800113c   0x00000048   Code   RO         1446    i.osKernelStart     rtx_kernel.o
    0x08001184   0x000000c0   Code   RO         1936    i.osMessageQueuePut  rtx_msgqueue.o
    0x08001244   0x00000040   Code   RO         2091    i.osMutexAcquire    rtx_mutex.o
    0x08001284   0x0000003c   Code   RO         2092    i.osMutexDelete     rtx_mutex.o
    0x080012c0   0x00000050   Code   RO         2095    i.osMutexNew        rtx_mutex.o
    0x08001310   0x0000003c   Code   RO         2096    i.osMutexRelease    rtx_mutex.o
    0x0800134c   0x00000002   Code   RO         2923    i.osRtxErrorNotify  rtx_config.o
    0x0800134e   0x00000002   Code   RO         2924    i.osRtxIdleThread   rtx_config.o
    0x08001350   0x0000007e   Code   RO         1731    i.osRtxMemoryAlloc  rtx_memory.o
    0x080013ce   0x00000054   Code   RO         1732    i.osRtxMemoryFree   rtx_memory.o
    0x08001422   0x0000003c   Code   RO         1733    i.osRtxMemoryInit   rtx_memory.o
    0x0800145e   0x0000003c   Code   RO         1780    i.osRtxMemoryPoolAlloc  rtx_mempool.o
    0x0800149a   0x00000050   Code   RO         1781    i.osRtxMemoryPoolFree  rtx_mempool.o
    0x080014ea   0x00000048   Code   RO         1782    i.osRtxMemoryPoolInit  rtx_mempool.o
    0x08001532   0x00000052   Code   RO         2097    i.osRtxMutexOwnerRelease  rtx_mutex.o
    0x08001584   0x0000004c   Code   RO         2304    i.osRtxPendSV_Handler  rtx_system.o
    0x080015d0   0x00000038   Code   RO         2305    i.osRtxPostProcess  rtx_system.o
    0x08001608   0x00000008   Code   RO         2306    i.osRtxSysTimerAckIRQ  rtx_system.o
    0x08001610   0x0000000a   Code   RO         2308    i.osRtxSysTimerEnable  rtx_system.o
    0x0800161a   0x00000002   PAD
    0x0800161c   0x00000030   Code   RO         2311    i.osRtxSysTimerSetup  rtx_system.o
    0x0800164c   0x00000030   Code   RO         2401    i.osRtxThreadBlock  rtx_thread.o
    0x0800167c   0x0000005c   Code   RO         2402    i.osRtxThreadDelayInsert  rtx_thread.o
    0x080016d8   0x00000060   Code   RO         2403    i.osRtxThreadDelayRemove  rtx_thread.o
    0x08001738   0x000000c0   Code   RO         2404    i.osRtxThreadDelayTick  rtx_thread.o
    0x080017f8   0x00000074   Code   RO         2405    i.osRtxThreadDispatch  rtx_thread.o
    0x0800186c   0x00000054   Code   RO         2406    i.osRtxThreadFree   rtx_thread.o
    0x080018c0   0x00000018   Code   RO         2407    i.osRtxThreadListGet  rtx_thread.o
    0x080018d8   0x0000002a   Code   RO         2408    i.osRtxThreadListPut  rtx_thread.o
    0x08001902   0x00000018   Code   RO         2409    i.osRtxThreadListRemove  rtx_thread.o
    0x0800191a   0x00000010   Code   RO         2410    i.osRtxThreadListRoot  rtx_thread.o
    0x0800192a   0x0000002a   Code   RO         2411    i.osRtxThreadListSort  rtx_thread.o
    0x08001954   0x00000040   Code   RO         2413    i.osRtxThreadPostProcess  rtx_thread.o
    0x08001994   0x00000010   Code   RO         2414    i.osRtxThreadReadyPut  rtx_thread.o
    0x080019a4   0x00000006   Code   RO         2415    i.osRtxThreadRegPtr  rtx_thread.o
    0x080019aa   0x00000002   PAD
    0x080019ac   0x00000028   Code   RO         2416    i.osRtxThreadStackCheck  rtx_thread.o
    0x080019d4   0x00000020   Code   RO         2417    i.osRtxThreadSwitch  rtx_thread.o
    0x080019f4   0x00000050   Code   RO         2418    i.osRtxThreadWaitEnter  rtx_thread.o
    0x08001a44   0x00000034   Code   RO         2419    i.osRtxThreadWaitExit  rtx_thread.o
    0x08001a78   0x0000007c   Code   RO         2312    i.osRtxTick_Handler  rtx_system.o
    0x08001af4   0x00000058   Code   RO         2807    i.osRtxTimerTick    rtx_timer.o
    0x08001b4c   0x0000001c   Code   RO         2422    i.osThreadExit      rtx_thread.o
    0x08001b68   0x00000024   Code   RO         1654    i.os_kernel_is_active  rtx_lib.o
    0x08001b8c   0x00000014   Code   RO         1450    i.svcRtxKernelGetState  rtx_kernel.o
    0x08001ba0   0x000001c0   Code   RO         1455    i.svcRtxKernelInitialize  rtx_kernel.o
    0x08001d60   0x00000098   Code   RO         1459    i.svcRtxKernelStart  rtx_kernel.o
    0x08001df8   0x00000104   Code   RO         1947    i.svcRtxMessageQueuePut  rtx_msgqueue.o
    0x08001efc   0x000000e4   Code   RO         2098    i.svcRtxMutexAcquire  rtx_mutex.o
    0x08001fe0   0x000000d4   Code   RO         2099    i.svcRtxMutexDelete  rtx_mutex.o
    0x080020b4   0x00000098   Code   RO         2102    i.svcRtxMutexNew    rtx_mutex.o
    0x0800214c   0x000000fc   Code   RO         2103    i.svcRtxMutexRelease  rtx_mutex.o
    0x08002248   0x00000074   Code   RO         2443    i.svcRtxThreadExit  rtx_thread.o
    0x080022bc   0x0000021c   Code   RO         2456    i.svcRtxThreadNew   rtx_thread.o
    0x080024d8   0x00000024   Data   RO         1664    .constdata          rtx_lib.o
    0x080024fc   0x00000024   Data   RO         1665    .constdata          rtx_lib.o
    0x08002520   0x00000018   Data   RO         1666    .constdata          rtx_lib.o
    0x08002538   0x00000004   Data   RO         1667    .constdata          rtx_lib.o
    0x0800253c   0x0000003c   Data   RO         2985    .constdata          usart_stm32f10x.o
    0x08002578   0x00000008   Data   RO         2986    .constdata          usart_stm32f10x.o
    0x08002580   0x00000008   Data   RO         2987    .constdata          usart_stm32f10x.o
    0x08002588   0x0000000b   Data   RO         1462    .conststrlit        rtx_kernel.o
    0x08002593   0x00000001   PAD
    0x08002594   0x00000068   Data   RO         1670    .rodata             rtx_lib.o
    0x080025fc   0x00000020   Data   RO         3673    Region$$Table       anon$$obj.o


    Execution Region ER_RW (Base: 0x20000000, Size: 0x000013a0, Max: 0xffffffff, ABSOLUTE, COMPRESSED[0x00000040])

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x00001000   Data   RW         1655    .bss.os             rtx_lib.o
    0x20001000   0x00000040   Data   RW         1656    .bss.os             rtx_lib.o
    0x20001040   0x00000034   Data   RW         1658    .bss.os.msgqueue.cb  rtx_lib.o
    0x20001074   0x00000050   Data   RW         1659    .bss.os.msgqueue.mem  rtx_lib.o
    0x200010c4   0x00000044   Data   RW         1660    .bss.os.thread.cb   rtx_lib.o
    0x20001108   0x00000044   Data   RW         1661    .bss.os.thread.cb   rtx_lib.o
    0x2000114c   0x00000004   PAD
    0x20001150   0x000000c8   Data   RW         1662    .bss.os.thread.stack  rtx_lib.o
    0x20001218   0x000000c8   Data   RW         1663    .bss.os.thread.stack  rtx_lib.o
    0x200012e0   0x00000001   Data   RW         1669    .data               rtx_lib.o
    0x200012e1   0x00000003   PAD
    0x200012e4   0x00000014   Data   RW         3467    .data               system_stm32f10x.o
    0x200012f8   0x000000a8   Data   RW         1464    .data.os            rtx_kernel.o


    Execution Region ER_ZI (Base: 0x200013a0, Size: 0x00000698, Max: 0xffffffff, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x200013a0   0x00000014   Zero   RW         2983    .bss                usart_stm32f10x.o
    0x200013b4   0x00000024   Zero   RW         2984    .bss                usart_stm32f10x.o
    0x200013d8   0x00000060   Zero   RW         3547    .bss                c_w.l(libspace.o)
    0x20001438   0x00000200   Zero   RW         3454    HEAP                startup_stm32f10x_hd.o
    0x20001638   0x00000400   Zero   RW         3453    STACK               startup_stm32f10x_hd.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       324         48          0          0          0      12179   dma_stm32f10x.o
       136         10          0          0          0        544   irq_cm3.o
        22          0          0          0          0     211779   main.o
         4          0          0          0          0        849   rtx_config.o
         0          0          0          0          0      10760   rtx_delay.o
         0          0          0          0          0       4196   rtx_evflags.o
        94          0          0          0          0      32169   rtx_evr.o
       850         50         11        168          0      21311   rtx_kernel.o
       128          4        204       4829          0      11372   rtx_lib.o
       270          0          0          0          0       3195   rtx_memory.o
       552          0          0          0          0       3835   rtx_mempool.o
       858         10          0          0          0       9672   rtx_msgqueue.o
      1190         42          0          0          0       9467   rtx_mutex.o
       758         50          0          0          0      12054   rtx_system.o
      2136         84          0          0          0      20580   rtx_thread.o
       168         18          0          0          0       1725   rtx_timer.o
        64         26        304          0       1536        788   startup_stm32f10x_hd.o
       384         44          0         20          0       2781   system_stm32f10x.o
         0          0          0          0          0       6764   usart.o
       526          6         76          0         56       8259   usart_stm32f10x.o

    ----------------------------------------------------------------------
      8494        392        628       5024       1592     384279   Object Totals
         0          0         32          0          0          0   (incl. Generated)
        30          0          1          7          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

        58          0          0          0          0          0   __dczerorl.o
         8          0          0          0          0         68   __main.o
         0          0          0          0          0          0   __rtentry.o
        20          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        52          8          0          0          0          0   __scatter.o
        28          0          0          0          0          0   __scatter_zi.o
        18          0          0          0          0         80   exit.o
         6          0          0          0          0        152   heapauxi.o
         0          0          0          0          0          0   indicate_semi.o
         2          0          0          0          0          0   libinit.o
         2          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
        78          0          0          0          0         80   rt_memclr_w.o
       138          0          0          0          0         68   rt_memcpy_v6.o
       100          0          0          0          0         80   rt_memcpy_w.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
        12          4          0          0          0         68   sys_exit.o
        74          0          0          0          0         80   sys_stackheap_outer.o
         2          0          0          0          0         68   use_no_semi.o

    ----------------------------------------------------------------------
       634         16          0          0         96        812   Library Totals
         6          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       628         16          0          0         96        812   c_w.l

    ----------------------------------------------------------------------
       634         16          0          0         96        812   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

      9128        408        628       5024       1688     377287   Grand Totals
      9128        408        628         64       1688     377287   ELF Image Totals (compressed)
      9128        408        628         64          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                 9756 (   9.53kB)
    Total RW  Size (RW Data + ZI Data)              6712 (   6.55kB)
    Total ROM Size (Code + RO Data + RW Data)       9820 (   9.59kB)

==============================================================================

